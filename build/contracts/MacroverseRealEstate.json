{
  "contractName": "MacroverseRealEstate",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "domain",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "domain",
          "type": "string"
        }
      ],
      "name": "setTokenMetadataDomain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"}],\"name\":\"setTokenMetadataDomain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"burn(uint256)\":{\"notice\":\"Burn tokens at the direction of the owning contract.\"},\"constructor\":\"Deploy the backend, taking mint, burn, and set-user commands from the deployer. Use the given domain as the domain for token URIs.\",\"exists(uint256)\":{\"notice\":\"Publically expose a token existence test. Returns true if the given token is owned by someone, and false otherwise. Note that tokens sent to 0x0 but not burned may still exist.\"},\"mint(address,uint256)\":{\"notice\":\"Mint tokens at the direction of the owning contract.\"},\"setTokenMetadataDomain(string)\":{\"notice\":\"Allow this the owner to change the ERC721 metadata URI domain.\"}},\"notice\":\"The MacroverseRealEstate contract keeps track of who currently owns virtual real estate in the Macroverse world, at all scales. It supersedes the MacroverseStarRegistry. Registration and Macroverse-specific manipulation of tokens is accomplished through the MacroverseUniversalRegistry, which owns this contract. The split between this contract and the MacroverseUniversalRegistry exists to keep contract size under the limit. \"}},\"settings\":{\"compilationTarget\":{\"/z/home/anovak/workspace/macroverse/contracts/MacroverseRealEstate.sol\":\"MacroverseRealEstate\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/z/home/anovak/workspace/macroverse/contracts/MacroverseRealEstate.sol\":{\"keccak256\":\"0xf2200550a724aa4d8492a6a03955fb24090f14d9f5f8af45843b5c4761ce0873\",\"urls\":[\"bzz-raw://2c99b0748ecaa0e470f9e646d6a5308521203790614186e2e841d0522eb0cecd\",\"dweb:/ipfs/Qmc9nBcMywrHD9KrMyAMgsqcWH7zHuwTBgwCppgPcYTB2B\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x310e66ba9e43bfd0bc6110c06e4c98e86e8515a85a295031413931fafb347b92\",\"urls\":[\"bzz-raw://8e061529b96bf38743c4ea16b44d53e145b3f16ec0a68151b1a690f348aad944\",\"dweb:/ipfs/QmR2hKcGi5NUNp1bWvjwvdv6J71ySp7ih5Ey3WxWkiRWh8\"]},\"openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa8b9207237f43e1af0feb1423db95cabf05989b89ff0d903b148a6f01856253f\",\"urls\":[\"bzz-raw://94271c7aeba6023ca590bcd32b59328ce78eefb55f0792fc87bd2c9720f45c2c\",\"dweb:/ipfs/QmXbG6dvnSqLvAXUVK9d26Sfi9d2kFtpxpo7mAuQYhKXPN\"]},\"openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xbe8e555f0715f5c72a7227a966c5c83365c86ffa0bc22ebd45c7d4bcba799c10\",\"urls\":[\"bzz-raw://5b4616ee8b50a4d430ea80ccb37646a4167e4cd230254305c1d81ac99ba81180\",\"dweb:/ipfs/QmZ8MZGzc3vP7AFBRHC42S2LUQDRkf6ctkaeZYtxXcrq8a\"]},\"openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x9a3f19e755366eb30bc36dedf2e309b861005e878f540ffd280dad17fd95e5ef\",\"urls\":[\"bzz-raw://562479d9ae71bb8262e90af175a94cb27bfdd421dc683314f23bac4a97f1d329\",\"dweb:/ipfs/QmVXBdWjoFg2jCEbkQz1YU9HHEEC9uHxFohYFYqVEAD5Uj\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9f5f241611b89edba99d342a5e826697c2bf26a567cd51b20e991344511b23b6\",\"urls\":[\"bzz-raw://dc9566acec64b1816d4f003928b3da56affd8dcd3385c7ef645ee1854acdc41b\",\"dweb:/ipfs/QmafEvnB89VjQTAtFqoHSYvgSABPkGgxkYnW4YbpmYDhxS\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x4f55abd75e5810e4e46b904ae29404b84444c88d552c4cf07ed0206cd976b0e1\",\"urls\":[\"bzz-raw://4f1fc04f279a4211d56474024040d7216bb54eda45ac72980ddc920b6cc30fd1\",\"dweb:/ipfs/QmTneeDfqTRL5xRGhxGpTWwQT9w6k4T7tzFatVW59yoSE1\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x95fc09f929dfd151318a4f3e973f877c196c87c03900fa0f15048c172e28982e\",\"urls\":[\"bzz-raw://f48be5dda930948c9bc68e502fd4d6c3c64c0d3ac7410083c714ad6b93c8b501\",\"dweb:/ipfs/QmVd4kmQpwjBMDY2RjSU9KjVNjCpeXxAsCsmquSUT9CBFA\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x0997b97d4ffc324d94610dd0b7add924c9e7e004a4fe5eacaedd4d9e81e933b9\",\"urls\":[\"bzz-raw://13490d2ba4e79da7623786fe3fdd20fb67767306cc0d46082b122c81f1d85f6a\",\"dweb:/ipfs/QmUCXUBgfNTyVNf5oqe6YkcwU8PEQwVtzGsYfvgnFy81i8\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x5c0e995b71a0b174eb7ec65eac26b1793761582296a076fff4918d9d78fbbbab\",\"urls\":[\"bzz-raw://6c6e20a7553184897e922ee81e2af9edafefc2f8b9815b2b5107b360b59cf6c7\",\"dweb:/ipfs/QmbnR1P3zggLfmEixyw49JdEwFuoPeua6aEsM7ZxrNdGDK\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x5c734755014784fbde4c6cdcf1e600888b8486a0adea61bbfe54ef2c064f2e8f\",\"urls\":[\"bzz-raw://0ddd13b246b25bbca13490d8d280a6c6f0b407dbcc84cbb697f0088d25f56c5c\",\"dweb:/ipfs/QmbGQ6Fn8kwXJ8KtnNRDnouc2q7T5h2YXC9wtdiitykBKn\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xd1f3a17da013bb360dfcc4d7028b6a60e7d444ad4926bb37a84d8bfa83d12812\",\"urls\":[\"bzz-raw://97dc02aa518fdcef216bd3f4b00a8e555e5513eb4b144e56c60fcfc4768acfff\",\"dweb:/ipfs/QmTQ2Yt1DV64KZffS4jo8XxUzSS4TTeE3oc1oWvkfY6MiN\"]},\"openzeppelin-solidity/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0x339d44d088564e939dd10718e3ed84de2e2e45061a456ebe67d8a4588bbb25b6\",\"urls\":[\"bzz-raw://73b133977cecdc5cbd189c01644179a4aaa18ba28442a288569cde8a9e561e6a\",\"dweb:/ipfs/Qmb25zwL4da4RoXTKHNKSwJmK5XyKp8GUfD9fWrR8G1pwH\"]},\"openzeppelin-solidity/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x7a53737a1c46f7ebef6e2935e5f648b1a21ec528f08a3a351335415dc58d58eb\",\"urls\":[\"bzz-raw://c181aa68818fd339a3a74b06c0f0089f6847d5cd5cefc1ac1832bba3f03f36a3\",\"dweb:/ipfs/QmfLNKCzJbHwdApXAoqKCnWRLmVknsTZqjAc38szM9HZQC\"]},\"openzeppelin-solidity/contracts/utils/Strings.sol\":{\"keccak256\":\"0x7bbe50f9f617c8277b2dc55ec3bdfd5064c3403010826d196ff7ff0855881822\",\"urls\":[\"bzz-raw://87b5553ba56c1382ec72a19795265953f7a569844172906b68e622438f03c171\",\"dweb:/ipfs/QmdwJx8nX4Xg5wWGSRZ1yoiKGrQE2sr71CuTWAdKh5oVU2\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200295338038062002953833981810160405260208110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b5060408181018152601682527f4d6163726f7665727365205265616c2045737461746500000000000000000000602080840191909152815180830190925260038252624d524560e81b9082015290935091506200015590506301ffc9a760e01b6001600160e01b036200025316565b81516200016a906006906020850190620004f1565b50805162000180906007906020840190620004f1565b506200019c6380ac58cd60e01b6001600160e01b036200025316565b620001b7635b5e139f60e01b6001600160e01b036200025316565b620001d263780e9d6360e01b6001600160e01b036200025316565b5060009050620001ea6001600160e01b03620002d816565b600a80546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506200024c816001600160e01b03620002dd16565b5062000593565b6001600160e01b03198082161415620002b3576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b335b90565b46620003f882620002fa83620003fc602090811b6200115617901c565b60405160200180806768747470733a2f2f60c01b81525060080183805190602001908083835b60208310620003415780518252601f19909201916020918201910162000320565b51815160209384036101000a60001901801990921691161790526d2f7672652f76312f636861696e2f60901b919093019081528451600e90910192850191508083835b60208310620003a55780518252601f19909201916020918201910162000384565b6001836020036101000a03801982511681845116808217855250505050505090500180662f746f6b656e2f60c81b81525060070192505050604051602081830303815290604052620004e160201b60201c565b5050565b6060816200042357506040805180820190915260018152600360fc1b6020820152620004dc565b8160005b81156200043d57600101600a8204915062000427565b6060816001600160401b03811180156200045657600080fd5b506040519080825280601f01601f19166020018201604052801562000482576020820181803683370190505b50859350905060001982015b8315620004d657600a840660300160f81b82828060019003935081518110620004b357fe5b60200101906001600160f81b031916908160001a905350600a840493506200048e565b50925050505b919050565b8051620003f89060099060208401905b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200053457805160ff191683800117855562000564565b8280016001018555821562000564579182015b828111156200056457825182559160200191906001019062000547565b506200057292915062000576565b5090565b620002da91905b808211156200057257600081556001016200057d565b6123b080620005a36000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80636352211e116100c357806395d89b411161007c57806395d89b41146104b2578063a22cb465146104ba578063b88d4fde146104e8578063c87b56dd146105ae578063e985e9c5146105cb578063f2fde38b146105f957610158565b80636352211e146103b15780636c0360eb146103ce57806370a08231146103d6578063715018a6146103fc578063839dc732146104045780638da5cb5b146104aa57610158565b80632f745c59116101155780632f745c59146102cc57806340c10f19146102f857806342842e0e1461032457806342966c681461035a5780634f558e79146103775780634f6ccce71461039457610158565b806301ffc9a71461015d57806306fdde0314610198578063081812fc14610215578063095ea7b31461024e57806318160ddd1461027c57806323b872dd14610296575b600080fd5b6101846004803603602081101561017357600080fd5b50356001600160e01b03191661061f565b604080519115158252519081900360200190f35b6101a0610642565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101da5781810151838201526020016101c2565b50505050905090810190601f1680156102075780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102326004803603602081101561022b57600080fd5b50356106d9565b604080516001600160a01b039092168252519081900360200190f35b61027a6004803603604081101561026457600080fd5b506001600160a01b03813516906020013561073b565b005b610284610816565b60408051918252519081900360200190f35b61027a600480360360608110156102ac57600080fd5b506001600160a01b03813581169160208101359091169060400135610827565b610284600480360360408110156102e257600080fd5b506001600160a01b03813516906020013561087e565b61027a6004803603604081101561030e57600080fd5b506001600160a01b0381351690602001356108af565b61027a6004803603606081101561033a57600080fd5b506001600160a01b03813581169160208101359091169060400135610915565b61027a6004803603602081101561037057600080fd5b5035610930565b6101846004803603602081101561038d57600080fd5b5035610994565b610284600480360360208110156103aa57600080fd5b503561099f565b610232600480360360208110156103c757600080fd5b50356109bb565b6101a06109e9565b610284600480360360208110156103ec57600080fd5b50356001600160a01b0316610a4a565b61027a610ab2565b61027a6004803603602081101561041a57600080fd5b81019060208101813564010000000081111561043557600080fd5b82018360208201111561044757600080fd5b8035906020019184600183028401116401000000008311171561046957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610b54945050505050565b610232610bb5565b6101a0610bc4565b61027a600480360360408110156104d057600080fd5b506001600160a01b0381351690602001351515610c25565b61027a600480360360808110156104fe57600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561053957600080fd5b82018360208201111561054b57600080fd5b8035906020019184600183028401116401000000008311171561056d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d2a945050505050565b6101a0600480360360208110156105c457600080fd5b5035610d88565b610184600480360360408110156105e157600080fd5b506001600160a01b038135811691602001351661102f565b61027a6004803603602081101561060f57600080fd5b50356001600160a01b031661105d565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106ce5780601f106106a3576101008083540402835291602001916106ce565b820191906000526020600020905b8154815290600101906020018083116106b157829003601f168201915b505050505090505b90565b60006106e482611231565b61071f5760405162461bcd60e51b815260040180806020018281038252602c815260200180612285602c913960400191505060405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610746826109bb565b9050806001600160a01b0316836001600160a01b031614156107995760405162461bcd60e51b81526004018080602001828103825260218152602001806123296021913960400191505060405180910390fd5b806001600160a01b03166107ab611244565b6001600160a01b031614806107cc57506107cc816107c7611244565b61102f565b6108075760405162461bcd60e51b81526004018080602001828103825260388152602001806121d86038913960400191505060405180910390fd5b6108118383611248565b505050565b600061082260026112b6565b905090565b610838610832611244565b826112c1565b6108735760405162461bcd60e51b815260040180806020018281038252603181526020018061234a6031913960400191505060405180910390fd5b610811838383611365565b6001600160a01b03821660009081526001602052604081206108a6908363ffffffff6114c316565b90505b92915050565b6108b7611244565b600a546001600160a01b03908116911614610907576040805162461bcd60e51b815260206004820181905260248201526000805160206122b1833981519152604482015290519081900360640190fd5b61091182826114cf565b5050565b61081183838360405180602001604052806000815250610d2a565b610938611244565b600a546001600160a01b03908116911614610988576040805162461bcd60e51b815260206004820181905260248201526000805160206122b1833981519152604482015290519081900360640190fd5b61099181611609565b50565b60006108a982611231565b6000806109b360028463ffffffff6116e216565b509392505050565b60006108a98260405180606001604052806029815260200161223a602991396002919063ffffffff6116fe16565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106ce5780601f106106a3576101008083540402835291602001916106ce565b60006001600160a01b038216610a915760405162461bcd60e51b815260040180806020018281038252602a815260200180612210602a913960400191505060405180910390fd5b6001600160a01b03821660009081526001602052604090206108a9906112b6565b610aba611244565b600a546001600160a01b03908116911614610b0a576040805162461bcd60e51b815260206004820181905260248201526000805160206122b1833981519152604482015290519081900360640190fd5b600a546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600a80546001600160a01b0319169055565b610b5c611244565b600a546001600160a01b03908116911614610bac576040805162461bcd60e51b815260206004820181905260248201526000805160206122b1833981519152604482015290519081900360640190fd5b61099181611715565b600a546001600160a01b031690565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106ce5780601f106106a3576101008083540402835291602001916106ce565b610c2d611244565b6001600160a01b0316826001600160a01b03161415610c93576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060056000610ca0611244565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610ce4611244565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b610d3b610d35611244565b836112c1565b610d765760405162461bcd60e51b815260040180806020018281038252603181526020018061234a6031913960400191505060405180910390fd5b610d8284848484611816565b50505050565b6060610d9382611231565b610dce5760405162461bcd60e51b815260040180806020018281038252602f8152602001806122fa602f913960400191505060405180910390fd5b60008281526008602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610e635780601f10610e3857610100808354040283529160200191610e63565b820191906000526020600020905b815481529060010190602001808311610e4657829003601f168201915b505060095493945050505060026000196101006001841615020190911604610e8c57905061063d565b805115610f5d576009816040516020018083805460018160011615610100020316600290048015610ef45780601f10610ed2576101008083540402835291820191610ef4565b820191906000526020600020905b815481529060010190602001808311610ee0575b5050825160208401908083835b60208310610f205780518252601f199092019160209182019101610f01565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405291505061063d565b6009610f6884611156565b6040516020018083805460018160011615610100020316600290048015610fc65780601f10610fa4576101008083540402835291820191610fc6565b820191906000526020600020905b815481529060010190602001808311610fb2575b5050825160208401908083835b60208310610ff25780518252601f199092019160209182019101610fd3565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b611065611244565b600a546001600160a01b039081169116146110b5576040805162461bcd60e51b815260206004820181905260248201526000805160206122b1833981519152604482015290519081900360640190fd5b6001600160a01b0381166110fa5760405162461bcd60e51b81526004018080602001828103825260268152602001806121626026913960400191505060405180910390fd5b600a546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600a80546001600160a01b0319166001600160a01b0392909216919091179055565b60608161117b57506040805180820190915260018152600360fc1b602082015261063d565b8160005b811561119357600101600a8204915061117f565b60608167ffffffffffffffff811180156111ac57600080fd5b506040519080825280601f01601f1916602001820160405280156111d7576020820181803683370190505b50859350905060001982015b831561122857600a840660300160f81b8282806001900393508151811061120657fe5b60200101906001600160f81b031916908160001a905350600a840493506111e3565b50949350505050565b60006108a960028363ffffffff61186816565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061127d826109bb565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006108a982611874565b60006112cc82611231565b6113075760405162461bcd60e51b815260040180806020018281038252602c8152602001806121ac602c913960400191505060405180910390fd5b6000611312836109bb565b9050806001600160a01b0316846001600160a01b0316148061134d5750836001600160a01b0316611342846106d9565b6001600160a01b0316145b8061135d575061135d818561102f565b949350505050565b826001600160a01b0316611378826109bb565b6001600160a01b0316146113bd5760405162461bcd60e51b81526004018080602001828103825260298152602001806122d16029913960400191505060405180910390fd5b6001600160a01b0382166114025760405162461bcd60e51b81526004018080602001828103825260248152602001806121886024913960400191505060405180910390fd5b61140d838383610811565b611418600082611248565b6001600160a01b0383166000908152600160205260409020611440908263ffffffff61187816565b506001600160a01b0382166000908152600160205260409020611469908263ffffffff61188416565b5061147c6002828463ffffffff61189016565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006108a683836118a6565b6001600160a01b03821661152a576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b61153381611231565b15611585576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b61159160008383610811565b6001600160a01b03821660009081526001602052604090206115b9908263ffffffff61188416565b506115cc6002828463ffffffff61189016565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000611614826109bb565b905061162281600084610811565b61162d600083611248565b600082815260086020526040902054600260001961010060018416150201909116041561166b57600082815260086020526040812061166b91612031565b6001600160a01b0381166000908152600160205260409020611693908363ffffffff61187816565b506116a560028363ffffffff61190a16565b5060405182906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60008080806116f18686611916565b9097909650945050505050565b600061170b848484611991565b90505b9392505050565b466109118261172383611156565b60405160200180806768747470733a2f2f60c01b81525060080183805190602001908083835b602083106117685780518252601f199092019160209182019101611749565b51815160209384036101000a60001901801990921691161790526d2f7672652f76312f636861696e2f60901b919093019081528451600e90910192850191508083835b602083106117ca5780518252601f1990920191602091820191016117ab565b6001836020036101000a03801982511681845116808217855250505050505090500180662f746f6b656e2f60c81b81525060070192505050604051602081830303815290604052611a5b565b611821848484611365565b61182d84848484611a6e565b610d825760405162461bcd60e51b81526004018080602001828103825260328152602001806121306032913960400191505060405180910390fd5b60006108a68383611bee565b5490565b60006108a68383611c06565b60006108a68383611ccc565b600061170b84846001600160a01b038516611d16565b815460009082106118e85760405162461bcd60e51b815260040180806020018281038252602281526020018061210e6022913960400191505060405180910390fd5b8260000182815481106118f757fe5b9060005260206000200154905092915050565b60006108a68383611dad565b81546000908190831061195a5760405162461bcd60e51b81526004018080602001828103825260228152602001806122636022913960400191505060405180910390fd5b600084600001848154811061196b57fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008281526001840160205260408120548281611a2c5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156119f15781810151838201526020016119d9565b50505050905090810190601f168015611a1e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50846000016001820381548110611a3f57fe5b9060005260206000209060020201600101549150509392505050565b8051610911906009906020840190612075565b6000611a82846001600160a01b0316611e81565b611a8e5750600161135d565b6060611bb4630a85bd0160e11b611aa3611244565b88878760405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611b1c578181015183820152602001611b04565b50505050905090810190601f168015611b495780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050604051806060016040528060328152602001612130603291396001600160a01b038816919063ffffffff611eba16565b90506000818060200190516020811015611bcd57600080fd5b50516001600160e01b031916630a85bd0160e11b1492505050949350505050565b60009081526001919091016020526040902054151590565b60008181526001830160205260408120548015611cc25783546000198083019190810190600090879083908110611c3957fe5b9060005260206000200154905080876000018481548110611c5657fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080611c8657fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506108a9565b60009150506108a9565b6000611cd88383611bee565b611d0e575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556108a9565b5060006108a9565b600082815260018401602052604081205480611d7b57505060408051808201825283815260208082018481528654600181810189556000898152848120955160029093029095019182559151908201558654868452818801909252929091205561170e565b82856000016001830381548110611d8e57fe5b906000526020600020906002020160010181905550600091505061170e565b60008181526001830160205260408120548015611cc25783546000198083019190810190600090879083908110611de057fe5b9060005260206000209060020201905080876000018481548110611e0057fe5b600091825260208083208454600290930201918255600193840154918401919091558354825289830190526040902090840190558654879080611e3f57fe5b60008281526020808220600260001990940193840201828155600190810183905592909355888152898201909252604082209190915594506108a99350505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061135d575050151592915050565b606061170b84846000856060611ecf85611e81565b611f20576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310611f5f5780518252601f199092019160209182019101611f40565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611fc1576040519150601f19603f3d011682016040523d82523d6000602084013e611fc6565b606091505b50915091508115611fda57915061135d9050565b805115611fea5780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156119f15781810151838201526020016119d9565b50805460018160011615610100020316600290046000825580601f106120575750610991565b601f01602090049060005260206000209081019061099191906120f3565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106120b657805160ff19168380011785556120e3565b828001600101855582156120e3579182015b828111156120e35782518255916020019190600101906120c8565b506120ef9291506120f3565b5090565b6106d691905b808211156120ef57600081556001016120f956fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65724552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a26469706673582212208a6241ab21f3306267f2e522a5b9b7241c9b88637ea0566298f9739803d14f0164736f6c634300060a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101585760003560e01c80636352211e116100c357806395d89b411161007c57806395d89b41146104b2578063a22cb465146104ba578063b88d4fde146104e8578063c87b56dd146105ae578063e985e9c5146105cb578063f2fde38b146105f957610158565b80636352211e146103b15780636c0360eb146103ce57806370a08231146103d6578063715018a6146103fc578063839dc732146104045780638da5cb5b146104aa57610158565b80632f745c59116101155780632f745c59146102cc57806340c10f19146102f857806342842e0e1461032457806342966c681461035a5780634f558e79146103775780634f6ccce71461039457610158565b806301ffc9a71461015d57806306fdde0314610198578063081812fc14610215578063095ea7b31461024e57806318160ddd1461027c57806323b872dd14610296575b600080fd5b6101846004803603602081101561017357600080fd5b50356001600160e01b03191661061f565b604080519115158252519081900360200190f35b6101a0610642565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101da5781810151838201526020016101c2565b50505050905090810190601f1680156102075780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102326004803603602081101561022b57600080fd5b50356106d9565b604080516001600160a01b039092168252519081900360200190f35b61027a6004803603604081101561026457600080fd5b506001600160a01b03813516906020013561073b565b005b610284610816565b60408051918252519081900360200190f35b61027a600480360360608110156102ac57600080fd5b506001600160a01b03813581169160208101359091169060400135610827565b610284600480360360408110156102e257600080fd5b506001600160a01b03813516906020013561087e565b61027a6004803603604081101561030e57600080fd5b506001600160a01b0381351690602001356108af565b61027a6004803603606081101561033a57600080fd5b506001600160a01b03813581169160208101359091169060400135610915565b61027a6004803603602081101561037057600080fd5b5035610930565b6101846004803603602081101561038d57600080fd5b5035610994565b610284600480360360208110156103aa57600080fd5b503561099f565b610232600480360360208110156103c757600080fd5b50356109bb565b6101a06109e9565b610284600480360360208110156103ec57600080fd5b50356001600160a01b0316610a4a565b61027a610ab2565b61027a6004803603602081101561041a57600080fd5b81019060208101813564010000000081111561043557600080fd5b82018360208201111561044757600080fd5b8035906020019184600183028401116401000000008311171561046957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610b54945050505050565b610232610bb5565b6101a0610bc4565b61027a600480360360408110156104d057600080fd5b506001600160a01b0381351690602001351515610c25565b61027a600480360360808110156104fe57600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561053957600080fd5b82018360208201111561054b57600080fd5b8035906020019184600183028401116401000000008311171561056d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d2a945050505050565b6101a0600480360360208110156105c457600080fd5b5035610d88565b610184600480360360408110156105e157600080fd5b506001600160a01b038135811691602001351661102f565b61027a6004803603602081101561060f57600080fd5b50356001600160a01b031661105d565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106ce5780601f106106a3576101008083540402835291602001916106ce565b820191906000526020600020905b8154815290600101906020018083116106b157829003601f168201915b505050505090505b90565b60006106e482611231565b61071f5760405162461bcd60e51b815260040180806020018281038252602c815260200180612285602c913960400191505060405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610746826109bb565b9050806001600160a01b0316836001600160a01b031614156107995760405162461bcd60e51b81526004018080602001828103825260218152602001806123296021913960400191505060405180910390fd5b806001600160a01b03166107ab611244565b6001600160a01b031614806107cc57506107cc816107c7611244565b61102f565b6108075760405162461bcd60e51b81526004018080602001828103825260388152602001806121d86038913960400191505060405180910390fd5b6108118383611248565b505050565b600061082260026112b6565b905090565b610838610832611244565b826112c1565b6108735760405162461bcd60e51b815260040180806020018281038252603181526020018061234a6031913960400191505060405180910390fd5b610811838383611365565b6001600160a01b03821660009081526001602052604081206108a6908363ffffffff6114c316565b90505b92915050565b6108b7611244565b600a546001600160a01b03908116911614610907576040805162461bcd60e51b815260206004820181905260248201526000805160206122b1833981519152604482015290519081900360640190fd5b61091182826114cf565b5050565b61081183838360405180602001604052806000815250610d2a565b610938611244565b600a546001600160a01b03908116911614610988576040805162461bcd60e51b815260206004820181905260248201526000805160206122b1833981519152604482015290519081900360640190fd5b61099181611609565b50565b60006108a982611231565b6000806109b360028463ffffffff6116e216565b509392505050565b60006108a98260405180606001604052806029815260200161223a602991396002919063ffffffff6116fe16565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106ce5780601f106106a3576101008083540402835291602001916106ce565b60006001600160a01b038216610a915760405162461bcd60e51b815260040180806020018281038252602a815260200180612210602a913960400191505060405180910390fd5b6001600160a01b03821660009081526001602052604090206108a9906112b6565b610aba611244565b600a546001600160a01b03908116911614610b0a576040805162461bcd60e51b815260206004820181905260248201526000805160206122b1833981519152604482015290519081900360640190fd5b600a546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600a80546001600160a01b0319169055565b610b5c611244565b600a546001600160a01b03908116911614610bac576040805162461bcd60e51b815260206004820181905260248201526000805160206122b1833981519152604482015290519081900360640190fd5b61099181611715565b600a546001600160a01b031690565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106ce5780601f106106a3576101008083540402835291602001916106ce565b610c2d611244565b6001600160a01b0316826001600160a01b03161415610c93576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060056000610ca0611244565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610ce4611244565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b610d3b610d35611244565b836112c1565b610d765760405162461bcd60e51b815260040180806020018281038252603181526020018061234a6031913960400191505060405180910390fd5b610d8284848484611816565b50505050565b6060610d9382611231565b610dce5760405162461bcd60e51b815260040180806020018281038252602f8152602001806122fa602f913960400191505060405180910390fd5b60008281526008602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610e635780601f10610e3857610100808354040283529160200191610e63565b820191906000526020600020905b815481529060010190602001808311610e4657829003601f168201915b505060095493945050505060026000196101006001841615020190911604610e8c57905061063d565b805115610f5d576009816040516020018083805460018160011615610100020316600290048015610ef45780601f10610ed2576101008083540402835291820191610ef4565b820191906000526020600020905b815481529060010190602001808311610ee0575b5050825160208401908083835b60208310610f205780518252601f199092019160209182019101610f01565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405291505061063d565b6009610f6884611156565b6040516020018083805460018160011615610100020316600290048015610fc65780601f10610fa4576101008083540402835291820191610fc6565b820191906000526020600020905b815481529060010190602001808311610fb2575b5050825160208401908083835b60208310610ff25780518252601f199092019160209182019101610fd3565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b611065611244565b600a546001600160a01b039081169116146110b5576040805162461bcd60e51b815260206004820181905260248201526000805160206122b1833981519152604482015290519081900360640190fd5b6001600160a01b0381166110fa5760405162461bcd60e51b81526004018080602001828103825260268152602001806121626026913960400191505060405180910390fd5b600a546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600a80546001600160a01b0319166001600160a01b0392909216919091179055565b60608161117b57506040805180820190915260018152600360fc1b602082015261063d565b8160005b811561119357600101600a8204915061117f565b60608167ffffffffffffffff811180156111ac57600080fd5b506040519080825280601f01601f1916602001820160405280156111d7576020820181803683370190505b50859350905060001982015b831561122857600a840660300160f81b8282806001900393508151811061120657fe5b60200101906001600160f81b031916908160001a905350600a840493506111e3565b50949350505050565b60006108a960028363ffffffff61186816565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061127d826109bb565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006108a982611874565b60006112cc82611231565b6113075760405162461bcd60e51b815260040180806020018281038252602c8152602001806121ac602c913960400191505060405180910390fd5b6000611312836109bb565b9050806001600160a01b0316846001600160a01b0316148061134d5750836001600160a01b0316611342846106d9565b6001600160a01b0316145b8061135d575061135d818561102f565b949350505050565b826001600160a01b0316611378826109bb565b6001600160a01b0316146113bd5760405162461bcd60e51b81526004018080602001828103825260298152602001806122d16029913960400191505060405180910390fd5b6001600160a01b0382166114025760405162461bcd60e51b81526004018080602001828103825260248152602001806121886024913960400191505060405180910390fd5b61140d838383610811565b611418600082611248565b6001600160a01b0383166000908152600160205260409020611440908263ffffffff61187816565b506001600160a01b0382166000908152600160205260409020611469908263ffffffff61188416565b5061147c6002828463ffffffff61189016565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006108a683836118a6565b6001600160a01b03821661152a576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b61153381611231565b15611585576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b61159160008383610811565b6001600160a01b03821660009081526001602052604090206115b9908263ffffffff61188416565b506115cc6002828463ffffffff61189016565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000611614826109bb565b905061162281600084610811565b61162d600083611248565b600082815260086020526040902054600260001961010060018416150201909116041561166b57600082815260086020526040812061166b91612031565b6001600160a01b0381166000908152600160205260409020611693908363ffffffff61187816565b506116a560028363ffffffff61190a16565b5060405182906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60008080806116f18686611916565b9097909650945050505050565b600061170b848484611991565b90505b9392505050565b466109118261172383611156565b60405160200180806768747470733a2f2f60c01b81525060080183805190602001908083835b602083106117685780518252601f199092019160209182019101611749565b51815160209384036101000a60001901801990921691161790526d2f7672652f76312f636861696e2f60901b919093019081528451600e90910192850191508083835b602083106117ca5780518252601f1990920191602091820191016117ab565b6001836020036101000a03801982511681845116808217855250505050505090500180662f746f6b656e2f60c81b81525060070192505050604051602081830303815290604052611a5b565b611821848484611365565b61182d84848484611a6e565b610d825760405162461bcd60e51b81526004018080602001828103825260328152602001806121306032913960400191505060405180910390fd5b60006108a68383611bee565b5490565b60006108a68383611c06565b60006108a68383611ccc565b600061170b84846001600160a01b038516611d16565b815460009082106118e85760405162461bcd60e51b815260040180806020018281038252602281526020018061210e6022913960400191505060405180910390fd5b8260000182815481106118f757fe5b9060005260206000200154905092915050565b60006108a68383611dad565b81546000908190831061195a5760405162461bcd60e51b81526004018080602001828103825260228152602001806122636022913960400191505060405180910390fd5b600084600001848154811061196b57fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008281526001840160205260408120548281611a2c5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156119f15781810151838201526020016119d9565b50505050905090810190601f168015611a1e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50846000016001820381548110611a3f57fe5b9060005260206000209060020201600101549150509392505050565b8051610911906009906020840190612075565b6000611a82846001600160a01b0316611e81565b611a8e5750600161135d565b6060611bb4630a85bd0160e11b611aa3611244565b88878760405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611b1c578181015183820152602001611b04565b50505050905090810190601f168015611b495780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050604051806060016040528060328152602001612130603291396001600160a01b038816919063ffffffff611eba16565b90506000818060200190516020811015611bcd57600080fd5b50516001600160e01b031916630a85bd0160e11b1492505050949350505050565b60009081526001919091016020526040902054151590565b60008181526001830160205260408120548015611cc25783546000198083019190810190600090879083908110611c3957fe5b9060005260206000200154905080876000018481548110611c5657fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080611c8657fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506108a9565b60009150506108a9565b6000611cd88383611bee565b611d0e575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556108a9565b5060006108a9565b600082815260018401602052604081205480611d7b57505060408051808201825283815260208082018481528654600181810189556000898152848120955160029093029095019182559151908201558654868452818801909252929091205561170e565b82856000016001830381548110611d8e57fe5b906000526020600020906002020160010181905550600091505061170e565b60008181526001830160205260408120548015611cc25783546000198083019190810190600090879083908110611de057fe5b9060005260206000209060020201905080876000018481548110611e0057fe5b600091825260208083208454600290930201918255600193840154918401919091558354825289830190526040902090840190558654879080611e3f57fe5b60008281526020808220600260001990940193840201828155600190810183905592909355888152898201909252604082209190915594506108a99350505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061135d575050151592915050565b606061170b84846000856060611ecf85611e81565b611f20576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310611f5f5780518252601f199092019160209182019101611f40565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611fc1576040519150601f19603f3d011682016040523d82523d6000602084013e611fc6565b606091505b50915091508115611fda57915061135d9050565b805115611fea5780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156119f15781810151838201526020016119d9565b50805460018160011615610100020316600290046000825580601f106120575750610991565b601f01602090049060005260206000209081019061099191906120f3565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106120b657805160ff19168380011785556120e3565b828001600101855582156120e3579182015b828111156120e35782518255916020019190600101906120c8565b506120ef9291506120f3565b5090565b6106d691905b808211156120ef57600081556001016120f956fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65724552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a26469706673582212208a6241ab21f3306267f2e522a5b9b7241c9b88637ea0566298f9739803d14f0164736f6c634300060a0033",
  "immutableReferences": {},
  "sourceMap": "676:1747:10:-:0;;;898:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;898:129:10;;;;;;;;;;-1:-1:-1;898:129:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;898:129:10;3591:365:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3591:365:32;;;;898:129:10;;-1:-1:-1;3591:365:32;-1:-1:-1;777:40:27;;-1:-1:-1;;;;;;;;;777:18:27;:40;:::i;:::-;3663:12:32;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;3685:16:32;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;3789:40:32;-1:-1:-1;;;;;;;;3789:18:32;:40;:::i;:::-;3839:49;-1:-1:-1;;;;;;;;3839:18:32;:49;:::i;:::-;3898:51;-1:-1:-1;;;;;;;;3898:18:32;:51;:::i;:::-;-1:-1:-1;891:17:26;;-1:-1:-1;911:12:26;-1:-1:-1;;;;;911:10:26;:12;:::i;:::-;933:6;:18;;-1:-1:-1;;;;;;933:18:26;-1:-1:-1;;;;;933:18:26;;;;;;;;966:43;;933:18;;-1:-1:-1;933:18:26;-1:-1:-1;;966:43:26;;-1:-1:-1;;966:43:26;-1:-1:-1;989:31:10::1;1013:6:::0;-1:-1:-1;;;;;989:23:10::1;:31:::0;:::i:1;:::-;898:129:::0;676:1747;;1508:198:27;-1:-1:-1;;;;;;1591:25:27;;;;;1583:66;;;;;-1:-1:-1;;;1583:66:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1659:33:27;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1659:40:27;1695:4;1659:40;;;1508:198::o;616:104:25:-;703:10;616:104;;:::o;1122:418:10:-;1392:9;1420:113;1468:6;1494:25;1392:9;1494:16;;;;;;;:25;;:::i;:::-;1439:92;;;;;;-1:-1:-1;;;1439:92:10;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1439:92:10;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1439:92:10;;;;;;;;;;;-1:-1:-1;;;1439:92:10;;;;;;;;;;;;;;;;;-1:-1:-1;1439:92:10;;;;;;;;;;;;;-1:-1:-1;;1439:92:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1439:92:10;;;;;;;;;;;;;;;;;;;;;1420:11;;;:113;;:::i;:::-;1122:418;;:::o;228:723:40:-;284:13;501:10;497:51;;-1:-1:-1;527:10:40;;;;;;;;;;;;-1:-1:-1;;;527:10:40;;;;;;497:51;572:5;557:12;611:75;618:9;;611:75;;643:8;;673:2;665:10;;;;611:75;;;695:19;727:6;-1:-1:-1;;;;;717:17:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;717:17:40;-1:-1:-1;787:5:40;;-1:-1:-1;695:39:40;-1:-1:-1;;;760:10:40;;802:112;809:9;;802:112;;875:2;868:4;:9;863:2;:14;852:27;;834:6;841:7;;;;;;;834:15;;;;;;;;;;;:45;-1:-1:-1;;;;;834:45:40;;;;;;;;-1:-1:-1;901:2:40;893:10;;;;802:112;;;-1:-1:-1;937:6:40;-1:-1:-1;;;228:723:40;;;;:::o;14673:98:32:-;14745:19;;;;:8;;:19;;;;676:1747:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;676:1747:10;;;-1:-1:-1;676:1747:10;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "676:1747:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;974:140:27;;;;;;;;;;;;;;;;-1:-1:-1;974:140:27;-1:-1:-1;;;;;;974:140:27;;:::i;:::-;;;;;;;;;;;;;;;;;;4512:90:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7119:209;;;;;;;;;;;;;;;;-1:-1:-1;7119:209:32;;:::i;:::-;;;;-1:-1:-1;;;;;7119:209:32;;;;;;;;;;;;;;6677:381;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6677:381:32;;;;;;;;:::i;:::-;;6187:200;;;:::i;:::-;;;;;;;;;;;;;;;;7967:300;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7967:300:32;;;;;;;;;;;;;;;;;:::i;5964:152::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5964:152:32;;;;;;;;:::i;1839:97:10:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1839:97:10;;;;;;;;:::i;8333:149:32:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8333:149:32;;;;;;;;;;;;;;;;;:::i;2018:81:10:-;;;;;;;;;;;;;;;;-1:-1:-1;2018:81:10;;:::i;2319:102::-;;;;;;;;;;;;;;;;-1:-1:-1;2319:102:10;;:::i;6459:161:32:-;;;;;;;;;;;;;;;;-1:-1:-1;6459:161:32;;:::i;4283:167::-;;;;;;;;;;;;;;;;-1:-1:-1;4283:167:32;;:::i;5798:87::-;;;:::i;4015:211::-;;;;;;;;;;;;;;;;-1:-1:-1;4015:211:32;-1:-1:-1;;;;;4015:211:32;;:::i;1715:145:26:-;;;:::i;1636:121:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1636:121:10;;-1:-1:-1;1636:121:10;;-1:-1:-1;;;;;1636:121:10:i;1092:77:26:-;;;:::i;4666:94:32:-;;;:::i;7395:290::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7395:290:32;;;;;;;;;;:::i;8548:282::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8548:282:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8548:282:32;;-1:-1:-1;8548:282:32;;-1:-1:-1;;;;;8548:282:32:i;4826:740::-;;;;;;;;;;;;;;;;-1:-1:-1;4826:740:32;;:::i;7751:154::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7751:154:32;;;;;;;;;;:::i;2009:240:26:-;;;;;;;;;;;;;;;;-1:-1:-1;2009:240:26;-1:-1:-1;;;;;2009:240:26;;:::i;974:140:27:-;-1:-1:-1;;;;;;1074:33:27;;1051:4;1074:33;;;;;;;;;;;;;974:140;;;;:::o;4512:90:32:-;4590:5;4583:12;;;;;;;;-1:-1:-1;;4583:12:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4558:13;;4583:12;;4590:5;;4583:12;;4590:5;4583:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4512:90;;:::o;7119:209::-;7187:7;7214:16;7222:7;7214;:16::i;:::-;7206:73;;;;-1:-1:-1;;;7206:73:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7297:24:32;;;;:15;:24;;;;;;-1:-1:-1;;;;;7297:24:32;;7119:209::o;6677:381::-;6757:13;6773:16;6781:7;6773;:16::i;:::-;6757:32;;6813:5;-1:-1:-1;;;;;6807:11:32;:2;-1:-1:-1;;;;;6807:11:32;;;6799:57;;;;-1:-1:-1;;;6799:57:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6891:5;-1:-1:-1;;;;;6875:21:32;:12;:10;:12::i;:::-;-1:-1:-1;;;;;6875:21:32;;:62;;;;6900:37;6917:5;6924:12;:10;:12::i;:::-;6900:16;:37::i;:::-;6867:152;;;;-1:-1:-1;;;6867:152:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7030:21;7039:2;7043:7;7030:8;:21::i;:::-;6677:381;;;:::o;6187:200::-;6240:7;6359:21;:12;:19;:21::i;:::-;6352:28;;6187:200;:::o;7967:300::-;8126:41;8145:12;:10;:12::i;:::-;8159:7;8126:18;:41::i;:::-;8118:103;;;;-1:-1:-1;;;8118:103:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8232:28;8242:4;8248:2;8252:7;8232:9;:28::i;5964:152::-;-1:-1:-1;;;;;6079:20:32;;6053:7;6079:20;;;:13;:20;;;;;:30;;6103:5;6079:30;:23;:30;:::i;:::-;6072:37;;5964:152;;;;;:::o;1839:97:10:-;1306:12:26;:10;:12::i;:::-;1296:6;;-1:-1:-1;;;;;1296:6:26;;;:22;;;1288:67;;;;;-1:-1:-1;;;1288:67:26;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1288:67:26;;;;;;;;;;;;;;;1911:18:10::1;1917:2;1921:7;1911:5;:18::i;:::-;1839:97:::0;;:::o;8333:149:32:-;8436:39;8453:4;8459:2;8463:7;8436:39;;;;;;;;;;;;:16;:39::i;2018:81:10:-;1306:12:26;:10;:12::i;:::-;1296:6;;-1:-1:-1;;;;;1296:6:26;;;:22;;;1288:67;;;;;-1:-1:-1;;;1288:67:26;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1288:67:26;;;;;;;;;;;;;;;2078:14:10::1;2084:7;2078:5;:14::i;:::-;2018:81:::0;:::o;2319:102::-;2375:4;2398:16;2406:7;2398;:16::i;6459:161:32:-;6526:7;;6567:22;:12;6583:5;6567:22;:15;:22;:::i;:::-;-1:-1:-1;6545:44:32;6459:161;-1:-1:-1;;;6459:161:32:o;4283:167::-;4347:7;4373:70;4390:7;4373:70;;;;;;;;;;;;;;;;;:12;;:70;;:16;:70;:::i;5798:87::-;5870:8;5863:15;;;;;;;;-1:-1:-1;;5863:15:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5838:13;;5863:15;;5870:8;;5863:15;;5870:8;5863:15;;;;;;;;;;;;;;;;;;;;;;;;4015:211;4079:7;-1:-1:-1;;;;;4106:19:32;;4098:74;;;;-1:-1:-1;;;4098:74:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4190:20:32;;;;;;:13;:20;;;;;:29;;:27;:29::i;1715:145:26:-;1306:12;:10;:12::i;:::-;1296:6;;-1:-1:-1;;;;;1296:6:26;;;:22;;;1288:67;;;;;-1:-1:-1;;;1288:67:26;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1288:67:26;;;;;;;;;;;;;;;1805:6:::1;::::0;1784:40:::1;::::0;1821:1:::1;::::0;-1:-1:-1;;;;;1805:6:26::1;::::0;1784:40:::1;::::0;1821:1;;1784:40:::1;1834:6;:19:::0;;-1:-1:-1;;;;;;1834:19:26::1;::::0;;1715:145::o;1636:121:10:-;1306:12:26;:10;:12::i;:::-;1296:6;;-1:-1:-1;;;;;1296:6:26;;;:22;;;1288:67;;;;;-1:-1:-1;;;1288:67:26;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1288:67:26;;;;;;;;;;;;;;;1719:31:10::1;1743:6;1719:23;:31::i;1092:77:26:-:0;1156:6;;-1:-1:-1;;;;;1156:6:26;1092:77;:::o;4666:94:32:-;4746:7;4739:14;;;;;;;;-1:-1:-1;;4739:14:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4714:13;;4739:14;;4746:7;;4739:14;;4746:7;4739:14;;;;;;;;;;;;;;;;;;;;;;;;7395:290;7509:12;:10;:12::i;:::-;-1:-1:-1;;;;;7497:24:32;:8;-1:-1:-1;;;;;7497:24:32;;;7489:62;;;;;-1:-1:-1;;;7489:62:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;7607:8;7562:18;:32;7581:12;:10;:12::i;:::-;-1:-1:-1;;;;;7562:32:32;;;;;;;;;;;;;;;;;-1:-1:-1;7562:32:32;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;7562:53:32;;;;;;;;;;;7645:12;:10;:12::i;:::-;7630:48;;;;;;;;;;-1:-1:-1;;;;;7630:48:32;;;;;;;;;;;;;;7395:290;;:::o;8548:282::-;8679:41;8698:12;:10;:12::i;:::-;8712:7;8679:18;:41::i;:::-;8671:103;;;;-1:-1:-1;;;8671:103:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8784:39;8798:4;8804:2;8808:7;8817:5;8784:13;:39::i;:::-;8548:282;;;;:::o;4826:740::-;4891:13;4924:16;4932:7;4924;:16::i;:::-;4916:76;;;;-1:-1:-1;;;4916:76:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5029:19;;;;:10;:19;;;;;;;;;5003:45;;;;;;-1:-1:-1;;5003:45:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;:45;;;5029:19;5003:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5127:8:32;5121:22;5003:45;;-1:-1:-1;;;;5121:22:32;-1:-1:-1;;5121:22:32;;;;;;;;;;;5117:74;;5171:9;-1:-1:-1;5164:16:32;;5117:74;5293:23;;:27;5289:110;;5367:8;5377:9;5350:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5350:37:32;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5350:37:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5336:52;;;;;5289:110;5529:8;5539:18;:7;:16;:18::i;:::-;5512:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5512:46:32;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5512:46:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5498:61;;;4826:740;;;:::o;7751:154::-;-1:-1:-1;;;;;7863:25:32;;;7840:4;7863:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;7751:154::o;2009:240:26:-;1306:12;:10;:12::i;:::-;1296:6;;-1:-1:-1;;;;;1296:6:26;;;:22;;;1288:67;;;;;-1:-1:-1;;;1288:67:26;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1288:67:26;;;;;;;;;;;;;;;-1:-1:-1;;;;;2097:22:26;::::1;2089:73;;;;-1:-1:-1::0;;;2089:73:26::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2198:6;::::0;2177:38:::1;::::0;-1:-1:-1;;;;;2177:38:26;;::::1;::::0;2198:6:::1;::::0;2177:38:::1;::::0;2198:6:::1;::::0;2177:38:::1;2225:6;:17:::0;;-1:-1:-1;;;;;;2225:17:26::1;-1:-1:-1::0;;;;;2225:17:26;;;::::1;::::0;;;::::1;::::0;;2009:240::o;228:723:40:-;284:13;501:10;497:51;;-1:-1:-1;527:10:40;;;;;;;;;;;;-1:-1:-1;;;527:10:40;;;;;;497:51;572:5;557:12;611:75;618:9;;611:75;;643:8;;673:2;665:10;;;;611:75;;;695:19;727:6;717:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;717:17:40;-1:-1:-1;787:5:40;;-1:-1:-1;695:39:40;-1:-1:-1;;;760:10:40;;802:112;809:9;;802:112;;875:2;868:4;:9;863:2;:14;852:27;;834:6;841:7;;;;;;;834:15;;;;;;;;;;;:45;-1:-1:-1;;;;;834:45:40;;;;;;;;-1:-1:-1;901:2:40;893:10;;;;802:112;;;-1:-1:-1;937:6:40;228:723;-1:-1:-1;;;;228:723:40:o;10263:117:32:-;10320:4;10343:30;:12;10365:7;10343:30;:21;:30;:::i;616:104:25:-;703:10;616:104;:::o;15919:155:32:-;15984:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15984:29:32;-1:-1:-1;;;;;15984:29:32;;;;;;;;:24;;16037:16;15984:24;16037:7;:16::i;:::-;-1:-1:-1;;;;;16028:39:32;;;;;;;;;;;15919:155;;:::o;7049:121:38:-;7118:7;7144:19;7152:3;7144:7;:19::i;10538:329:32:-;10623:4;10647:16;10655:7;10647;:16::i;:::-;10639:73;;;;-1:-1:-1;;;10639:73:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10722:13;10738:16;10746:7;10738;:16::i;:::-;10722:32;;10783:5;-1:-1:-1;;;;;10772:16:32;:7;-1:-1:-1;;;;;10772:16:32;;:51;;;;10816:7;-1:-1:-1;;;;;10792:31:32;:20;10804:7;10792:11;:20::i;:::-;-1:-1:-1;;;;;10792:31:32;;10772:51;:87;;;;10827:32;10844:5;10851:7;10827:16;:32::i;:::-;10764:96;10538:329;-1:-1:-1;;;;10538:329:32:o;13532:559::-;13649:4;-1:-1:-1;;;;;13629:24:32;:16;13637:7;13629;:16::i;:::-;-1:-1:-1;;;;;13629:24:32;;13621:78;;;;-1:-1:-1;;;13621:78:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13717:16:32;;13709:65;;;;-1:-1:-1;;;13709:65:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13785:39;13806:4;13812:2;13816:7;13785:20;:39::i;:::-;13886:29;13903:1;13907:7;13886:8;:29::i;:::-;-1:-1:-1;;;;;13926:19:32;;;;;;:13;:19;;;;;:35;;13953:7;13926:35;:26;:35;:::i;:::-;-1:-1:-1;;;;;;13971:17:32;;;;;;:13;:17;;;;;:30;;13993:7;13971:30;:21;:30;:::i;:::-;-1:-1:-1;14012:29:32;:12;14029:7;14038:2;14012:29;:16;:29;:::i;:::-;;14076:7;14072:2;-1:-1:-1;;;;;14057:27:32;14066:4;-1:-1:-1;;;;;14057:27:32;;;;;;;;;;;13532:559;;;:::o;7675:135:39:-;7746:7;7780:22;7784:3;7796:5;7780:3;:22::i;12096:393:32:-;-1:-1:-1;;;;;12175:16:32;;12167:61;;;;;-1:-1:-1;;;12167:61:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12247:16;12255:7;12247;:16::i;:::-;12246:17;12238:58;;;;;-1:-1:-1;;;12238:58:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;12307:45;12336:1;12340:2;12344:7;12307:20;:45::i;:::-;-1:-1:-1;;;;;12363:17:32;;;;;;:13;:17;;;;;:30;;12385:7;12363:30;:21;:30;:::i;:::-;-1:-1:-1;12404:29:32;:12;12421:7;12430:2;12404:29;:16;:29;:::i;:::-;-1:-1:-1;12449:33:32;;12474:7;;-1:-1:-1;;;;;12449:33:32;;;12466:1;;12449:33;;12466:1;;12449:33;12096:393;;:::o;12706:502::-;12765:13;12781:16;12789:7;12781;:16::i;:::-;12765:32;;12808:48;12829:5;12844:1;12848:7;12808:20;:48::i;:::-;12894:29;12911:1;12915:7;12894:8;:29::i;:::-;12979:19;;;;:10;:19;;;;;12973:33;;-1:-1:-1;;12973:33:32;;;;;;;;;;;:38;12969:95;;13034:19;;;;:10;:19;;;;;13027:26;;;:::i;:::-;-1:-1:-1;;;;;13074:20:32;;;;;;:13;:20;;;;;:36;;13102:7;13074:36;:27;:36;:::i;:::-;-1:-1:-1;13121:28:32;:12;13141:7;13121:28;:19;:28;:::i;:::-;-1:-1:-1;13165:36:32;;13193:7;;13189:1;;-1:-1:-1;;;;;13165:36:32;;;;;13189:1;;13165:36;12706:502;;:::o;7498:224:38:-;7578:7;;;;7637:22;7641:3;7653:5;7637:3;:22::i;:::-;7606:53;;;;-1:-1:-1;7498:224:38;-1:-1:-1;;;;;7498:224:38:o;8141:202::-;8248:7;8290:44;8295:3;8315;8321:12;8290:4;:44::i;:::-;8282:53;-1:-1:-1;8141:202:38;;;;;;:::o;1122:418:10:-;1392:9;1420:113;1468:6;1494:25;1392:9;1494:16;:25::i;:::-;1439:92;;;;;;-1:-1:-1;;;1439:92:10;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1439:92:10;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1439:92:10;;;;;;;;;;;-1:-1:-1;;;1439:92:10;;;;;;;;;;;;;;;;;-1:-1:-1;1439:92:10;;;;;;;;;;;;;-1:-1:-1;;1439:92:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1439:92:10;;;;;;;;;;;;;;;;;;;;;1420:11;:113::i;9691:269:32:-;9804:28;9814:4;9820:2;9824:7;9804:9;:28::i;:::-;9850:48;9873:4;9879:2;9883:7;9892:5;9850:22;:48::i;:::-;9842:111;;;;-1:-1:-1;;;9842:111:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6817:149:38;6901:4;6924:35;6934:3;6954;6924:9;:35::i;4509:108::-;4591:19;;4509:108::o;6790:135:39:-;6860:4;6883:35;6891:3;6911:5;6883:7;:35::i;6493:129::-;6560:4;6583:32;6588:3;6608:5;6583:4;:32::i;6265:174:38:-;6354:4;6377:55;6382:3;6402;-1:-1:-1;;;;;6416:14:38;;6377:4;:55::i;4449:201:39:-;4543:18;;4516:7;;4543:26;-1:-1:-1;4535:73:39;;;;-1:-1:-1;;;4535:73:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4625:3;:11;;4637:5;4625:18;;;;;;;;;;;;;;;;4618:25;;4449:201;;;;:::o;6598:140:38:-;6675:4;6698:33;6706:3;6726;6698:7;:33::i;4960:274::-;5063:19;;5027:7;;;;5063:27;-1:-1:-1;5055:74:38;;;;-1:-1:-1;;;5055:74:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5140:22;5165:3;:12;;5178:5;5165:19;;;;;;;;;;;;;;;;;;5140:44;;5202:5;:10;;;5214:5;:12;;;5194:33;;;;;4960:274;;;;;:::o;5641:315::-;5735:7;5773:17;;;:12;;;:17;;;;;;5823:12;5808:13;5800:36;;;;-1:-1:-1;;;5800:36:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5889:3;:12;;5913:1;5902:8;:12;5889:26;;;;;;;;;;;;;;;;;;:33;;;5882:40;;;5641:315;;;;;:::o;14673:98:32:-;14745:19;;;;:8;;:19;;;;;:::i;15324:589::-;15444:4;15469:15;:2;-1:-1:-1;;;;;15469:13:32;;:15::i;:::-;15464:58;;-1:-1:-1;15507:4:32;15500:11;;15464:58;15531:23;15557:246;-1:-1:-1;;;15668:12:32;:10;:12::i;:::-;15694:4;15712:7;15733:5;15573:175;;;;;;-1:-1:-1;;;;;15573:175:32;-1:-1:-1;;;;;15573:175:32;;;;;;-1:-1:-1;;;;;15573:175:32;-1:-1:-1;;;;;15573:175:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15573:175:32;;;;;;;-1:-1:-1;;;;;15573:175:32;;;;;;;;;;;15557:246;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15557:15:32;;;:246;;:15;:246;:::i;:::-;15531:272;;15813:13;15840:10;15829:32;;;;;;;;;;;;;;;-1:-1:-1;15829:32:32;-1:-1:-1;;;;;;15879:26:32;-1:-1:-1;;;15879:26:32;;-1:-1:-1;;;15324:589:32;;;;;;:::o;4296:123:38:-;4367:4;4390:17;;;:12;;;;;:17;;;;;;:22;;;4296:123::o;2209:1512:39:-;2275:4;2412:19;;;:12;;;:19;;;;;;2446:15;;2442:1273;;2875:18;;-1:-1:-1;;2827:14:39;;;;2875:22;;;;2803:21;;2875:3;;:22;;3157;;;;;;;;;;;;;;3137:42;;3300:9;3271:3;:11;;3283:13;3271:26;;;;;;;;;;;;;;;;;;;:38;;;;3375:23;;;3417:1;3375:12;;;:23;;;;;;3401:17;;;3375:43;;3524:17;;3375:3;;3524:17;;;;;;;;;;;;;;;;;;;;;;3616:3;:12;;:19;3629:5;3616:19;;;;;;;;;;;3609:26;;;3657:4;3650:11;;;;;;;;2442:1273;3699:5;3692:12;;;;;1637:404;1700:4;1721:21;1731:3;1736:5;1721:9;:21::i;:::-;1716:319;;-1:-1:-1;1758:23:39;;;;;;;;:11;:23;;;;;;;;;;;;;1938:18;;1916:19;;;:12;;;:19;;;;;;:40;;;;1970:11;;1716:319;-1:-1:-1;2019:5:39;2012:12;;1854:678:38;1930:4;2063:17;;;:12;;;:17;;;;;;2095:13;2091:435;;-1:-1:-1;;2179:38:38;;;;;;;;;;;;;;;;;;2161:57;;;;;;;;:12;:57;;;;;;;;;;;;;;;;;;;;;;;;2373:19;;2353:17;;;:12;;;:17;;;;;;;:39;2406:11;;2091:435;2484:5;2448:3;:12;;2472:1;2461:8;:12;2448:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2510:5;2503:12;;;;;2700:1517;2764:4;2897:17;;;:12;;;:17;;;;;;2929:13;;2925:1286;;3355:19;;-1:-1:-1;;3309:12:38;;;;3355:23;;;;3285:21;;3355:3;;:23;;3647;;;;;;;;;;;;;;;;3618:52;;3792:9;3762:3;:12;;3775:13;3762:27;;;;;;;;;;;;;;;;:39;;:27;;;;;:39;;;;;;;;;;;;;;;3880:14;;3867:28;;:12;;;:28;;;;;3898:17;;;3867:48;;4021:18;;3867:3;;4021:18;;;;;;;;;;;;;;-1:-1:-1;;4021:18:38;;;;;;;;;;;;;;;;;;;;;4114:17;;;:12;;;:17;;;;;;4107:24;;;;4021:18;-1:-1:-1;4146:11:38;;-1:-1:-1;;;;4146:11:38;744:610:37;804:4;1265:20;;1110:66;1304:23;;;;;;:42;;-1:-1:-1;;1331:15:37;;;1296:51;-1:-1:-1;;744:610:37:o;3796:194::-;3899:12;3930:53;3953:6;3961:4;3967:1;3970:12;5273;5305:18;5316:6;5305:10;:18::i;:::-;5297:60;;;;;-1:-1:-1;;;5297:60:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;5428:12;5442:23;5469:6;-1:-1:-1;;;;;5469:11:37;5489:8;5500:4;5469:36;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5469:36:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5427:78;;;;5519:7;5515:580;;;5549:10;-1:-1:-1;5542:17:37;;-1:-1:-1;5542:17:37;5515:580;5660:17;;:21;5656:429;;5918:10;5912:17;5978:15;5965:10;5961:2;5957:19;5950:44;5867:145;6050:20;;-1:-1:-1;;;6050:20:37;;;;;;;;;;;;;;;;;6057:12;;6050:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.6.10;\n\nimport \"openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\";\n\nimport \"openzeppelin-solidity/contracts/access/Ownable.sol\";\n\nimport \"openzeppelin-solidity/contracts/utils/Strings.sol\";\n\n/**\n * The MacroverseRealEstate contract keeps track of who currently owns virtual\n * real estate in the Macroverse world, at all scales. It supersedes the\n * MacroverseStarRegistry. Registration and Macroverse-specific manipulation of\n * tokens is accomplished through the MacroverseUniversalRegistry, which owns\n * this contract.\n *\n * The split between this contract and the MacroverseUniversalRegistry exists\n * to keep contract size under the limit. \n */\ncontract MacroverseRealEstate is ERC721, Ownable {\n\n    \n    /**\n     * Deploy the backend, taking mint, burn, and set-user commands from the deployer.\n     * Use the given domain as the domain for token URIs.\n     */\n    constructor(string memory domain) public ERC721(\"Macroverse Real Estate\", \"MRE\") {\n        _setTokenMetadataDomain(domain);\n    }\n    \n    /**\n     * Allow this contract to change the ERC721 metadata URI domain.\n     */\n    function _setTokenMetadataDomain(string memory domain) internal {\n        // Set up new OpenZeppelin 3.0 automatic token URI system.\n        // Good thing we match their format or we'd have to fork OZ.\n        uint chainId = 0;\n        assembly {\n            chainId := chainid()\n        }\n        _setBaseURI(string(abi.encodePacked(\"https://\", domain, \"/vre/v1/chain/\", Strings.toString(chainId), \"/token/\")));\n    }\n    \n    /**\n     * Allow this the owner to change the ERC721 metadata URI domain.\n     */\n    function setTokenMetadataDomain(string memory domain) external onlyOwner {\n        _setTokenMetadataDomain(domain);\n    }\n\n    /**\n     * Mint tokens at the direction of the owning contract.\n     */\n    function mint(address to, uint256 tokenId) external onlyOwner {\n        _mint(to, tokenId);\n    }\n\n    /**\n     * Burn tokens at the direction of the owning contract.\n     */\n    function burn(uint256 tokenId) external onlyOwner {\n        _burn(tokenId);\n    }\n\n    /**\n     * Publically expose a token existence test. Returns true if the given\n     * token is owned by someone, and false otherwise. Note that tokens sent to\n     * 0x0 but not burned may still exist.\n     */\n    function exists(uint256 tokenId) external view returns (bool) {\n        return _exists(tokenId);\n    }\n}\n\n// This code is part of Macroverse and is licensed: UNLICENSED\n",
  "sourcePath": "/z/home/anovak/workspace/macroverse/contracts/MacroverseRealEstate.sol",
  "ast": {
    "absolutePath": "/z/home/anovak/workspace/macroverse/contracts/MacroverseRealEstate.sol",
    "exportedSymbols": {
      "MacroverseRealEstate": [
        3178
      ]
    },
    "id": 3179,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3070,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:10"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "id": 3071,
        "nodeType": "ImportDirective",
        "scope": 3179,
        "sourceUnit": 12585,
        "src": "26:65:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "id": 3072,
        "nodeType": "ImportDirective",
        "scope": 3179,
        "sourceUnit": 10804,
        "src": "93:60:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/utils/Strings.sol",
        "file": "openzeppelin-solidity/contracts/utils/Strings.sol",
        "id": 3073,
        "nodeType": "ImportDirective",
        "scope": 3179,
        "sourceUnit": 13918,
        "src": "155:59:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3075,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12584,
              "src": "709:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$12584",
                "typeString": "contract ERC721"
              }
            },
            "id": 3076,
            "nodeType": "InheritanceSpecifier",
            "src": "709:6:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3077,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10803,
              "src": "717:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$10803",
                "typeString": "contract Ownable"
              }
            },
            "id": 3078,
            "nodeType": "InheritanceSpecifier",
            "src": "717:7:10"
          }
        ],
        "contractDependencies": [
          10694,
          10803,
          10860,
          10872,
          12584,
          12700,
          12731,
          12758
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3074,
          "nodeType": "StructuredDocumentation",
          "src": "216:459:10",
          "text": " The MacroverseRealEstate contract keeps track of who currently owns virtual\n real estate in the Macroverse world, at all scales. It supersedes the\n MacroverseStarRegistry. Registration and Macroverse-specific manipulation of\n tokens is accomplished through the MacroverseUniversalRegistry, which owns\n this contract.\n The split between this contract and the MacroverseUniversalRegistry exists\n to keep contract size under the limit. "
        },
        "fullyImplemented": true,
        "id": 3178,
        "linearizedBaseContracts": [
          3178,
          10803,
          12584,
          12731,
          12758,
          12700,
          10860,
          10872,
          10694
        ],
        "name": "MacroverseRealEstate",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3092,
              "nodeType": "Block",
              "src": "979:48:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3089,
                        "name": "domain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3081,
                        "src": "1013:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3088,
                      "name": "_setTokenMetadataDomain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3122,
                      "src": "989:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "989:31:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3091,
                  "nodeType": "ExpressionStatement",
                  "src": "989:31:10"
                }
              ]
            },
            "documentation": {
              "id": 3079,
              "nodeType": "StructuredDocumentation",
              "src": "737:156:10",
              "text": " Deploy the backend, taking mint, burn, and set-user commands from the deployer.\n Use the given domain as the domain for token URIs."
            },
            "id": 3093,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4d6163726f7665727365205265616c20457374617465",
                    "id": 3084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "946:24:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6448b0c6d20bc4eea194151115138cf3e5fb3b1b1353ee46d9467b39e619b61d",
                      "typeString": "literal_string \"Macroverse Real Estate\""
                    },
                    "value": "Macroverse Real Estate"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4d5245",
                    "id": 3085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "972:5:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6a276174106362147b87c12a762f3687580129251ca71e76de954b6d530dfa8f",
                      "typeString": "literal_string \"MRE\""
                    },
                    "value": "MRE"
                  }
                ],
                "id": 3086,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3083,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 12584,
                  "src": "939:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$12584_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "939:39:10"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3081,
                  "mutability": "mutable",
                  "name": "domain",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3093,
                  "src": "910:20:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3080,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "910:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "909:22:10"
            },
            "returnParameters": {
              "id": 3087,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "979:0:10"
            },
            "scope": 3178,
            "src": "898:129:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3121,
              "nodeType": "Block",
              "src": "1186:354:10",
              "statements": [
                {
                  "assignments": [
                    3100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3100,
                      "mutability": "mutable",
                      "name": "chainId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3121,
                      "src": "1332:12:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3099,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1332:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3102,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 3101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1347:1:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1332:16:10"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1367:44:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1381:20:10",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "chainid",
                            "nodeType": "YulIdentifier",
                            "src": "1392:7:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1392:9:10"
                        },
                        "variableNames": [
                          {
                            "name": "chainId",
                            "nodeType": "YulIdentifier",
                            "src": "1381:7:10"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 3100,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1381:7:10",
                      "valueSize": 1
                    }
                  ],
                  "id": 3103,
                  "nodeType": "InlineAssembly",
                  "src": "1358:53:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "68747470733a2f2f",
                                "id": 3109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1456:10:10",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_22a0bccaefa7e44032d5e21026b45254e49ef9bce8763cb450aaa27db3ce52a1",
                                  "typeString": "literal_string \"https://\""
                                },
                                "value": "https://"
                              },
                              {
                                "argumentTypes": null,
                                "id": 3110,
                                "name": "domain",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3096,
                                "src": "1468:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "2f7672652f76312f636861696e2f",
                                "id": 3111,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1476:16:10",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_0774c37070c25323d9b5c853e81b491b65ba6246d69a8c9915e5ea5206ebcec1",
                                  "typeString": "literal_string \"/vre/v1/chain/\""
                                },
                                "value": "/vre/v1/chain/"
                              },
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 3114,
                                    "name": "chainId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3100,
                                    "src": "1511:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3112,
                                    "name": "Strings",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13917,
                                    "src": "1494:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Strings_$13917_$",
                                      "typeString": "type(library Strings)"
                                    }
                                  },
                                  "id": 3113,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "toString",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13916,
                                  "src": "1494:16:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (string memory)"
                                  }
                                },
                                "id": 3115,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1494:25:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "2f746f6b656e2f",
                                "id": 3116,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1521:9:10",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_744d9f0f09a47cf88aebd2a73ac1c367e8c95a4e22be6a16d5f075d39c7618db",
                                  "typeString": "literal_string \"/token/\""
                                },
                                "value": "/token/"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_22a0bccaefa7e44032d5e21026b45254e49ef9bce8763cb450aaa27db3ce52a1",
                                  "typeString": "literal_string \"https://\""
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0774c37070c25323d9b5c853e81b491b65ba6246d69a8c9915e5ea5206ebcec1",
                                  "typeString": "literal_string \"/vre/v1/chain/\""
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_744d9f0f09a47cf88aebd2a73ac1c367e8c95a4e22be6a16d5f075d39c7618db",
                                  "typeString": "literal_string \"/token/\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 3107,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1439:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 3108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1439:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 3117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1439:92:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 3106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1432:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": {
                            "id": 3105,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "1432:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1432:100:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3104,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12492,
                      "src": "1420:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1420:113:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3120,
                  "nodeType": "ExpressionStatement",
                  "src": "1420:113:10"
                }
              ]
            },
            "documentation": {
              "id": 3094,
              "nodeType": "StructuredDocumentation",
              "src": "1037:80:10",
              "text": " Allow this contract to change the ERC721 metadata URI domain."
            },
            "id": 3122,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setTokenMetadataDomain",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3096,
                  "mutability": "mutable",
                  "name": "domain",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3122,
                  "src": "1155:20:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3095,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1154:22:10"
            },
            "returnParameters": {
              "id": 3098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1186:0:10"
            },
            "scope": 3178,
            "src": "1122:418:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3134,
              "nodeType": "Block",
              "src": "1709:48:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3131,
                        "name": "domain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3125,
                        "src": "1743:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3130,
                      "name": "_setTokenMetadataDomain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3122,
                      "src": "1719:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1719:31:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3133,
                  "nodeType": "ExpressionStatement",
                  "src": "1719:31:10"
                }
              ]
            },
            "documentation": {
              "id": 3123,
              "nodeType": "StructuredDocumentation",
              "src": "1550:81:10",
              "text": " Allow this the owner to change the ERC721 metadata URI domain."
            },
            "functionSelector": "839dc732",
            "id": 3135,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3128,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3127,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10752,
                  "src": "1699:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1699:9:10"
              }
            ],
            "name": "setTokenMetadataDomain",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3125,
                  "mutability": "mutable",
                  "name": "domain",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3135,
                  "src": "1668:20:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3124,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1668:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1667:22:10"
            },
            "returnParameters": {
              "id": 3129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1709:0:10"
            },
            "scope": 3178,
            "src": "1636:121:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3150,
              "nodeType": "Block",
              "src": "1901:35:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3146,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3138,
                        "src": "1917:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3147,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3140,
                        "src": "1921:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3145,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12320,
                      "src": "1911:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1911:18:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3149,
                  "nodeType": "ExpressionStatement",
                  "src": "1911:18:10"
                }
              ]
            },
            "documentation": {
              "id": 3136,
              "nodeType": "StructuredDocumentation",
              "src": "1763:71:10",
              "text": " Mint tokens at the direction of the owning contract."
            },
            "functionSelector": "40c10f19",
            "id": 3151,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3143,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3142,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10752,
                  "src": "1891:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1891:9:10"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3138,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3151,
                  "src": "1853:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1853:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3140,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3151,
                  "src": "1865:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1865:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1852:29:10"
            },
            "returnParameters": {
              "id": 3144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1901:0:10"
            },
            "scope": 3178,
            "src": "1839:97:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3163,
              "nodeType": "Block",
              "src": "2068:31:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3160,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3154,
                        "src": "2084:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3159,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12388,
                      "src": "2078:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2078:14:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3162,
                  "nodeType": "ExpressionStatement",
                  "src": "2078:14:10"
                }
              ]
            },
            "documentation": {
              "id": 3152,
              "nodeType": "StructuredDocumentation",
              "src": "1942:71:10",
              "text": " Burn tokens at the direction of the owning contract."
            },
            "functionSelector": "42966c68",
            "id": 3164,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3157,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3156,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10752,
                  "src": "2058:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2058:9:10"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3154,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3164,
                  "src": "2032:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2032:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2031:17:10"
            },
            "returnParameters": {
              "id": 3158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2068:0:10"
            },
            "scope": 3178,
            "src": "2018:81:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3176,
              "nodeType": "Block",
              "src": "2381:40:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3173,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3167,
                        "src": "2406:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3172,
                      "name": "_exists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12177,
                      "src": "2398:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 3174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2398:16:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3171,
                  "id": 3175,
                  "nodeType": "Return",
                  "src": "2391:23:10"
                }
              ]
            },
            "documentation": {
              "id": 3165,
              "nodeType": "StructuredDocumentation",
              "src": "2105:209:10",
              "text": " Publically expose a token existence test. Returns true if the given\n token is owned by someone, and false otherwise. Note that tokens sent to\n 0x0 but not burned may still exist."
            },
            "functionSelector": "4f558e79",
            "id": 3177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exists",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3167,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3177,
                  "src": "2335:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2335:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2334:17:10"
            },
            "returnParameters": {
              "id": 3171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3170,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3177,
                  "src": "2375:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3169,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2375:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2374:6:10"
            },
            "scope": 3178,
            "src": "2319:102:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3179,
        "src": "676:1747:10"
      }
    ],
    "src": "0:2488:10"
  },
  "legacyAST": {
    "absolutePath": "/z/home/anovak/workspace/macroverse/contracts/MacroverseRealEstate.sol",
    "exportedSymbols": {
      "MacroverseRealEstate": [
        3178
      ]
    },
    "id": 3179,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3070,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:10"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "id": 3071,
        "nodeType": "ImportDirective",
        "scope": 3179,
        "sourceUnit": 12585,
        "src": "26:65:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "id": 3072,
        "nodeType": "ImportDirective",
        "scope": 3179,
        "sourceUnit": 10804,
        "src": "93:60:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/utils/Strings.sol",
        "file": "openzeppelin-solidity/contracts/utils/Strings.sol",
        "id": 3073,
        "nodeType": "ImportDirective",
        "scope": 3179,
        "sourceUnit": 13918,
        "src": "155:59:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3075,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12584,
              "src": "709:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$12584",
                "typeString": "contract ERC721"
              }
            },
            "id": 3076,
            "nodeType": "InheritanceSpecifier",
            "src": "709:6:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3077,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10803,
              "src": "717:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$10803",
                "typeString": "contract Ownable"
              }
            },
            "id": 3078,
            "nodeType": "InheritanceSpecifier",
            "src": "717:7:10"
          }
        ],
        "contractDependencies": [
          10694,
          10803,
          10860,
          10872,
          12584,
          12700,
          12731,
          12758
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3074,
          "nodeType": "StructuredDocumentation",
          "src": "216:459:10",
          "text": " The MacroverseRealEstate contract keeps track of who currently owns virtual\n real estate in the Macroverse world, at all scales. It supersedes the\n MacroverseStarRegistry. Registration and Macroverse-specific manipulation of\n tokens is accomplished through the MacroverseUniversalRegistry, which owns\n this contract.\n The split between this contract and the MacroverseUniversalRegistry exists\n to keep contract size under the limit. "
        },
        "fullyImplemented": true,
        "id": 3178,
        "linearizedBaseContracts": [
          3178,
          10803,
          12584,
          12731,
          12758,
          12700,
          10860,
          10872,
          10694
        ],
        "name": "MacroverseRealEstate",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3092,
              "nodeType": "Block",
              "src": "979:48:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3089,
                        "name": "domain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3081,
                        "src": "1013:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3088,
                      "name": "_setTokenMetadataDomain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3122,
                      "src": "989:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "989:31:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3091,
                  "nodeType": "ExpressionStatement",
                  "src": "989:31:10"
                }
              ]
            },
            "documentation": {
              "id": 3079,
              "nodeType": "StructuredDocumentation",
              "src": "737:156:10",
              "text": " Deploy the backend, taking mint, burn, and set-user commands from the deployer.\n Use the given domain as the domain for token URIs."
            },
            "id": 3093,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4d6163726f7665727365205265616c20457374617465",
                    "id": 3084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "946:24:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6448b0c6d20bc4eea194151115138cf3e5fb3b1b1353ee46d9467b39e619b61d",
                      "typeString": "literal_string \"Macroverse Real Estate\""
                    },
                    "value": "Macroverse Real Estate"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4d5245",
                    "id": 3085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "972:5:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6a276174106362147b87c12a762f3687580129251ca71e76de954b6d530dfa8f",
                      "typeString": "literal_string \"MRE\""
                    },
                    "value": "MRE"
                  }
                ],
                "id": 3086,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3083,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 12584,
                  "src": "939:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$12584_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "939:39:10"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3081,
                  "mutability": "mutable",
                  "name": "domain",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3093,
                  "src": "910:20:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3080,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "910:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "909:22:10"
            },
            "returnParameters": {
              "id": 3087,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "979:0:10"
            },
            "scope": 3178,
            "src": "898:129:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3121,
              "nodeType": "Block",
              "src": "1186:354:10",
              "statements": [
                {
                  "assignments": [
                    3100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3100,
                      "mutability": "mutable",
                      "name": "chainId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3121,
                      "src": "1332:12:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3099,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1332:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3102,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 3101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1347:1:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1332:16:10"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1367:44:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1381:20:10",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "chainid",
                            "nodeType": "YulIdentifier",
                            "src": "1392:7:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1392:9:10"
                        },
                        "variableNames": [
                          {
                            "name": "chainId",
                            "nodeType": "YulIdentifier",
                            "src": "1381:7:10"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 3100,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1381:7:10",
                      "valueSize": 1
                    }
                  ],
                  "id": 3103,
                  "nodeType": "InlineAssembly",
                  "src": "1358:53:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "68747470733a2f2f",
                                "id": 3109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1456:10:10",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_22a0bccaefa7e44032d5e21026b45254e49ef9bce8763cb450aaa27db3ce52a1",
                                  "typeString": "literal_string \"https://\""
                                },
                                "value": "https://"
                              },
                              {
                                "argumentTypes": null,
                                "id": 3110,
                                "name": "domain",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3096,
                                "src": "1468:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "2f7672652f76312f636861696e2f",
                                "id": 3111,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1476:16:10",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_0774c37070c25323d9b5c853e81b491b65ba6246d69a8c9915e5ea5206ebcec1",
                                  "typeString": "literal_string \"/vre/v1/chain/\""
                                },
                                "value": "/vre/v1/chain/"
                              },
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 3114,
                                    "name": "chainId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3100,
                                    "src": "1511:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3112,
                                    "name": "Strings",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13917,
                                    "src": "1494:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Strings_$13917_$",
                                      "typeString": "type(library Strings)"
                                    }
                                  },
                                  "id": 3113,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "toString",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13916,
                                  "src": "1494:16:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (string memory)"
                                  }
                                },
                                "id": 3115,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1494:25:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "2f746f6b656e2f",
                                "id": 3116,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1521:9:10",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_744d9f0f09a47cf88aebd2a73ac1c367e8c95a4e22be6a16d5f075d39c7618db",
                                  "typeString": "literal_string \"/token/\""
                                },
                                "value": "/token/"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_22a0bccaefa7e44032d5e21026b45254e49ef9bce8763cb450aaa27db3ce52a1",
                                  "typeString": "literal_string \"https://\""
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0774c37070c25323d9b5c853e81b491b65ba6246d69a8c9915e5ea5206ebcec1",
                                  "typeString": "literal_string \"/vre/v1/chain/\""
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_744d9f0f09a47cf88aebd2a73ac1c367e8c95a4e22be6a16d5f075d39c7618db",
                                  "typeString": "literal_string \"/token/\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 3107,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1439:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 3108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1439:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 3117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1439:92:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 3106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1432:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": {
                            "id": 3105,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "1432:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1432:100:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3104,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12492,
                      "src": "1420:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1420:113:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3120,
                  "nodeType": "ExpressionStatement",
                  "src": "1420:113:10"
                }
              ]
            },
            "documentation": {
              "id": 3094,
              "nodeType": "StructuredDocumentation",
              "src": "1037:80:10",
              "text": " Allow this contract to change the ERC721 metadata URI domain."
            },
            "id": 3122,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setTokenMetadataDomain",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3096,
                  "mutability": "mutable",
                  "name": "domain",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3122,
                  "src": "1155:20:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3095,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1154:22:10"
            },
            "returnParameters": {
              "id": 3098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1186:0:10"
            },
            "scope": 3178,
            "src": "1122:418:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3134,
              "nodeType": "Block",
              "src": "1709:48:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3131,
                        "name": "domain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3125,
                        "src": "1743:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3130,
                      "name": "_setTokenMetadataDomain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3122,
                      "src": "1719:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1719:31:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3133,
                  "nodeType": "ExpressionStatement",
                  "src": "1719:31:10"
                }
              ]
            },
            "documentation": {
              "id": 3123,
              "nodeType": "StructuredDocumentation",
              "src": "1550:81:10",
              "text": " Allow this the owner to change the ERC721 metadata URI domain."
            },
            "functionSelector": "839dc732",
            "id": 3135,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3128,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3127,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10752,
                  "src": "1699:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1699:9:10"
              }
            ],
            "name": "setTokenMetadataDomain",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3125,
                  "mutability": "mutable",
                  "name": "domain",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3135,
                  "src": "1668:20:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3124,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1668:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1667:22:10"
            },
            "returnParameters": {
              "id": 3129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1709:0:10"
            },
            "scope": 3178,
            "src": "1636:121:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3150,
              "nodeType": "Block",
              "src": "1901:35:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3146,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3138,
                        "src": "1917:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3147,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3140,
                        "src": "1921:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3145,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12320,
                      "src": "1911:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1911:18:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3149,
                  "nodeType": "ExpressionStatement",
                  "src": "1911:18:10"
                }
              ]
            },
            "documentation": {
              "id": 3136,
              "nodeType": "StructuredDocumentation",
              "src": "1763:71:10",
              "text": " Mint tokens at the direction of the owning contract."
            },
            "functionSelector": "40c10f19",
            "id": 3151,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3143,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3142,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10752,
                  "src": "1891:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1891:9:10"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3138,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3151,
                  "src": "1853:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1853:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3140,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3151,
                  "src": "1865:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1865:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1852:29:10"
            },
            "returnParameters": {
              "id": 3144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1901:0:10"
            },
            "scope": 3178,
            "src": "1839:97:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3163,
              "nodeType": "Block",
              "src": "2068:31:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3160,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3154,
                        "src": "2084:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3159,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12388,
                      "src": "2078:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2078:14:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3162,
                  "nodeType": "ExpressionStatement",
                  "src": "2078:14:10"
                }
              ]
            },
            "documentation": {
              "id": 3152,
              "nodeType": "StructuredDocumentation",
              "src": "1942:71:10",
              "text": " Burn tokens at the direction of the owning contract."
            },
            "functionSelector": "42966c68",
            "id": 3164,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3157,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3156,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10752,
                  "src": "2058:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2058:9:10"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3154,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3164,
                  "src": "2032:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2032:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2031:17:10"
            },
            "returnParameters": {
              "id": 3158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2068:0:10"
            },
            "scope": 3178,
            "src": "2018:81:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3176,
              "nodeType": "Block",
              "src": "2381:40:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3173,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3167,
                        "src": "2406:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3172,
                      "name": "_exists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12177,
                      "src": "2398:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 3174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2398:16:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3171,
                  "id": 3175,
                  "nodeType": "Return",
                  "src": "2391:23:10"
                }
              ]
            },
            "documentation": {
              "id": 3165,
              "nodeType": "StructuredDocumentation",
              "src": "2105:209:10",
              "text": " Publically expose a token existence test. Returns true if the given\n token is owned by someone, and false otherwise. Note that tokens sent to\n 0x0 but not burned may still exist."
            },
            "functionSelector": "4f558e79",
            "id": 3177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exists",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3167,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3177,
                  "src": "2335:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2335:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2334:17:10"
            },
            "returnParameters": {
              "id": 3171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3170,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3177,
                  "src": "2375:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3169,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2375:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2374:6:10"
            },
            "scope": 3178,
            "src": "2319:102:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3179,
        "src": "676:1747:10"
      }
    ],
    "src": "0:2488:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.10+commit.00c0fcaf.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xE72f7a7d339A9d4B729dEa0549D39645d51FAaF7",
      "transactionHash": "0x4f10365da7de8195ac9eb9e8f937b42cd58e87daa459863e0315e9bc8e1fcf95"
    },
    "4": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address",
              "internalType": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool",
              "internalType": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x2B5CDc25018642d8049F3f7D7FD2Fd030B9541d6",
      "transactionHash": "0xf19e52c05a557238477be3b4fa0d4e6a169472ab124e6ee2f564751813802304"
    },
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x465f86E2E843D2F85a04F049935505A680229930",
      "transactionHash": "0xfab1fb65c124a695aa41b6d815929be0f40a94b9174d130adbaf0f2e83e6775d"
    }
  },
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-09-22T04:18:07.417Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "burn(uint256)": {
        "notice": "Burn tokens at the direction of the owning contract."
      },
      "constructor": "Deploy the backend, taking mint, burn, and set-user commands from the deployer. Use the given domain as the domain for token URIs.",
      "exists(uint256)": {
        "notice": "Publically expose a token existence test. Returns true if the given token is owned by someone, and false otherwise. Note that tokens sent to 0x0 but not burned may still exist."
      },
      "mint(address,uint256)": {
        "notice": "Mint tokens at the direction of the owning contract."
      },
      "setTokenMetadataDomain(string)": {
        "notice": "Allow this the owner to change the ERC721 metadata URI domain."
      }
    },
    "notice": "The MacroverseRealEstate contract keeps track of who currently owns virtual real estate in the Macroverse world, at all scales. It supersedes the MacroverseStarRegistry. Registration and Macroverse-specific manipulation of tokens is accomplished through the MacroverseUniversalRegistry, which owns this contract. The split between this contract and the MacroverseUniversalRegistry exists to keep contract size under the limit. "
  }
}