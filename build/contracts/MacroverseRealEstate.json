{
  "contractName": "MacroverseRealEstate",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "domain",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "domain",
          "type": "string"
        }
      ],
      "name": "setTokenMetadataDomain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"}],\"name\":\"setTokenMetadataDomain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"burn(uint256)\":{\"notice\":\"Burn tokens at the direction of the owning contract.\"},\"constructor\":\"Deploy the backend, taking mint, burn, and set-user commands from the deployer. Use the given domain as the domain for token URIs.\",\"exists(uint256)\":{\"notice\":\"Publically expose a token existence test. Returns true if the given token is owned by someone, and false otherwise. Note that tokens sent to 0x0 but not burned may still exist.\"},\"mint(address,uint256)\":{\"notice\":\"Mint tokens at the direction of the owning contract.\"},\"setTokenMetadataDomain(string)\":{\"notice\":\"Allow this the owner to change the ERC721 metadata URI domain.\"}},\"notice\":\"The MacroverseRealEstate contract keeps track of who currently owns virtual real estate in the Macroverse world, at all scales. It supersedes the MacroverseStarRegistry. Registration and Macroverse-specific manipulation of tokens is accomplished through the MacroverseUniversalRegistry, which owns this contract. The split between this contract and the MacroverseUniversalRegistry exists to keep contract size under the limit. \"}},\"settings\":{\"compilationTarget\":{\"/z/home/anovak/workspace/macroverse/contracts/MacroverseRealEstate.sol\":\"MacroverseRealEstate\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/z/home/anovak/workspace/macroverse/contracts/MacroverseRealEstate.sol\":{\"keccak256\":\"0xf2200550a724aa4d8492a6a03955fb24090f14d9f5f8af45843b5c4761ce0873\",\"urls\":[\"bzz-raw://2c99b0748ecaa0e470f9e646d6a5308521203790614186e2e841d0522eb0cecd\",\"dweb:/ipfs/Qmc9nBcMywrHD9KrMyAMgsqcWH7zHuwTBgwCppgPcYTB2B\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x310e66ba9e43bfd0bc6110c06e4c98e86e8515a85a295031413931fafb347b92\",\"urls\":[\"bzz-raw://8e061529b96bf38743c4ea16b44d53e145b3f16ec0a68151b1a690f348aad944\",\"dweb:/ipfs/QmR2hKcGi5NUNp1bWvjwvdv6J71ySp7ih5Ey3WxWkiRWh8\"]},\"openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa8b9207237f43e1af0feb1423db95cabf05989b89ff0d903b148a6f01856253f\",\"urls\":[\"bzz-raw://94271c7aeba6023ca590bcd32b59328ce78eefb55f0792fc87bd2c9720f45c2c\",\"dweb:/ipfs/QmXbG6dvnSqLvAXUVK9d26Sfi9d2kFtpxpo7mAuQYhKXPN\"]},\"openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xbe8e555f0715f5c72a7227a966c5c83365c86ffa0bc22ebd45c7d4bcba799c10\",\"urls\":[\"bzz-raw://5b4616ee8b50a4d430ea80ccb37646a4167e4cd230254305c1d81ac99ba81180\",\"dweb:/ipfs/QmZ8MZGzc3vP7AFBRHC42S2LUQDRkf6ctkaeZYtxXcrq8a\"]},\"openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x9a3f19e755366eb30bc36dedf2e309b861005e878f540ffd280dad17fd95e5ef\",\"urls\":[\"bzz-raw://562479d9ae71bb8262e90af175a94cb27bfdd421dc683314f23bac4a97f1d329\",\"dweb:/ipfs/QmVXBdWjoFg2jCEbkQz1YU9HHEEC9uHxFohYFYqVEAD5Uj\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9f5f241611b89edba99d342a5e826697c2bf26a567cd51b20e991344511b23b6\",\"urls\":[\"bzz-raw://dc9566acec64b1816d4f003928b3da56affd8dcd3385c7ef645ee1854acdc41b\",\"dweb:/ipfs/QmafEvnB89VjQTAtFqoHSYvgSABPkGgxkYnW4YbpmYDhxS\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x4f55abd75e5810e4e46b904ae29404b84444c88d552c4cf07ed0206cd976b0e1\",\"urls\":[\"bzz-raw://4f1fc04f279a4211d56474024040d7216bb54eda45ac72980ddc920b6cc30fd1\",\"dweb:/ipfs/QmTneeDfqTRL5xRGhxGpTWwQT9w6k4T7tzFatVW59yoSE1\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x95fc09f929dfd151318a4f3e973f877c196c87c03900fa0f15048c172e28982e\",\"urls\":[\"bzz-raw://f48be5dda930948c9bc68e502fd4d6c3c64c0d3ac7410083c714ad6b93c8b501\",\"dweb:/ipfs/QmVd4kmQpwjBMDY2RjSU9KjVNjCpeXxAsCsmquSUT9CBFA\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x0997b97d4ffc324d94610dd0b7add924c9e7e004a4fe5eacaedd4d9e81e933b9\",\"urls\":[\"bzz-raw://13490d2ba4e79da7623786fe3fdd20fb67767306cc0d46082b122c81f1d85f6a\",\"dweb:/ipfs/QmUCXUBgfNTyVNf5oqe6YkcwU8PEQwVtzGsYfvgnFy81i8\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x5c0e995b71a0b174eb7ec65eac26b1793761582296a076fff4918d9d78fbbbab\",\"urls\":[\"bzz-raw://6c6e20a7553184897e922ee81e2af9edafefc2f8b9815b2b5107b360b59cf6c7\",\"dweb:/ipfs/QmbnR1P3zggLfmEixyw49JdEwFuoPeua6aEsM7ZxrNdGDK\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x5c734755014784fbde4c6cdcf1e600888b8486a0adea61bbfe54ef2c064f2e8f\",\"urls\":[\"bzz-raw://0ddd13b246b25bbca13490d8d280a6c6f0b407dbcc84cbb697f0088d25f56c5c\",\"dweb:/ipfs/QmbGQ6Fn8kwXJ8KtnNRDnouc2q7T5h2YXC9wtdiitykBKn\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xd1f3a17da013bb360dfcc4d7028b6a60e7d444ad4926bb37a84d8bfa83d12812\",\"urls\":[\"bzz-raw://97dc02aa518fdcef216bd3f4b00a8e555e5513eb4b144e56c60fcfc4768acfff\",\"dweb:/ipfs/QmTQ2Yt1DV64KZffS4jo8XxUzSS4TTeE3oc1oWvkfY6MiN\"]},\"openzeppelin-solidity/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0x339d44d088564e939dd10718e3ed84de2e2e45061a456ebe67d8a4588bbb25b6\",\"urls\":[\"bzz-raw://73b133977cecdc5cbd189c01644179a4aaa18ba28442a288569cde8a9e561e6a\",\"dweb:/ipfs/Qmb25zwL4da4RoXTKHNKSwJmK5XyKp8GUfD9fWrR8G1pwH\"]},\"openzeppelin-solidity/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x7a53737a1c46f7ebef6e2935e5f648b1a21ec528f08a3a351335415dc58d58eb\",\"urls\":[\"bzz-raw://c181aa68818fd339a3a74b06c0f0089f6847d5cd5cefc1ac1832bba3f03f36a3\",\"dweb:/ipfs/QmfLNKCzJbHwdApXAoqKCnWRLmVknsTZqjAc38szM9HZQC\"]},\"openzeppelin-solidity/contracts/utils/Strings.sol\":{\"keccak256\":\"0x7bbe50f9f617c8277b2dc55ec3bdfd5064c3403010826d196ff7ff0855881822\",\"urls\":[\"bzz-raw://87b5553ba56c1382ec72a19795265953f7a569844172906b68e622438f03c171\",\"dweb:/ipfs/QmdwJx8nX4Xg5wWGSRZ1yoiKGrQE2sr71CuTWAdKh5oVU2\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162003e4938038062003e49833981810160405260208110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b506040525050506040518060400160405280601681526020017f4d6163726f7665727365205265616c20457374617465000000000000000000008152506040518060400160405280600381526020017f4d524500000000000000000000000000000000000000000000000000000000008152506200017c6301ffc9a760e01b620002c160201b60201c565b816006908051906020019062000194929190620006ac565b508060079080519060200190620001ad929190620006ac565b50620001c66380ac58cd60e01b620002c160201b60201c565b620001de635b5e139f60e01b620002c160201b60201c565b620001f663780e9d6360e01b620002c160201b60201c565b505060006200020a620003ca60201b60201c565b905080600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350620002ba81620003d260201b60201c565b506200075b565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156200035e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600033905090565b60008090504690506200053982620003f5836200053d60201b62001d5d1760201c565b60405160200180807f68747470733a2f2f00000000000000000000000000000000000000000000000081525060080183805190602001908083835b6020831062000455578051825260208201915060208101905060208303925062000430565b6001836020036101000a038019825116818451168082178552505050505050905001807f2f7672652f76312f636861696e2f000000000000000000000000000000000000815250600e0182805190602001908083835b60208310620004d05780518252602082019150602081019050602083039250620004ab565b6001836020036101000a038019825116818451168082178552505050505050905001807f2f746f6b656e2f00000000000000000000000000000000000000000000000000815250600701925050506040516020818303038152906040526200069060201b60201c565b5050565b6060600082141562000587576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506200068b565b600082905060005b60008214620005b4578080600101915050600a8281620005ab57fe5b0491506200058f565b60608167ffffffffffffffff81118015620005ce57600080fd5b506040519080825280601f01601f191660200182016040528015620006025781602001600182028036833780820191505090505b50905060006001830390508593505b600084146200068357600a84816200062557fe5b0660300160f81b828280600190039350815181106200064057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a84816200067a57fe5b04935062000611565b819450505050505b919050565b8060099080519060200190620006a8929190620006ac565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620006ef57805160ff191683800117855562000720565b8280016001018555821562000720579182015b828111156200071f57825182559160200191906001019062000702565b5b5090506200072f919062000733565b5090565b6200075891905b80821115620007545760008160009055506001016200073a565b5090565b90565b6136de806200076b6000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80636352211e116100c357806395d89b411161007c57806395d89b41146107b9578063a22cb4651461083c578063b88d4fde1461088c578063c87b56dd14610991578063e985e9c514610a38578063f2fde38b14610ab457610158565b80636352211e146105615780636c0360eb146105cf57806370a0823114610652578063715018a6146106aa578063839dc732146106b45780638da5cb5b1461076f57610158565b80632f745c59116101155780632f745c591461038d57806340c10f19146103ef57806342842e0e1461043d57806342966c68146104ab5780634f558e79146104d95780634f6ccce71461051f57610158565b806301ffc9a71461015d57806306fdde03146101c2578063081812fc14610245578063095ea7b3146102b357806318160ddd1461030157806323b872dd1461031f575b600080fd5b6101a86004803603602081101561017357600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610af8565b604051808215151515815260200191505060405180910390f35b6101ca610b5f565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561020a5780820151818401526020810190506101ef565b50505050905090810190601f1680156102375780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102716004803603602081101561025b57600080fd5b8101908080359060200190929190505050610c01565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102ff600480360360408110156102c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c9c565b005b610309610de0565b6040518082815260200191505060405180910390f35b61038b6004803603606081101561033557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610df1565b005b6103d9600480360360408110156103a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e67565b6040518082815260200191505060405180910390f35b61043b6004803603604081101561040557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ec2565b005b6104a96004803603606081101561045357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f9a565b005b6104d7600480360360208110156104c157600080fd5b8101908080359060200190929190505050610fba565b005b610505600480360360208110156104ef57600080fd5b8101908080359060200190929190505050611090565b604051808215151515815260200191505060405180910390f35b61054b6004803603602081101561053557600080fd5b81019080803590602001909291905050506110a2565b6040518082815260200191505060405180910390f35b61058d6004803603602081101561057757600080fd5b81019080803590602001909291905050506110c5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105d76110fc565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106175780820151818401526020810190506105fc565b50505050905090810190601f1680156106445780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106946004803603602081101561066857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061119e565b6040518082815260200191505060405180910390f35b6106b2611273565b005b61076d600480360360208110156106ca57600080fd5b81019080803590602001906401000000008111156106e757600080fd5b8201836020820111156106f957600080fd5b8035906020019184600183028401116401000000008311171561071b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506113fe565b005b6107776114d4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107c16114fe565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108015780820151818401526020810190506107e6565b50505050905090810190601f16801561082e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61088a6004803603604081101561085257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506115a0565b005b61098f600480360360808110156108a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561090957600080fd5b82018360208201111561091b57600080fd5b8035906020019184600183028401116401000000008311171561093d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611758565b005b6109bd600480360360208110156109a757600080fd5b81019080803590602001909291905050506117d0565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156109fd5780820151818401526020810190506109e2565b50505050905090810190601f168015610a2a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610a9a60048036036040811015610a4e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ab9565b604051808215151515815260200191505060405180910390f35b610af660048036036020811015610aca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b4d565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bf75780601f10610bcc57610100808354040283529160200191610bf7565b820191906000526020600020905b815481529060010190602001808311610bda57829003601f168201915b5050505050905090565b6000610c0c82611ea4565b610c61576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806135d3602c913960400191505060405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610ca7826110c5565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806136576021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610d4d611ec1565b73ffffffffffffffffffffffffffffffffffffffff161480610d7c5750610d7b81610d76611ec1565b611ab9565b5b610dd1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806135266038913960400191505060405180910390fd5b610ddb8383611ec9565b505050565b6000610dec6002611f82565b905090565b610e02610dfc611ec1565b82611f97565b610e57576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806136786031913960400191505060405180910390fd5b610e6283838361208b565b505050565b6000610eba82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206122ce90919063ffffffff16565b905092915050565b610eca611ec1565b73ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f8c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610f9682826122e8565b5050565b610fb583838360405180602001604052806000815250611758565b505050565b610fc2611ec1565b73ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611084576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61108d816124dc565b50565b600061109b82611ea4565b9050919050565b6000806110b983600261261690919063ffffffff16565b50905080915050919050565b60006110f5826040518060600160405280602981526020016135886029913960026126459092919063ffffffff16565b9050919050565b606060098054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111945780601f1061116957610100808354040283529160200191611194565b820191906000526020600020905b81548152906001019060200180831161117757829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611225576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061355e602a913960400191505060405180910390fd5b61126c600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612664565b9050919050565b61127b611ec1565b73ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461133d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b611406611ec1565b73ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146114c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6114d181612679565b50565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115965780601f1061156b57610100808354040283529160200191611596565b820191906000526020600020905b81548152906001019060200180831161157957829003601f168201915b5050505050905090565b6115a8611ec1565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611649576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b8060056000611656611ec1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611703611ec1565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b611769611763611ec1565b83611f97565b6117be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806136786031913960400191505060405180910390fd5b6117ca848484846127cb565b50505050565b60606117db82611ea4565b611830576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180613628602f913960400191505060405180910390fd5b6060600860008481526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118d95780601f106118ae576101008083540402835291602001916118d9565b820191906000526020600020905b8154815290600101906020018083116118bc57829003601f168201915b505050505090506000600980546001816001161561010002031660029004905014156119085780915050611ab4565b6000815111156119e15760098160405160200180838054600181600116156101000203166002900480156119735780601f10611951576101008083540402835291820191611973565b820191906000526020600020905b81548152906001019060200180831161195f575b505082805190602001908083835b602083106119a45780518252602082019150602081019050602083039250611981565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050611ab4565b60096119ec84611d5d565b6040516020018083805460018160011615610100020316600290048015611a4a5780601f10611a28576101008083540402835291820191611a4a565b820191906000526020600020905b815481529060010190602001808311611a36575b505082805190602001908083835b60208310611a7b5780518252602082019150602081019050602083039250611a58565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150505b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611b55611ec1565b73ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611c17576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611c9d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806134b06026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000821415611da5576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611e9f565b600082905060005b60008214611dcf578080600101915050600a8281611dc757fe5b049150611dad565b60608167ffffffffffffffff81118015611de857600080fd5b506040519080825280601f01601f191660200182016040528015611e1b5781602001600182028036833780820191505090505b50905060006001830390508593505b60008414611e9757600a8481611e3c57fe5b0660300160f81b82828060019003935081518110611e5657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8481611e8f57fe5b049350611e2a565b819450505050505b919050565b6000611eba82600261283d90919063ffffffff16565b9050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16611f3c836110c5565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000611f9082600001612857565b9050919050565b6000611fa282611ea4565b611ff7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806134fa602c913960400191505060405180910390fd5b6000612002836110c5565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061207157508373ffffffffffffffffffffffffffffffffffffffff1661205984610c01565b73ffffffffffffffffffffffffffffffffffffffff16145b8061208257506120818185611ab9565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166120ab826110c5565b73ffffffffffffffffffffffffffffffffffffffff1614612117576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806135ff6029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561219d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806134d66024913960400191505060405180910390fd5b6121a8838383612868565b6121b3600082611ec9565b61220481600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061286d90919063ffffffff16565b5061225681600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061288790919063ffffffff16565b5061226d818360026128a19092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006122dd83600001836128d6565b60001c905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561238b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b61239481611ea4565b15612407576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b61241360008383612868565b61246481600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061288790919063ffffffff16565b5061247b818360026128a19092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60006124e7826110c5565b90506124f581600084612868565b612500600083611ec9565b6000600860008481526020019081526020016000208054600181600116156101000203166002900490501461254f5760086000838152602001908152602001600020600061254e919061336e565b5b6125a082600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061286d90919063ffffffff16565b506125b582600261295990919063ffffffff16565b5081600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6000806000806126298660000186612973565b915091508160001c8160001c8090509350935050509250929050565b6000612658846000018460001b84612a0c565b60001c90509392505050565b600061267282600001612b02565b9050919050565b60008090504690506127c78261268e83611d5d565b60405160200180807f68747470733a2f2f00000000000000000000000000000000000000000000000081525060080183805190602001908083835b602083106126ec57805182526020820191506020810190506020830392506126c9565b6001836020036101000a038019825116818451168082178552505050505050905001807f2f7672652f76312f636861696e2f000000000000000000000000000000000000815250600e0182805190602001908083835b602083106127655780518252602082019150602081019050602083039250612742565b6001836020036101000a038019825116818451168082178552505050505050905001807f2f746f6b656e2f0000000000000000000000000000000000000000000000000081525060070192505050604051602081830303815290604052612b13565b5050565b6127d684848461208b565b6127e284848484612b2d565b612837576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603281526020018061347e6032913960400191505060405180910390fd5b50505050565b600061284f836000018360001b612d72565b905092915050565b600081600001805490509050919050565b505050565b600061287f836000018360001b612d95565b905092915050565b6000612899836000018360001b612e7d565b905092915050565b60006128cd846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b612eed565b90509392505050565b600081836000018054905011612937576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061345c6022913960400191505060405180910390fd5b82600001828154811061294657fe5b9060005260206000200154905092915050565b600061296b836000018360001b612fc9565b905092915050565b600080828460000180549050116129d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806135b16022913960400191505060405180910390fd5b60008460000184815481106129e657fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008084600101600085815260200190815260200160002054905060008114158390612ad3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612a98578082015181840152602081019050612a7d565b50505050905090810190601f168015612ac55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50846000016001820381548110612ae657fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b8060099080519060200190612b299291906133b6565b5050565b6000612b4e8473ffffffffffffffffffffffffffffffffffffffff166130e2565b612b5b5760019050612d6a565b6060612cf163150b7a0260e01b612b70611ec1565b888787604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612c20578082015181840152602081019050612c05565b50505050905090810190601f168015612c4d5780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405180606001604052806032815260200161347e603291398773ffffffffffffffffffffffffffffffffffffffff1661312d9092919063ffffffff16565b90506000818060200190516020811015612d0a57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614925050505b949350505050565b600080836001016000848152602001908152602001600020541415905092915050565b60008083600101600084815260200190815260200160002054905060008114612e715760006001820390506000600186600001805490500390506000866000018281548110612de057fe5b9060005260206000200154905080876000018481548110612dfd57fe5b9060005260206000200181905550600183018760010160008381526020019081526020016000208190555086600001805480612e3557fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050612e77565b60009150505b92915050565b6000612e898383613145565b612ee2578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612ee7565b600090505b92915050565b6000808460010160008581526020019081526020016000205490506000811415612f9457846000016040518060400160405280868152602001858152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550508460000180549050856001016000868152602001908152602001600020819055506001915050612fc2565b82856000016001830381548110612fa757fe5b90600052602060002090600202016001018190555060009150505b9392505050565b600080836001016000848152602001908152602001600020549050600081146130d6576000600182039050600060018660000180549050039050600086600001828154811061301457fe5b906000526020600020906002020190508087600001848154811061303457fe5b906000526020600020906002020160008201548160000155600182015481600101559050506001830187600101600083600001548152602001908152602001600020819055508660000180548061308757fe5b60019003818190600052602060002090600202016000808201600090556001820160009055505090558660010160008781526020019081526020016000206000905560019450505050506130dc565b60009150505b92915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561312457506000801b8214155b92505050919050565b606061313c8484600085613168565b90509392505050565b600080836001016000848152602001908152602001600020541415905092915050565b6060613173856130e2565b6131e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b602083106132355780518252602082019150602081019050602083039250613212565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114613297576040519150601f19603f3d011682016040523d82523d6000602084013e61329c565b606091505b509150915081156132b1578092505050613366565b6000815111156132c45780518082602001fd5b836040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561332b578082015181840152602081019050613310565b50505050905090810190601f1680156133585780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b949350505050565b50805460018160011615610100020316600290046000825580601f1061339457506133b3565b601f0160209004906000526020600020908101906133b29190613436565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106133f757805160ff1916838001178555613425565b82800160010185558215613425579182015b82811115613424578251825591602001919060010190613409565b5b5090506134329190613436565b5090565b61345891905b8082111561345457600081600090555060010161343c565b5090565b9056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a264697066735822122033bdd72e2da26816e47a72a01e3a35728fc86a2da1f8921f1a5ed3bddd645b4e64736f6c634300060a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101585760003560e01c80636352211e116100c357806395d89b411161007c57806395d89b41146107b9578063a22cb4651461083c578063b88d4fde1461088c578063c87b56dd14610991578063e985e9c514610a38578063f2fde38b14610ab457610158565b80636352211e146105615780636c0360eb146105cf57806370a0823114610652578063715018a6146106aa578063839dc732146106b45780638da5cb5b1461076f57610158565b80632f745c59116101155780632f745c591461038d57806340c10f19146103ef57806342842e0e1461043d57806342966c68146104ab5780634f558e79146104d95780634f6ccce71461051f57610158565b806301ffc9a71461015d57806306fdde03146101c2578063081812fc14610245578063095ea7b3146102b357806318160ddd1461030157806323b872dd1461031f575b600080fd5b6101a86004803603602081101561017357600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610af8565b604051808215151515815260200191505060405180910390f35b6101ca610b5f565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561020a5780820151818401526020810190506101ef565b50505050905090810190601f1680156102375780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102716004803603602081101561025b57600080fd5b8101908080359060200190929190505050610c01565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102ff600480360360408110156102c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c9c565b005b610309610de0565b6040518082815260200191505060405180910390f35b61038b6004803603606081101561033557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610df1565b005b6103d9600480360360408110156103a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e67565b6040518082815260200191505060405180910390f35b61043b6004803603604081101561040557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ec2565b005b6104a96004803603606081101561045357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f9a565b005b6104d7600480360360208110156104c157600080fd5b8101908080359060200190929190505050610fba565b005b610505600480360360208110156104ef57600080fd5b8101908080359060200190929190505050611090565b604051808215151515815260200191505060405180910390f35b61054b6004803603602081101561053557600080fd5b81019080803590602001909291905050506110a2565b6040518082815260200191505060405180910390f35b61058d6004803603602081101561057757600080fd5b81019080803590602001909291905050506110c5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105d76110fc565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106175780820151818401526020810190506105fc565b50505050905090810190601f1680156106445780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106946004803603602081101561066857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061119e565b6040518082815260200191505060405180910390f35b6106b2611273565b005b61076d600480360360208110156106ca57600080fd5b81019080803590602001906401000000008111156106e757600080fd5b8201836020820111156106f957600080fd5b8035906020019184600183028401116401000000008311171561071b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506113fe565b005b6107776114d4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107c16114fe565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108015780820151818401526020810190506107e6565b50505050905090810190601f16801561082e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61088a6004803603604081101561085257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506115a0565b005b61098f600480360360808110156108a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561090957600080fd5b82018360208201111561091b57600080fd5b8035906020019184600183028401116401000000008311171561093d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611758565b005b6109bd600480360360208110156109a757600080fd5b81019080803590602001909291905050506117d0565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156109fd5780820151818401526020810190506109e2565b50505050905090810190601f168015610a2a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610a9a60048036036040811015610a4e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ab9565b604051808215151515815260200191505060405180910390f35b610af660048036036020811015610aca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b4d565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bf75780601f10610bcc57610100808354040283529160200191610bf7565b820191906000526020600020905b815481529060010190602001808311610bda57829003601f168201915b5050505050905090565b6000610c0c82611ea4565b610c61576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806135d3602c913960400191505060405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610ca7826110c5565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806136576021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610d4d611ec1565b73ffffffffffffffffffffffffffffffffffffffff161480610d7c5750610d7b81610d76611ec1565b611ab9565b5b610dd1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806135266038913960400191505060405180910390fd5b610ddb8383611ec9565b505050565b6000610dec6002611f82565b905090565b610e02610dfc611ec1565b82611f97565b610e57576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806136786031913960400191505060405180910390fd5b610e6283838361208b565b505050565b6000610eba82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206122ce90919063ffffffff16565b905092915050565b610eca611ec1565b73ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f8c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610f9682826122e8565b5050565b610fb583838360405180602001604052806000815250611758565b505050565b610fc2611ec1565b73ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611084576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61108d816124dc565b50565b600061109b82611ea4565b9050919050565b6000806110b983600261261690919063ffffffff16565b50905080915050919050565b60006110f5826040518060600160405280602981526020016135886029913960026126459092919063ffffffff16565b9050919050565b606060098054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111945780601f1061116957610100808354040283529160200191611194565b820191906000526020600020905b81548152906001019060200180831161117757829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611225576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061355e602a913960400191505060405180910390fd5b61126c600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612664565b9050919050565b61127b611ec1565b73ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461133d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b611406611ec1565b73ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146114c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6114d181612679565b50565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115965780601f1061156b57610100808354040283529160200191611596565b820191906000526020600020905b81548152906001019060200180831161157957829003601f168201915b5050505050905090565b6115a8611ec1565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611649576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b8060056000611656611ec1565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611703611ec1565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b611769611763611ec1565b83611f97565b6117be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806136786031913960400191505060405180910390fd5b6117ca848484846127cb565b50505050565b60606117db82611ea4565b611830576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180613628602f913960400191505060405180910390fd5b6060600860008481526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118d95780601f106118ae576101008083540402835291602001916118d9565b820191906000526020600020905b8154815290600101906020018083116118bc57829003601f168201915b505050505090506000600980546001816001161561010002031660029004905014156119085780915050611ab4565b6000815111156119e15760098160405160200180838054600181600116156101000203166002900480156119735780601f10611951576101008083540402835291820191611973565b820191906000526020600020905b81548152906001019060200180831161195f575b505082805190602001908083835b602083106119a45780518252602082019150602081019050602083039250611981565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050611ab4565b60096119ec84611d5d565b6040516020018083805460018160011615610100020316600290048015611a4a5780601f10611a28576101008083540402835291820191611a4a565b820191906000526020600020905b815481529060010190602001808311611a36575b505082805190602001908083835b60208310611a7b5780518252602082019150602081019050602083039250611a58565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150505b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611b55611ec1565b73ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611c17576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611c9d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806134b06026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000821415611da5576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611e9f565b600082905060005b60008214611dcf578080600101915050600a8281611dc757fe5b049150611dad565b60608167ffffffffffffffff81118015611de857600080fd5b506040519080825280601f01601f191660200182016040528015611e1b5781602001600182028036833780820191505090505b50905060006001830390508593505b60008414611e9757600a8481611e3c57fe5b0660300160f81b82828060019003935081518110611e5657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8481611e8f57fe5b049350611e2a565b819450505050505b919050565b6000611eba82600261283d90919063ffffffff16565b9050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16611f3c836110c5565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000611f9082600001612857565b9050919050565b6000611fa282611ea4565b611ff7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806134fa602c913960400191505060405180910390fd5b6000612002836110c5565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061207157508373ffffffffffffffffffffffffffffffffffffffff1661205984610c01565b73ffffffffffffffffffffffffffffffffffffffff16145b8061208257506120818185611ab9565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166120ab826110c5565b73ffffffffffffffffffffffffffffffffffffffff1614612117576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806135ff6029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561219d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806134d66024913960400191505060405180910390fd5b6121a8838383612868565b6121b3600082611ec9565b61220481600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061286d90919063ffffffff16565b5061225681600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061288790919063ffffffff16565b5061226d818360026128a19092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006122dd83600001836128d6565b60001c905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561238b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b61239481611ea4565b15612407576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b61241360008383612868565b61246481600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061288790919063ffffffff16565b5061247b818360026128a19092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60006124e7826110c5565b90506124f581600084612868565b612500600083611ec9565b6000600860008481526020019081526020016000208054600181600116156101000203166002900490501461254f5760086000838152602001908152602001600020600061254e919061336e565b5b6125a082600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061286d90919063ffffffff16565b506125b582600261295990919063ffffffff16565b5081600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6000806000806126298660000186612973565b915091508160001c8160001c8090509350935050509250929050565b6000612658846000018460001b84612a0c565b60001c90509392505050565b600061267282600001612b02565b9050919050565b60008090504690506127c78261268e83611d5d565b60405160200180807f68747470733a2f2f00000000000000000000000000000000000000000000000081525060080183805190602001908083835b602083106126ec57805182526020820191506020810190506020830392506126c9565b6001836020036101000a038019825116818451168082178552505050505050905001807f2f7672652f76312f636861696e2f000000000000000000000000000000000000815250600e0182805190602001908083835b602083106127655780518252602082019150602081019050602083039250612742565b6001836020036101000a038019825116818451168082178552505050505050905001807f2f746f6b656e2f0000000000000000000000000000000000000000000000000081525060070192505050604051602081830303815290604052612b13565b5050565b6127d684848461208b565b6127e284848484612b2d565b612837576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603281526020018061347e6032913960400191505060405180910390fd5b50505050565b600061284f836000018360001b612d72565b905092915050565b600081600001805490509050919050565b505050565b600061287f836000018360001b612d95565b905092915050565b6000612899836000018360001b612e7d565b905092915050565b60006128cd846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b612eed565b90509392505050565b600081836000018054905011612937576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061345c6022913960400191505060405180910390fd5b82600001828154811061294657fe5b9060005260206000200154905092915050565b600061296b836000018360001b612fc9565b905092915050565b600080828460000180549050116129d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806135b16022913960400191505060405180910390fd5b60008460000184815481106129e657fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008084600101600085815260200190815260200160002054905060008114158390612ad3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612a98578082015181840152602081019050612a7d565b50505050905090810190601f168015612ac55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50846000016001820381548110612ae657fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b8060099080519060200190612b299291906133b6565b5050565b6000612b4e8473ffffffffffffffffffffffffffffffffffffffff166130e2565b612b5b5760019050612d6a565b6060612cf163150b7a0260e01b612b70611ec1565b888787604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612c20578082015181840152602081019050612c05565b50505050905090810190601f168015612c4d5780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405180606001604052806032815260200161347e603291398773ffffffffffffffffffffffffffffffffffffffff1661312d9092919063ffffffff16565b90506000818060200190516020811015612d0a57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614925050505b949350505050565b600080836001016000848152602001908152602001600020541415905092915050565b60008083600101600084815260200190815260200160002054905060008114612e715760006001820390506000600186600001805490500390506000866000018281548110612de057fe5b9060005260206000200154905080876000018481548110612dfd57fe5b9060005260206000200181905550600183018760010160008381526020019081526020016000208190555086600001805480612e3557fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050612e77565b60009150505b92915050565b6000612e898383613145565b612ee2578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612ee7565b600090505b92915050565b6000808460010160008581526020019081526020016000205490506000811415612f9457846000016040518060400160405280868152602001858152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550508460000180549050856001016000868152602001908152602001600020819055506001915050612fc2565b82856000016001830381548110612fa757fe5b90600052602060002090600202016001018190555060009150505b9392505050565b600080836001016000848152602001908152602001600020549050600081146130d6576000600182039050600060018660000180549050039050600086600001828154811061301457fe5b906000526020600020906002020190508087600001848154811061303457fe5b906000526020600020906002020160008201548160000155600182015481600101559050506001830187600101600083600001548152602001908152602001600020819055508660000180548061308757fe5b60019003818190600052602060002090600202016000808201600090556001820160009055505090558660010160008781526020019081526020016000206000905560019450505050506130dc565b60009150505b92915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561312457506000801b8214155b92505050919050565b606061313c8484600085613168565b90509392505050565b600080836001016000848152602001908152602001600020541415905092915050565b6060613173856130e2565b6131e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b602083106132355780518252602082019150602081019050602083039250613212565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114613297576040519150601f19603f3d011682016040523d82523d6000602084013e61329c565b606091505b509150915081156132b1578092505050613366565b6000815111156132c45780518082602001fd5b836040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561332b578082015181840152602081019050613310565b50505050905090810190601f1680156133585780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b949350505050565b50805460018160011615610100020316600290046000825580601f1061339457506133b3565b601f0160209004906000526020600020908101906133b29190613436565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106133f757805160ff1916838001178555613425565b82800160010185558215613425579182015b82811115613424578251825591602001919060010190613409565b5b5090506134329190613436565b5090565b61345891905b8082111561345457600081600090555060010161343c565b5090565b9056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a264697066735822122033bdd72e2da26816e47a72a01e3a35728fc86a2da1f8921f1a5ed3bddd645b4e64736f6c634300060a0033",
  "immutableReferences": {},
  "sourceMap": "676:1747:10:-:0;;;898:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3591:365:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:40:27;444:10;796:20;;777:18;;;:40;;:::i;:::-;3671:4:32;3663:5;:12;;;;;;;;;;;;:::i;:::-;;3695:6;3685:7;:16;;;;;;;;;;;;:::i;:::-;;3789:40;2756:10;3808:20;;3789:18;;;:40;;:::i;:::-;3839:49;3088:10;3858:29;;3839:18;;;:49;;:::i;:::-;3898:51;3461:10;3917:31;;3898:18;;;:51;;:::i;:::-;3591:365;;891:17:26;911:12;:10;;;:12;;:::i;:::-;891:32;;942:9;933:6;;:18;;;;;;;;;;;;;;;;;;999:9;966:43;;995:1;966:43;;;;;;;;;;;;857:159;989:31:10::1;1013:6;989:23;;;:31;;:::i;:::-;898:129:::0;676:1747;;1508:198:27;1606:10;1591:25;;:11;:25;;;;;1583:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1695:4;1659:20;:33;1680:11;1659:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1508:198;:::o;616:104:25:-;669:15;703:10;696:17;;616:104;:::o;1122:418:10:-;1332:12;1347:1;1332:16;;1392:9;1381:20;;1420:113;1468:6;1494:25;1511:7;1494:16;;;;;:25;;:::i;:::-;1439:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1420:11;;;:113;;:::i;:::-;1122:418;;:::o;228:723:40:-;284:13;510:1;501:5;:10;497:51;;;527:10;;;;;;;;;;;;;;;;;;;;;497:51;557:12;572:5;557:20;;587:14;611:75;626:1;618:4;:9;611:75;;643:8;;;;;;;673:2;665:10;;;;;;;;;611:75;;;695:19;727:6;717:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;695:39;;744:13;769:1;760:6;:10;744:26;;787:5;780:12;;802:112;817:1;809:4;:9;802:112;;875:2;868:4;:9;;;;;;863:2;:14;852:27;;834:6;841:7;;;;;;;834:15;;;;;;;;;;;:45;;;;;;;;;;;901:2;893:10;;;;;;;;;802:112;;;937:6;923:21;;;;;;228:723;;;;:::o;14673:98:32:-;14756:8;14745;:19;;;;;;;;;;;;:::i;:::-;;14673:98;:::o;676:1747:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "676:1747:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;974:140:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4512:90:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7119:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6677:381;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6187:200;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7967:300;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5964:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1839:97:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8333:149:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2018:81:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2319:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6459:161:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4283:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5798:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4015:211;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1715:145:26;;;:::i;:::-;;1636:121:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1092:77:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4666:94:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7395:290;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8548:282;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4826:740;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7751:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2009:240:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;974:140:27;1051:4;1074:20;:33;1095:11;1074:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1067:40;;974:140;;;:::o;4512:90:32:-;4558:13;4590:5;4583:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4512:90;:::o;7119:209::-;7187:7;7214:16;7222:7;7214;:16::i;:::-;7206:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7297:15;:24;7313:7;7297:24;;;;;;;;;;;;;;;;;;;;;7290:31;;7119:209;;;:::o;6677:381::-;6757:13;6773:16;6781:7;6773;:16::i;:::-;6757:32;;6813:5;6807:11;;:2;:11;;;;6799:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6891:5;6875:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;6900:37;6917:5;6924:12;:10;:12::i;:::-;6900:16;:37::i;:::-;6875:62;6867:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7030:21;7039:2;7043:7;7030:8;:21::i;:::-;6677:381;;;:::o;6187:200::-;6240:7;6359:21;:12;:19;:21::i;:::-;6352:28;;6187:200;:::o;7967:300::-;8126:41;8145:12;:10;:12::i;:::-;8159:7;8126:18;:41::i;:::-;8118:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8232:28;8242:4;8248:2;8252:7;8232:9;:28::i;:::-;7967:300;;;:::o;5964:152::-;6053:7;6079:30;6103:5;6079:13;:20;6093:5;6079:20;;;;;;;;;;;;;;;:23;;:30;;;;:::i;:::-;6072:37;;5964:152;;;;:::o;1839:97:10:-;1306:12:26;:10;:12::i;:::-;1296:22;;:6;;;;;;;;;;;:22;;;1288:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1911:18:10::1;1917:2;1921:7;1911:5;:18::i;:::-;1839:97:::0;;:::o;8333:149:32:-;8436:39;8453:4;8459:2;8463:7;8436:39;;;;;;;;;;;;:16;:39::i;:::-;8333:149;;;:::o;2018:81:10:-;1306:12:26;:10;:12::i;:::-;1296:22;;:6;;;;;;;;;;;:22;;;1288:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2078:14:10::1;2084:7;2078:5;:14::i;:::-;2018:81:::0;:::o;2319:102::-;2375:4;2398:16;2406:7;2398;:16::i;:::-;2391:23;;2319:102;;;:::o;6459:161:32:-;6526:7;6546:15;6567:22;6583:5;6567:12;:15;;:22;;;;:::i;:::-;6545:44;;;6606:7;6599:14;;;6459:161;;;:::o;4283:167::-;4347:7;4373:70;4390:7;4373:70;;;;;;;;;;;;;;;;;:12;:16;;:70;;;;;:::i;:::-;4366:77;;4283:167;;;:::o;5798:87::-;5838:13;5870:8;5863:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5798:87;:::o;4015:211::-;4079:7;4123:1;4106:19;;:5;:19;;;;4098:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4190:29;:13;:20;4204:5;4190:20;;;;;;;;;;;;;;;:27;:29::i;:::-;4183:36;;4015:211;;;:::o;1715:145:26:-;1306:12;:10;:12::i;:::-;1296:22;;:6;;;;;;;;;;;:22;;;1288:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1821:1:::1;1784:40;;1805:6;;;;;;;;;;;1784:40;;;;;;;;;;;;1851:1;1834:6;;:19;;;;;;;;;;;;;;;;;;1715:145::o:0;1636:121:10:-;1306:12:26;:10;:12::i;:::-;1296:22;;:6;;;;;;;;;;;:22;;;1288:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1719:31:10::1;1743:6;1719:23;:31::i;:::-;1636:121:::0;:::o;1092:77:26:-;1130:7;1156:6;;;;;;;;;;;1149:13;;1092:77;:::o;4666:94:32:-;4714:13;4746:7;4739:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4666:94;:::o;7395:290::-;7509:12;:10;:12::i;:::-;7497:24;;:8;:24;;;;7489:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7607:8;7562:18;:32;7581:12;:10;:12::i;:::-;7562:32;;;;;;;;;;;;;;;:42;7595:8;7562:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;7659:8;7630:48;;7645:12;:10;:12::i;:::-;7630:48;;;7669:8;7630:48;;;;;;;;;;;;;;;;;;;;;;7395:290;;:::o;8548:282::-;8679:41;8698:12;:10;:12::i;:::-;8712:7;8679:18;:41::i;:::-;8671:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8784:39;8798:4;8804:2;8808:7;8817:5;8784:13;:39::i;:::-;8548:282;;;;:::o;4826:740::-;4891:13;4924:16;4932:7;4924;:16::i;:::-;4916:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5003:23;5029:10;:19;5040:7;5029:19;;;;;;;;;;;5003:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5147:1;5127:8;5121:22;;;;;;;;;;;;;;;;:27;5117:74;;;5171:9;5164:16;;;;;5117:74;5319:1;5299:9;5293:23;:27;5289:110;;;5367:8;5377:9;5350:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5336:52;;;;;5289:110;5529:8;5539:18;:7;:16;:18::i;:::-;5512:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5498:61;;;4826:740;;;;:::o;7751:154::-;7840:4;7863:18;:25;7882:5;7863:25;;;;;;;;;;;;;;;:35;7889:8;7863:35;;;;;;;;;;;;;;;;;;;;;;;;;7856:42;;7751:154;;;;:::o;2009:240:26:-;1306:12;:10;:12::i;:::-;1296:22;;:6;;;;;;;;;;;:22;;;1288:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2117:1:::1;2097:22;;:8;:22;;;;2089:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2206:8;2177:38;;2198:6;;;;;;;;;;;2177:38;;;;;;;;;;;;2234:8;2225:6;;:17;;;;;;;;;;;;;;;;;;2009:240:::0;:::o;228:723:40:-;284:13;510:1;501:5;:10;497:51;;;527:10;;;;;;;;;;;;;;;;;;;;;497:51;557:12;572:5;557:20;;587:14;611:75;626:1;618:4;:9;611:75;;643:8;;;;;;;673:2;665:10;;;;;;;;;611:75;;;695:19;727:6;717:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;695:39;;744:13;769:1;760:6;:10;744:26;;787:5;780:12;;802:112;817:1;809:4;:9;802:112;;875:2;868:4;:9;;;;;;863:2;:14;852:27;;834:6;841:7;;;;;;;834:15;;;;;;;;;;;:45;;;;;;;;;;;901:2;893:10;;;;;;;;;802:112;;;937:6;923:21;;;;;;228:723;;;;:::o;10263:117:32:-;10320:4;10343:30;10365:7;10343:12;:21;;:30;;;;:::i;:::-;10336:37;;10263:117;;;:::o;616:104:25:-;669:15;703:10;696:17;;616:104;:::o;15919:155:32:-;16011:2;15984:15;:24;16000:7;15984:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;16059:7;16055:2;16028:39;;16037:16;16045:7;16037;:16::i;:::-;16028:39;;;;;;;;;;;;15919:155;;:::o;7049:121:38:-;7118:7;7144:19;7152:3;:10;;7144:7;:19::i;:::-;7137:26;;7049:121;;;:::o;10538:329:32:-;10623:4;10647:16;10655:7;10647;:16::i;:::-;10639:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10722:13;10738:16;10746:7;10738;:16::i;:::-;10722:32;;10783:5;10772:16;;:7;:16;;;:51;;;;10816:7;10792:31;;:20;10804:7;10792:11;:20::i;:::-;:31;;;10772:51;:87;;;;10827:32;10844:5;10851:7;10827:16;:32::i;:::-;10772:87;10764:96;;;10538:329;;;;:::o;13532:559::-;13649:4;13629:24;;:16;13637:7;13629;:16::i;:::-;:24;;;13621:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13731:1;13717:16;;:2;:16;;;;13709:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13785:39;13806:4;13812:2;13816:7;13785:20;:39::i;:::-;13886:29;13903:1;13907:7;13886:8;:29::i;:::-;13926:35;13953:7;13926:13;:19;13940:4;13926:19;;;;;;;;;;;;;;;:26;;:35;;;;:::i;:::-;;13971:30;13993:7;13971:13;:17;13985:2;13971:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;14012:29;14029:7;14038:2;14012:12;:16;;:29;;;;;:::i;:::-;;14076:7;14072:2;14057:27;;14066:4;14057:27;;;;;;;;;;;;13532:559;;;:::o;7675:135:39:-;7746:7;7780:22;7784:3;:10;;7796:5;7780:3;:22::i;:::-;7772:31;;7765:38;;7675:135;;;;:::o;12096:393:32:-;12189:1;12175:16;;:2;:16;;;;12167:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12247:16;12255:7;12247;:16::i;:::-;12246:17;12238:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12307:45;12336:1;12340:2;12344:7;12307:20;:45::i;:::-;12363:30;12385:7;12363:13;:17;12377:2;12363:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;12404:29;12421:7;12430:2;12404:12;:16;;:29;;;;;:::i;:::-;;12474:7;12470:2;12449:33;;12466:1;12449:33;;;;;;;;;;;;12096:393;;:::o;12706:502::-;12765:13;12781:16;12789:7;12781;:16::i;:::-;12765:32;;12808:48;12829:5;12844:1;12848:7;12808:20;:48::i;:::-;12894:29;12911:1;12915:7;12894:8;:29::i;:::-;13010:1;12979:10;:19;12990:7;12979:19;;;;;;;;;;;12973:33;;;;;;;;;;;;;;;;:38;12969:95;;13034:10;:19;13045:7;13034:19;;;;;;;;;;;;13027:26;;;;:::i;:::-;12969:95;13074:36;13102:7;13074:13;:20;13088:5;13074:20;;;;;;;;;;;;;;;:27;;:36;;;;:::i;:::-;;13121:28;13141:7;13121:12;:19;;:28;;;;:::i;:::-;;13193:7;13189:1;13165:36;;13174:5;13165:36;;;;;;;;;;;;12706:502;;:::o;7498:224:38:-;7578:7;7587;7607:11;7620:13;7637:22;7641:3;:10;;7653:5;7637:3;:22::i;:::-;7606:53;;;;7685:3;7677:12;;7707:5;7699:14;;7669:46;;;;;;;;;7498:224;;;;;:::o;8141:202::-;8248:7;8290:44;8295:3;:10;;8315:3;8307:12;;8321;8290:4;:44::i;:::-;8282:53;;8267:69;;8141:202;;;;;:::o;7231:112:39:-;7291:7;7317:19;7325:3;:10;;7317:7;:19::i;:::-;7310:26;;7231:112;;;:::o;1122:418:10:-;1332:12;1347:1;1332:16;;1392:9;1381:20;;1420:113;1468:6;1494:25;1511:7;1494:16;:25::i;:::-;1439:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1420:11;:113::i;:::-;1122:418;;:::o;9691:269:32:-;9804:28;9814:4;9820:2;9824:7;9804:9;:28::i;:::-;9850:48;9873:4;9879:2;9883:7;9892:5;9850:22;:48::i;:::-;9842:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9691:269;;;;:::o;6817:149:38:-;6901:4;6924:35;6934:3;:10;;6954:3;6946:12;;6924:9;:35::i;:::-;6917:42;;6817:149;;;;:::o;4509:108::-;4565:7;4591:3;:12;;:19;;;;4584:26;;4509:108;;;:::o;16670:93:32:-;;;;:::o;6790:135:39:-;6860:4;6883:35;6891:3;:10;;6911:5;6903:14;;6883:7;:35::i;:::-;6876:42;;6790:135;;;;:::o;6493:129::-;6560:4;6583:32;6588:3;:10;;6608:5;6600:14;;6583:4;:32::i;:::-;6576:39;;6493:129;;;;:::o;6265:174:38:-;6354:4;6377:55;6382:3;:10;;6402:3;6394:12;;6424:5;6416:14;;6408:23;;6377:4;:55::i;:::-;6370:62;;6265:174;;;;;:::o;4449:201:39:-;4516:7;4564:5;4543:3;:11;;:18;;;;:26;4535:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4625:3;:11;;4637:5;4625:18;;;;;;;;;;;;;;;;4618:25;;4449:201;;;;:::o;6598:140:38:-;6675:4;6698:33;6706:3;:10;;6726:3;6718:12;;6698:7;:33::i;:::-;6691:40;;6598:140;;;;:::o;4960:274::-;5027:7;5036;5085:5;5063:3;:12;;:19;;;;:27;5055:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5140:22;5165:3;:12;;5178:5;5165:19;;;;;;;;;;;;;;;;;;5140:44;;5202:5;:10;;;5214:5;:12;;;5194:33;;;;;4960:274;;;;;:::o;5641:315::-;5735:7;5754:16;5773:3;:12;;:17;5786:3;5773:17;;;;;;;;;;;;5754:36;;5820:1;5808:8;:13;;5823:12;5800:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5889:3;:12;;5913:1;5902:8;:12;5889:26;;;;;;;;;;;;;;;;;;:33;;;5882:40;;;5641:315;;;;;:::o;4010:107:39:-;4066:7;4092:3;:11;;:18;;;;4085:25;;4010:107;;;:::o;14673:98:32:-;14756:8;14745;:19;;;;;;;;;;;;:::i;:::-;;14673:98;:::o;15324:589::-;15444:4;15469:15;:2;:13;;;:15::i;:::-;15464:58;;15507:4;15500:11;;;;15464:58;15531:23;15557:246;15609:45;;;15668:12;:10;:12::i;:::-;15694:4;15712:7;15733:5;15573:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15557:246;;;;;;;;;;;;;;;;;:2;:15;;;;:246;;;;;:::i;:::-;15531:272;;15813:13;15840:10;15829:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15813:48;;1094:10;15889:16;;15879:26;;;:6;:26;;;;15871:35;;;;15324:589;;;;;;;:::o;4296:123:38:-;4367:4;4411:1;4390:3;:12;;:17;4403:3;4390:17;;;;;;;;;;;;:22;;4383:29;;4296:123;;;;:::o;2209:1512:39:-;2275:4;2391:18;2412:3;:12;;:19;2425:5;2412:19;;;;;;;;;;;;2391:40;;2460:1;2446:10;:15;2442:1273;;2803:21;2840:1;2827:10;:14;2803:38;;2855:17;2896:1;2875:3;:11;;:18;;;;:22;2855:42;;3137:17;3157:3;:11;;3169:9;3157:22;;;;;;;;;;;;;;;;3137:42;;3300:9;3271:3;:11;;3283:13;3271:26;;;;;;;;;;;;;;;:38;;;;3417:1;3401:13;:17;3375:3;:12;;:23;3388:9;3375:23;;;;;;;;;;;:43;;;;3524:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3616:3;:12;;:19;3629:5;3616:19;;;;;;;;;;;3609:26;;;3657:4;3650:11;;;;;;;;2442:1273;3699:5;3692:12;;;2209:1512;;;;;:::o;1637:404::-;1700:4;1721:21;1731:3;1736:5;1721:9;:21::i;:::-;1716:319;;1758:3;:11;;1775:5;1758:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1938:3;:11;;:18;;;;1916:3;:12;;:19;1929:5;1916:19;;;;;;;;;;;:40;;;;1977:4;1970:11;;;;1716:319;2019:5;2012:12;;1637:404;;;;;:::o;1854:678:38:-;1930:4;2044:16;2063:3;:12;;:17;2076:3;2063:17;;;;;;;;;;;;2044:36;;2107:1;2095:8;:13;2091:435;;;2161:3;:12;;2179:38;;;;;;;;2196:3;2179:38;;;;2209:5;2179:38;;;2161:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2373:3;:12;;:19;;;;2353:3;:12;;:17;2366:3;2353:17;;;;;;;;;;;:39;;;;2413:4;2406:11;;;;;2091:435;2484:5;2448:3;:12;;2472:1;2461:8;:12;2448:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2510:5;2503:12;;;1854:678;;;;;;:::o;2700:1517::-;2764:4;2878:16;2897:3;:12;;:17;2910:3;2897:17;;;;;;;;;;;;2878:36;;2941:1;2929:8;:13;2925:1286;;3285:21;3320:1;3309:8;:12;3285:36;;3335:17;3377:1;3355:3;:12;;:19;;;;:23;3335:43;;3618:26;3647:3;:12;;3660:9;3647:23;;;;;;;;;;;;;;;;;;3618:52;;3792:9;3762:3;:12;;3775:13;3762:27;;;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;;3914:1;3898:13;:17;3867:3;:12;;:28;3880:9;:14;;;3867:28;;;;;;;;;;;:48;;;;4021:3;:12;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4114:3;:12;;:17;4127:3;4114:17;;;;;;;;;;;4107:24;;;4153:4;4146:11;;;;;;;;2925:1286;4195:5;4188:12;;;2700:1517;;;;;:::o;744:610:37:-;804:4;1062:16;1088:19;1110:66;1088:88;;;;1277:7;1265:20;1253:32;;1316:11;1304:8;:23;;:42;;;;;1343:3;1331:15;;:8;:15;;1304:42;1296:51;;;;744:610;;;:::o;3796:194::-;3899:12;3930:53;3953:6;3961:4;3967:1;3970:12;3930:22;:53::i;:::-;3923:60;;3796:194;;;;;:::o;3802:127:39:-;3875:4;3921:1;3898:3;:12;;:19;3911:5;3898:19;;;;;;;;;;;;:24;;3891:31;;3802:127;;;;:::o;5143:958:37:-;5273:12;5305:18;5316:6;5305:10;:18::i;:::-;5297:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5428:12;5442:23;5469:6;:11;;5489:8;5500:4;5469:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5427:78;;;;5519:7;5515:580;;;5549:10;5542:17;;;;;;5515:580;5680:1;5660:10;:17;:21;5656:429;;;5918:10;5912:17;5978:15;5965:10;5961:2;5957:19;5950:44;5867:145;6057:12;6050:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5143:958;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.6.10;\n\nimport \"openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\";\n\nimport \"openzeppelin-solidity/contracts/access/Ownable.sol\";\n\nimport \"openzeppelin-solidity/contracts/utils/Strings.sol\";\n\n/**\n * The MacroverseRealEstate contract keeps track of who currently owns virtual\n * real estate in the Macroverse world, at all scales. It supersedes the\n * MacroverseStarRegistry. Registration and Macroverse-specific manipulation of\n * tokens is accomplished through the MacroverseUniversalRegistry, which owns\n * this contract.\n *\n * The split between this contract and the MacroverseUniversalRegistry exists\n * to keep contract size under the limit. \n */\ncontract MacroverseRealEstate is ERC721, Ownable {\n\n    \n    /**\n     * Deploy the backend, taking mint, burn, and set-user commands from the deployer.\n     * Use the given domain as the domain for token URIs.\n     */\n    constructor(string memory domain) public ERC721(\"Macroverse Real Estate\", \"MRE\") {\n        _setTokenMetadataDomain(domain);\n    }\n    \n    /**\n     * Allow this contract to change the ERC721 metadata URI domain.\n     */\n    function _setTokenMetadataDomain(string memory domain) internal {\n        // Set up new OpenZeppelin 3.0 automatic token URI system.\n        // Good thing we match their format or we'd have to fork OZ.\n        uint chainId = 0;\n        assembly {\n            chainId := chainid()\n        }\n        _setBaseURI(string(abi.encodePacked(\"https://\", domain, \"/vre/v1/chain/\", Strings.toString(chainId), \"/token/\")));\n    }\n    \n    /**\n     * Allow this the owner to change the ERC721 metadata URI domain.\n     */\n    function setTokenMetadataDomain(string memory domain) external onlyOwner {\n        _setTokenMetadataDomain(domain);\n    }\n\n    /**\n     * Mint tokens at the direction of the owning contract.\n     */\n    function mint(address to, uint256 tokenId) external onlyOwner {\n        _mint(to, tokenId);\n    }\n\n    /**\n     * Burn tokens at the direction of the owning contract.\n     */\n    function burn(uint256 tokenId) external onlyOwner {\n        _burn(tokenId);\n    }\n\n    /**\n     * Publically expose a token existence test. Returns true if the given\n     * token is owned by someone, and false otherwise. Note that tokens sent to\n     * 0x0 but not burned may still exist.\n     */\n    function exists(uint256 tokenId) external view returns (bool) {\n        return _exists(tokenId);\n    }\n}\n\n// This code is part of Macroverse and is licensed: UNLICENSED\n",
  "sourcePath": "/z/home/anovak/workspace/macroverse/contracts/MacroverseRealEstate.sol",
  "ast": {
    "absolutePath": "/z/home/anovak/workspace/macroverse/contracts/MacroverseRealEstate.sol",
    "exportedSymbols": {
      "MacroverseRealEstate": [
        3178
      ]
    },
    "id": 3179,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3070,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:10"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "id": 3071,
        "nodeType": "ImportDirective",
        "scope": 3179,
        "sourceUnit": 12585,
        "src": "26:65:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "id": 3072,
        "nodeType": "ImportDirective",
        "scope": 3179,
        "sourceUnit": 10804,
        "src": "93:60:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/utils/Strings.sol",
        "file": "openzeppelin-solidity/contracts/utils/Strings.sol",
        "id": 3073,
        "nodeType": "ImportDirective",
        "scope": 3179,
        "sourceUnit": 13918,
        "src": "155:59:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3075,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12584,
              "src": "709:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$12584",
                "typeString": "contract ERC721"
              }
            },
            "id": 3076,
            "nodeType": "InheritanceSpecifier",
            "src": "709:6:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3077,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10803,
              "src": "717:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$10803",
                "typeString": "contract Ownable"
              }
            },
            "id": 3078,
            "nodeType": "InheritanceSpecifier",
            "src": "717:7:10"
          }
        ],
        "contractDependencies": [
          10694,
          10803,
          10860,
          10872,
          12584,
          12700,
          12731,
          12758
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3074,
          "nodeType": "StructuredDocumentation",
          "src": "216:459:10",
          "text": " The MacroverseRealEstate contract keeps track of who currently owns virtual\n real estate in the Macroverse world, at all scales. It supersedes the\n MacroverseStarRegistry. Registration and Macroverse-specific manipulation of\n tokens is accomplished through the MacroverseUniversalRegistry, which owns\n this contract.\n The split between this contract and the MacroverseUniversalRegistry exists\n to keep contract size under the limit. "
        },
        "fullyImplemented": true,
        "id": 3178,
        "linearizedBaseContracts": [
          3178,
          10803,
          12584,
          12731,
          12758,
          12700,
          10860,
          10872,
          10694
        ],
        "name": "MacroverseRealEstate",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3092,
              "nodeType": "Block",
              "src": "979:48:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3089,
                        "name": "domain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3081,
                        "src": "1013:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3088,
                      "name": "_setTokenMetadataDomain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3122,
                      "src": "989:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "989:31:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3091,
                  "nodeType": "ExpressionStatement",
                  "src": "989:31:10"
                }
              ]
            },
            "documentation": {
              "id": 3079,
              "nodeType": "StructuredDocumentation",
              "src": "737:156:10",
              "text": " Deploy the backend, taking mint, burn, and set-user commands from the deployer.\n Use the given domain as the domain for token URIs."
            },
            "id": 3093,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4d6163726f7665727365205265616c20457374617465",
                    "id": 3084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "946:24:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6448b0c6d20bc4eea194151115138cf3e5fb3b1b1353ee46d9467b39e619b61d",
                      "typeString": "literal_string \"Macroverse Real Estate\""
                    },
                    "value": "Macroverse Real Estate"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4d5245",
                    "id": 3085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "972:5:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6a276174106362147b87c12a762f3687580129251ca71e76de954b6d530dfa8f",
                      "typeString": "literal_string \"MRE\""
                    },
                    "value": "MRE"
                  }
                ],
                "id": 3086,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3083,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 12584,
                  "src": "939:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$12584_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "939:39:10"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3081,
                  "mutability": "mutable",
                  "name": "domain",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3093,
                  "src": "910:20:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3080,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "910:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "909:22:10"
            },
            "returnParameters": {
              "id": 3087,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "979:0:10"
            },
            "scope": 3178,
            "src": "898:129:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3121,
              "nodeType": "Block",
              "src": "1186:354:10",
              "statements": [
                {
                  "assignments": [
                    3100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3100,
                      "mutability": "mutable",
                      "name": "chainId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3121,
                      "src": "1332:12:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3099,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1332:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3102,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 3101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1347:1:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1332:16:10"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1367:44:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1381:20:10",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "chainid",
                            "nodeType": "YulIdentifier",
                            "src": "1392:7:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1392:9:10"
                        },
                        "variableNames": [
                          {
                            "name": "chainId",
                            "nodeType": "YulIdentifier",
                            "src": "1381:7:10"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 3100,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1381:7:10",
                      "valueSize": 1
                    }
                  ],
                  "id": 3103,
                  "nodeType": "InlineAssembly",
                  "src": "1358:53:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "68747470733a2f2f",
                                "id": 3109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1456:10:10",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_22a0bccaefa7e44032d5e21026b45254e49ef9bce8763cb450aaa27db3ce52a1",
                                  "typeString": "literal_string \"https://\""
                                },
                                "value": "https://"
                              },
                              {
                                "argumentTypes": null,
                                "id": 3110,
                                "name": "domain",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3096,
                                "src": "1468:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "2f7672652f76312f636861696e2f",
                                "id": 3111,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1476:16:10",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_0774c37070c25323d9b5c853e81b491b65ba6246d69a8c9915e5ea5206ebcec1",
                                  "typeString": "literal_string \"/vre/v1/chain/\""
                                },
                                "value": "/vre/v1/chain/"
                              },
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 3114,
                                    "name": "chainId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3100,
                                    "src": "1511:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3112,
                                    "name": "Strings",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13917,
                                    "src": "1494:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Strings_$13917_$",
                                      "typeString": "type(library Strings)"
                                    }
                                  },
                                  "id": 3113,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "toString",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13916,
                                  "src": "1494:16:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (string memory)"
                                  }
                                },
                                "id": 3115,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1494:25:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "2f746f6b656e2f",
                                "id": 3116,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1521:9:10",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_744d9f0f09a47cf88aebd2a73ac1c367e8c95a4e22be6a16d5f075d39c7618db",
                                  "typeString": "literal_string \"/token/\""
                                },
                                "value": "/token/"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_22a0bccaefa7e44032d5e21026b45254e49ef9bce8763cb450aaa27db3ce52a1",
                                  "typeString": "literal_string \"https://\""
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0774c37070c25323d9b5c853e81b491b65ba6246d69a8c9915e5ea5206ebcec1",
                                  "typeString": "literal_string \"/vre/v1/chain/\""
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_744d9f0f09a47cf88aebd2a73ac1c367e8c95a4e22be6a16d5f075d39c7618db",
                                  "typeString": "literal_string \"/token/\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 3107,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1439:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 3108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1439:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 3117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1439:92:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 3106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1432:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": {
                            "id": 3105,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "1432:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1432:100:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3104,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12492,
                      "src": "1420:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1420:113:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3120,
                  "nodeType": "ExpressionStatement",
                  "src": "1420:113:10"
                }
              ]
            },
            "documentation": {
              "id": 3094,
              "nodeType": "StructuredDocumentation",
              "src": "1037:80:10",
              "text": " Allow this contract to change the ERC721 metadata URI domain."
            },
            "id": 3122,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setTokenMetadataDomain",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3096,
                  "mutability": "mutable",
                  "name": "domain",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3122,
                  "src": "1155:20:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3095,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1154:22:10"
            },
            "returnParameters": {
              "id": 3098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1186:0:10"
            },
            "scope": 3178,
            "src": "1122:418:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3134,
              "nodeType": "Block",
              "src": "1709:48:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3131,
                        "name": "domain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3125,
                        "src": "1743:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3130,
                      "name": "_setTokenMetadataDomain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3122,
                      "src": "1719:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1719:31:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3133,
                  "nodeType": "ExpressionStatement",
                  "src": "1719:31:10"
                }
              ]
            },
            "documentation": {
              "id": 3123,
              "nodeType": "StructuredDocumentation",
              "src": "1550:81:10",
              "text": " Allow this the owner to change the ERC721 metadata URI domain."
            },
            "functionSelector": "839dc732",
            "id": 3135,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3128,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3127,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10752,
                  "src": "1699:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1699:9:10"
              }
            ],
            "name": "setTokenMetadataDomain",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3125,
                  "mutability": "mutable",
                  "name": "domain",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3135,
                  "src": "1668:20:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3124,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1668:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1667:22:10"
            },
            "returnParameters": {
              "id": 3129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1709:0:10"
            },
            "scope": 3178,
            "src": "1636:121:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3150,
              "nodeType": "Block",
              "src": "1901:35:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3146,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3138,
                        "src": "1917:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3147,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3140,
                        "src": "1921:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3145,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12320,
                      "src": "1911:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1911:18:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3149,
                  "nodeType": "ExpressionStatement",
                  "src": "1911:18:10"
                }
              ]
            },
            "documentation": {
              "id": 3136,
              "nodeType": "StructuredDocumentation",
              "src": "1763:71:10",
              "text": " Mint tokens at the direction of the owning contract."
            },
            "functionSelector": "40c10f19",
            "id": 3151,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3143,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3142,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10752,
                  "src": "1891:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1891:9:10"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3138,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3151,
                  "src": "1853:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1853:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3140,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3151,
                  "src": "1865:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1865:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1852:29:10"
            },
            "returnParameters": {
              "id": 3144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1901:0:10"
            },
            "scope": 3178,
            "src": "1839:97:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3163,
              "nodeType": "Block",
              "src": "2068:31:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3160,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3154,
                        "src": "2084:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3159,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12388,
                      "src": "2078:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2078:14:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3162,
                  "nodeType": "ExpressionStatement",
                  "src": "2078:14:10"
                }
              ]
            },
            "documentation": {
              "id": 3152,
              "nodeType": "StructuredDocumentation",
              "src": "1942:71:10",
              "text": " Burn tokens at the direction of the owning contract."
            },
            "functionSelector": "42966c68",
            "id": 3164,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3157,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3156,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10752,
                  "src": "2058:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2058:9:10"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3154,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3164,
                  "src": "2032:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2032:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2031:17:10"
            },
            "returnParameters": {
              "id": 3158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2068:0:10"
            },
            "scope": 3178,
            "src": "2018:81:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3176,
              "nodeType": "Block",
              "src": "2381:40:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3173,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3167,
                        "src": "2406:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3172,
                      "name": "_exists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12177,
                      "src": "2398:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 3174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2398:16:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3171,
                  "id": 3175,
                  "nodeType": "Return",
                  "src": "2391:23:10"
                }
              ]
            },
            "documentation": {
              "id": 3165,
              "nodeType": "StructuredDocumentation",
              "src": "2105:209:10",
              "text": " Publically expose a token existence test. Returns true if the given\n token is owned by someone, and false otherwise. Note that tokens sent to\n 0x0 but not burned may still exist."
            },
            "functionSelector": "4f558e79",
            "id": 3177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exists",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3167,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3177,
                  "src": "2335:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2335:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2334:17:10"
            },
            "returnParameters": {
              "id": 3171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3170,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3177,
                  "src": "2375:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3169,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2375:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2374:6:10"
            },
            "scope": 3178,
            "src": "2319:102:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3179,
        "src": "676:1747:10"
      }
    ],
    "src": "0:2488:10"
  },
  "legacyAST": {
    "absolutePath": "/z/home/anovak/workspace/macroverse/contracts/MacroverseRealEstate.sol",
    "exportedSymbols": {
      "MacroverseRealEstate": [
        3178
      ]
    },
    "id": 3179,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3070,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:10"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "id": 3071,
        "nodeType": "ImportDirective",
        "scope": 3179,
        "sourceUnit": 12585,
        "src": "26:65:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "id": 3072,
        "nodeType": "ImportDirective",
        "scope": 3179,
        "sourceUnit": 10804,
        "src": "93:60:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/utils/Strings.sol",
        "file": "openzeppelin-solidity/contracts/utils/Strings.sol",
        "id": 3073,
        "nodeType": "ImportDirective",
        "scope": 3179,
        "sourceUnit": 13918,
        "src": "155:59:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3075,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12584,
              "src": "709:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$12584",
                "typeString": "contract ERC721"
              }
            },
            "id": 3076,
            "nodeType": "InheritanceSpecifier",
            "src": "709:6:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3077,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10803,
              "src": "717:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$10803",
                "typeString": "contract Ownable"
              }
            },
            "id": 3078,
            "nodeType": "InheritanceSpecifier",
            "src": "717:7:10"
          }
        ],
        "contractDependencies": [
          10694,
          10803,
          10860,
          10872,
          12584,
          12700,
          12731,
          12758
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3074,
          "nodeType": "StructuredDocumentation",
          "src": "216:459:10",
          "text": " The MacroverseRealEstate contract keeps track of who currently owns virtual\n real estate in the Macroverse world, at all scales. It supersedes the\n MacroverseStarRegistry. Registration and Macroverse-specific manipulation of\n tokens is accomplished through the MacroverseUniversalRegistry, which owns\n this contract.\n The split between this contract and the MacroverseUniversalRegistry exists\n to keep contract size under the limit. "
        },
        "fullyImplemented": true,
        "id": 3178,
        "linearizedBaseContracts": [
          3178,
          10803,
          12584,
          12731,
          12758,
          12700,
          10860,
          10872,
          10694
        ],
        "name": "MacroverseRealEstate",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3092,
              "nodeType": "Block",
              "src": "979:48:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3089,
                        "name": "domain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3081,
                        "src": "1013:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3088,
                      "name": "_setTokenMetadataDomain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3122,
                      "src": "989:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "989:31:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3091,
                  "nodeType": "ExpressionStatement",
                  "src": "989:31:10"
                }
              ]
            },
            "documentation": {
              "id": 3079,
              "nodeType": "StructuredDocumentation",
              "src": "737:156:10",
              "text": " Deploy the backend, taking mint, burn, and set-user commands from the deployer.\n Use the given domain as the domain for token URIs."
            },
            "id": 3093,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4d6163726f7665727365205265616c20457374617465",
                    "id": 3084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "946:24:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6448b0c6d20bc4eea194151115138cf3e5fb3b1b1353ee46d9467b39e619b61d",
                      "typeString": "literal_string \"Macroverse Real Estate\""
                    },
                    "value": "Macroverse Real Estate"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4d5245",
                    "id": 3085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "972:5:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6a276174106362147b87c12a762f3687580129251ca71e76de954b6d530dfa8f",
                      "typeString": "literal_string \"MRE\""
                    },
                    "value": "MRE"
                  }
                ],
                "id": 3086,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3083,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 12584,
                  "src": "939:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$12584_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "939:39:10"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3081,
                  "mutability": "mutable",
                  "name": "domain",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3093,
                  "src": "910:20:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3080,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "910:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "909:22:10"
            },
            "returnParameters": {
              "id": 3087,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "979:0:10"
            },
            "scope": 3178,
            "src": "898:129:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3121,
              "nodeType": "Block",
              "src": "1186:354:10",
              "statements": [
                {
                  "assignments": [
                    3100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3100,
                      "mutability": "mutable",
                      "name": "chainId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3121,
                      "src": "1332:12:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3099,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1332:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3102,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 3101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1347:1:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1332:16:10"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1367:44:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1381:20:10",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "chainid",
                            "nodeType": "YulIdentifier",
                            "src": "1392:7:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1392:9:10"
                        },
                        "variableNames": [
                          {
                            "name": "chainId",
                            "nodeType": "YulIdentifier",
                            "src": "1381:7:10"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 3100,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1381:7:10",
                      "valueSize": 1
                    }
                  ],
                  "id": 3103,
                  "nodeType": "InlineAssembly",
                  "src": "1358:53:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "68747470733a2f2f",
                                "id": 3109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1456:10:10",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_22a0bccaefa7e44032d5e21026b45254e49ef9bce8763cb450aaa27db3ce52a1",
                                  "typeString": "literal_string \"https://\""
                                },
                                "value": "https://"
                              },
                              {
                                "argumentTypes": null,
                                "id": 3110,
                                "name": "domain",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3096,
                                "src": "1468:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "2f7672652f76312f636861696e2f",
                                "id": 3111,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1476:16:10",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_0774c37070c25323d9b5c853e81b491b65ba6246d69a8c9915e5ea5206ebcec1",
                                  "typeString": "literal_string \"/vre/v1/chain/\""
                                },
                                "value": "/vre/v1/chain/"
                              },
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 3114,
                                    "name": "chainId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3100,
                                    "src": "1511:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3112,
                                    "name": "Strings",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13917,
                                    "src": "1494:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Strings_$13917_$",
                                      "typeString": "type(library Strings)"
                                    }
                                  },
                                  "id": 3113,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "toString",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13916,
                                  "src": "1494:16:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (string memory)"
                                  }
                                },
                                "id": 3115,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1494:25:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "2f746f6b656e2f",
                                "id": 3116,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1521:9:10",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_744d9f0f09a47cf88aebd2a73ac1c367e8c95a4e22be6a16d5f075d39c7618db",
                                  "typeString": "literal_string \"/token/\""
                                },
                                "value": "/token/"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_22a0bccaefa7e44032d5e21026b45254e49ef9bce8763cb450aaa27db3ce52a1",
                                  "typeString": "literal_string \"https://\""
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0774c37070c25323d9b5c853e81b491b65ba6246d69a8c9915e5ea5206ebcec1",
                                  "typeString": "literal_string \"/vre/v1/chain/\""
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_744d9f0f09a47cf88aebd2a73ac1c367e8c95a4e22be6a16d5f075d39c7618db",
                                  "typeString": "literal_string \"/token/\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 3107,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1439:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 3108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1439:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 3117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1439:92:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 3106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1432:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": {
                            "id": 3105,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "1432:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1432:100:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3104,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12492,
                      "src": "1420:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1420:113:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3120,
                  "nodeType": "ExpressionStatement",
                  "src": "1420:113:10"
                }
              ]
            },
            "documentation": {
              "id": 3094,
              "nodeType": "StructuredDocumentation",
              "src": "1037:80:10",
              "text": " Allow this contract to change the ERC721 metadata URI domain."
            },
            "id": 3122,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setTokenMetadataDomain",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3096,
                  "mutability": "mutable",
                  "name": "domain",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3122,
                  "src": "1155:20:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3095,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1154:22:10"
            },
            "returnParameters": {
              "id": 3098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1186:0:10"
            },
            "scope": 3178,
            "src": "1122:418:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3134,
              "nodeType": "Block",
              "src": "1709:48:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3131,
                        "name": "domain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3125,
                        "src": "1743:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3130,
                      "name": "_setTokenMetadataDomain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3122,
                      "src": "1719:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1719:31:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3133,
                  "nodeType": "ExpressionStatement",
                  "src": "1719:31:10"
                }
              ]
            },
            "documentation": {
              "id": 3123,
              "nodeType": "StructuredDocumentation",
              "src": "1550:81:10",
              "text": " Allow this the owner to change the ERC721 metadata URI domain."
            },
            "functionSelector": "839dc732",
            "id": 3135,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3128,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3127,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10752,
                  "src": "1699:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1699:9:10"
              }
            ],
            "name": "setTokenMetadataDomain",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3125,
                  "mutability": "mutable",
                  "name": "domain",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3135,
                  "src": "1668:20:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3124,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1668:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1667:22:10"
            },
            "returnParameters": {
              "id": 3129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1709:0:10"
            },
            "scope": 3178,
            "src": "1636:121:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3150,
              "nodeType": "Block",
              "src": "1901:35:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3146,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3138,
                        "src": "1917:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3147,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3140,
                        "src": "1921:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3145,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12320,
                      "src": "1911:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1911:18:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3149,
                  "nodeType": "ExpressionStatement",
                  "src": "1911:18:10"
                }
              ]
            },
            "documentation": {
              "id": 3136,
              "nodeType": "StructuredDocumentation",
              "src": "1763:71:10",
              "text": " Mint tokens at the direction of the owning contract."
            },
            "functionSelector": "40c10f19",
            "id": 3151,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3143,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3142,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10752,
                  "src": "1891:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1891:9:10"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3138,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3151,
                  "src": "1853:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1853:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3140,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3151,
                  "src": "1865:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1865:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1852:29:10"
            },
            "returnParameters": {
              "id": 3144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1901:0:10"
            },
            "scope": 3178,
            "src": "1839:97:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3163,
              "nodeType": "Block",
              "src": "2068:31:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3160,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3154,
                        "src": "2084:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3159,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12388,
                      "src": "2078:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2078:14:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3162,
                  "nodeType": "ExpressionStatement",
                  "src": "2078:14:10"
                }
              ]
            },
            "documentation": {
              "id": 3152,
              "nodeType": "StructuredDocumentation",
              "src": "1942:71:10",
              "text": " Burn tokens at the direction of the owning contract."
            },
            "functionSelector": "42966c68",
            "id": 3164,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3157,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3156,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10752,
                  "src": "2058:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2058:9:10"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3154,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3164,
                  "src": "2032:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2032:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2031:17:10"
            },
            "returnParameters": {
              "id": 3158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2068:0:10"
            },
            "scope": 3178,
            "src": "2018:81:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3176,
              "nodeType": "Block",
              "src": "2381:40:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3173,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3167,
                        "src": "2406:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3172,
                      "name": "_exists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12177,
                      "src": "2398:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 3174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2398:16:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3171,
                  "id": 3175,
                  "nodeType": "Return",
                  "src": "2391:23:10"
                }
              ]
            },
            "documentation": {
              "id": 3165,
              "nodeType": "StructuredDocumentation",
              "src": "2105:209:10",
              "text": " Publically expose a token existence test. Returns true if the given\n token is owned by someone, and false otherwise. Note that tokens sent to\n 0x0 but not burned may still exist."
            },
            "functionSelector": "4f558e79",
            "id": 3177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exists",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3167,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3177,
                  "src": "2335:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2335:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2334:17:10"
            },
            "returnParameters": {
              "id": 3171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3170,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3177,
                  "src": "2375:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3169,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2375:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2374:6:10"
            },
            "scope": 3178,
            "src": "2319:102:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3179,
        "src": "676:1747:10"
      }
    ],
    "src": "0:2488:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.10+commit.00c0fcaf.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address",
              "internalType": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool",
              "internalType": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x2B5CDc25018642d8049F3f7D7FD2Fd030B9541d6",
      "transactionHash": "0xf19e52c05a557238477be3b4fa0d4e6a169472ab124e6ee2f564751813802304"
    }
  },
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-09-04T05:38:56.749Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "burn(uint256)": {
        "notice": "Burn tokens at the direction of the owning contract."
      },
      "constructor": "Deploy the backend, taking mint, burn, and set-user commands from the deployer. Use the given domain as the domain for token URIs.",
      "exists(uint256)": {
        "notice": "Publically expose a token existence test. Returns true if the given token is owned by someone, and false otherwise. Note that tokens sent to 0x0 but not burned may still exist."
      },
      "mint(address,uint256)": {
        "notice": "Mint tokens at the direction of the owning contract."
      },
      "setTokenMetadataDomain(string)": {
        "notice": "Allow this the owner to change the ERC721 metadata URI domain."
      }
    },
    "notice": "The MacroverseRealEstate contract keeps track of who currently owns virtual real estate in the Macroverse world, at all scales. It supersedes the MacroverseStarRegistry. Registration and Macroverse-specific manipulation of tokens is accomplished through the MacroverseUniversalRegistry, which owns this contract. The split between this contract and the MacroverseUniversalRegistry exists to keep contract size under the limit. "
  }
}