{
  "contractName": "MacroverseRealEstate",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "domain",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "domain",
          "type": "string"
        }
      ],
      "name": "setTokenMetadataDomain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"}],\"name\":\"setTokenMetadataDomain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"burn(uint256)\":{\"notice\":\"Burn tokens at the direction of the owning contract.\"},\"constructor\":\"Deploy the backend, taking mint, burn, and set-user commands from the deployer. Use the given domain as the domain for token URIs.\",\"exists(uint256)\":{\"notice\":\"Publically expose a token existence test. Returns true if the given token is owned by someone, and false otherwise. Note that tokens sent to 0x0 but not burned may still exist.\"},\"mint(address,uint256)\":{\"notice\":\"Mint tokens at the direction of the owning contract.\"},\"setTokenMetadataDomain(string)\":{\"notice\":\"Allow this the owner to change the ERC721 metadata URI domain.\"}},\"notice\":\"The MacroverseRealEstate contract keeps track of who currently owns virtual real estate in the Macroverse world, at all scales. It supersedes the MacroverseStarRegistry. Registration and Macroverse-specific manipulation of tokens is accomplished through the MacroverseUniversalRegistry, which owns this contract. The split between this contract and the MacroverseUniversalRegistry exists to keep contract size under the limit. \"}},\"settings\":{\"compilationTarget\":{\"/home/anovak/workspace/macroverse/contracts/MacroverseRealEstate.sol\":\"MacroverseRealEstate\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/anovak/workspace/macroverse/contracts/MacroverseRealEstate.sol\":{\"keccak256\":\"0x0f69ad7fd84a3b91cf0c2ee81a32bc392d9828b6541f92daa2a9d0b7bbb226a8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://aa27a4660111ee7110b485e06f5fe387f4a1ec7e333ac233670cc3cc054ef6d0\",\"dweb:/ipfs/QmW3mFaN9KWMu5HQ2PQ3c3bALpfDc7YraFZuQpJp3iVkBT\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xb046d18f9d09683ca1c0ed6d80c61da8a8a7d9b30bad70a17b898538683eff74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4728713afa6ae36cc9e92c7107c796a313add3ec20f813be2cde76c814486b2a\",\"dweb:/ipfs/QmUJBTXvYaGDF5PVnd5pUvYerc9DRXvqANDzgCzAp3FkkA\"]},\"openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5127b264994adab88fae419b1c493efc5acd07134c19ee5c0397e50018291ebf\",\"dweb:/ipfs/QmWwJZVhvdmvUCdimbb6R2Jiu59zjPqm6XTMchM6LaEHAp\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1071a23188ba7f5bb16f51b0b01a67fd41fe56f862d8f83985788cf46f3b91bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7082ca99b93f2e541cafaad00ed32675adf0752eab78eccabcf91dec9fd5d73\",\"dweb:/ipfs/QmdqooMmYBQVi7p6subDFM4e1944AuLjZUpHMjGtae7Lgd\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x227bafd3e165b13f5d98c42a44376e48d41f4a265db8803f2707faaeae9659aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9aa7959a30871669ce46172cd117b084b607d602d9ce695ce79005582b0b69b\",\"dweb:/ipfs/QmXZUWeLXmArQinHL4RnacJLT22GvCExqREYM6pHLX7CX9\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x3636662804cd8f474536b2875a9038a4c3fb91879f1bbff48af5c3f140fcd2f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9fab8521263fa581544000cb57335a3f2e6bcdfbb5579d3ceaa5acf741c67c4f\",\"dweb:/ipfs/QmZfXnMom7JSNtfyie5yGPN1SUC4SmHbz4ScVBH88URmA7\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xe7f984cedc00a138dc27f263c73c32ba9a4b2fd23b6c34ac46f46c074b943538\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f4acda12f076fe7584921241ddbb5b460ca7cad6cb8a42252ac7f2a9f539127\",\"dweb:/ipfs/QmQmfhkEv9GrhdWe67QtXnU19AMuoEmy31QnHPkucdYLjZ\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x321ee37ef4925020aa818a03ec7fe48e057561f65ab009a84f6c20c86026ade7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01f9d74a17a56024984251b97e428e24c9d3abffbae5bd290f0ec263c82e9694\",\"dweb:/ipfs/QmRryCuuXu2ukrDmatB8TqdEhPLiK6NBRt41RiPUaX1qKy\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xdfb4f812600ba4ce6738c35584ceb8c9433472583051b48ba5b1f66cb758a498\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df02dffe1c1de089d9b4f6192f0dcf464526f2230f420b3deec4645e0cdd2bff\",\"dweb:/ipfs/QmcqXGAU3KJqwrgUVoGJ2W8osomhSJ4R5kdsRpbuW3fELS\"]},\"openzeppelin-solidity/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0x244e4b74b17716120cf28e58636f11c699b8c0c94628bd952a95cee038d7e32b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://198d566157120c526bd6b5086b32cae85a11389b8a538f533ba9f9447915da0e\",\"dweb:/ipfs/QmeE6d8KWERx7f1FVS5tMnitNJxBm2yWXRSEUBF7R6voLh\"]},\"openzeppelin-solidity/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]},\"openzeppelin-solidity/contracts/utils/Strings.sol\":{\"keccak256\":\"0x79484115dbfa737054f73e041009a02eeb434dd81be5d684bf4255ad3b5ab558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12c119699463450c2544f5b9d8709b5e9e9164c62948a79c3ec53423a051d969\",\"dweb:/ipfs/QmPJduzSAaekq447QeFqAp3E7dc8CnNk5ajofckJ4ahA7Q\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200295338038062002953833981810160405260208110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b5060408181018152601682527f4d6163726f7665727365205265616c2045737461746500000000000000000000602080840191909152815180830190925260038252624d524560e81b9082015290935091506200015590506301ffc9a760e01b6001600160e01b036200025316565b81516200016a906006906020850190620004f1565b50805162000180906007906020840190620004f1565b506200019c6380ac58cd60e01b6001600160e01b036200025316565b620001b7635b5e139f60e01b6001600160e01b036200025316565b620001d263780e9d6360e01b6001600160e01b036200025316565b5060009050620001ea6001600160e01b03620002d816565b600a80546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506200024c816001600160e01b03620002dd16565b5062000593565b6001600160e01b03198082161415620002b3576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b335b90565b46620003f882620002fa83620003fc602090811b6200115617901c565b60405160200180806768747470733a2f2f60c01b81525060080183805190602001908083835b60208310620003415780518252601f19909201916020918201910162000320565b51815160209384036101000a60001901801990921691161790526d2f7672652f76312f636861696e2f60901b919093019081528451600e90910192850191508083835b60208310620003a55780518252601f19909201916020918201910162000384565b6001836020036101000a03801982511681845116808217855250505050505090500180662f746f6b656e2f60c81b81525060070192505050604051602081830303815290604052620004e160201b60201c565b5050565b6060816200042357506040805180820190915260018152600360fc1b6020820152620004dc565b8160005b81156200043d57600101600a8204915062000427565b6060816001600160401b03811180156200045657600080fd5b506040519080825280601f01601f19166020018201604052801562000482576020820181803683370190505b50859350905060001982015b8315620004d657600a840660300160f81b82828060019003935081518110620004b357fe5b60200101906001600160f81b031916908160001a905350600a840493506200048e565b50925050505b919050565b8051620003f89060099060208401905b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200053457805160ff191683800117855562000564565b8280016001018555821562000564579182015b828111156200056457825182559160200191906001019062000547565b506200057292915062000576565b5090565b620002da91905b808211156200057257600081556001016200057d565b6123b080620005a36000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80636352211e116100c357806395d89b411161007c57806395d89b41146104b2578063a22cb465146104ba578063b88d4fde146104e8578063c87b56dd146105ae578063e985e9c5146105cb578063f2fde38b146105f957610158565b80636352211e146103b15780636c0360eb146103ce57806370a08231146103d6578063715018a6146103fc578063839dc732146104045780638da5cb5b146104aa57610158565b80632f745c59116101155780632f745c59146102cc57806340c10f19146102f857806342842e0e1461032457806342966c681461035a5780634f558e79146103775780634f6ccce71461039457610158565b806301ffc9a71461015d57806306fdde0314610198578063081812fc14610215578063095ea7b31461024e57806318160ddd1461027c57806323b872dd14610296575b600080fd5b6101846004803603602081101561017357600080fd5b50356001600160e01b03191661061f565b604080519115158252519081900360200190f35b6101a0610642565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101da5781810151838201526020016101c2565b50505050905090810190601f1680156102075780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102326004803603602081101561022b57600080fd5b50356106d9565b604080516001600160a01b039092168252519081900360200190f35b61027a6004803603604081101561026457600080fd5b506001600160a01b03813516906020013561073b565b005b610284610816565b60408051918252519081900360200190f35b61027a600480360360608110156102ac57600080fd5b506001600160a01b03813581169160208101359091169060400135610827565b610284600480360360408110156102e257600080fd5b506001600160a01b03813516906020013561087e565b61027a6004803603604081101561030e57600080fd5b506001600160a01b0381351690602001356108af565b61027a6004803603606081101561033a57600080fd5b506001600160a01b03813581169160208101359091169060400135610915565b61027a6004803603602081101561037057600080fd5b5035610930565b6101846004803603602081101561038d57600080fd5b5035610994565b610284600480360360208110156103aa57600080fd5b503561099f565b610232600480360360208110156103c757600080fd5b50356109bb565b6101a06109e9565b610284600480360360208110156103ec57600080fd5b50356001600160a01b0316610a4a565b61027a610ab2565b61027a6004803603602081101561041a57600080fd5b81019060208101813564010000000081111561043557600080fd5b82018360208201111561044757600080fd5b8035906020019184600183028401116401000000008311171561046957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610b54945050505050565b610232610bb5565b6101a0610bc4565b61027a600480360360408110156104d057600080fd5b506001600160a01b0381351690602001351515610c25565b61027a600480360360808110156104fe57600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561053957600080fd5b82018360208201111561054b57600080fd5b8035906020019184600183028401116401000000008311171561056d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d2a945050505050565b6101a0600480360360208110156105c457600080fd5b5035610d88565b610184600480360360408110156105e157600080fd5b506001600160a01b038135811691602001351661102f565b61027a6004803603602081101561060f57600080fd5b50356001600160a01b031661105d565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106ce5780601f106106a3576101008083540402835291602001916106ce565b820191906000526020600020905b8154815290600101906020018083116106b157829003601f168201915b505050505090505b90565b60006106e482611231565b61071f5760405162461bcd60e51b815260040180806020018281038252602c815260200180612285602c913960400191505060405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610746826109bb565b9050806001600160a01b0316836001600160a01b031614156107995760405162461bcd60e51b81526004018080602001828103825260218152602001806123296021913960400191505060405180910390fd5b806001600160a01b03166107ab611244565b6001600160a01b031614806107cc57506107cc816107c7611244565b61102f565b6108075760405162461bcd60e51b81526004018080602001828103825260388152602001806121d86038913960400191505060405180910390fd5b6108118383611248565b505050565b600061082260026112b6565b905090565b610838610832611244565b826112c1565b6108735760405162461bcd60e51b815260040180806020018281038252603181526020018061234a6031913960400191505060405180910390fd5b610811838383611365565b6001600160a01b03821660009081526001602052604081206108a6908363ffffffff6114c316565b90505b92915050565b6108b7611244565b600a546001600160a01b03908116911614610907576040805162461bcd60e51b815260206004820181905260248201526000805160206122b1833981519152604482015290519081900360640190fd5b61091182826114cf565b5050565b61081183838360405180602001604052806000815250610d2a565b610938611244565b600a546001600160a01b03908116911614610988576040805162461bcd60e51b815260206004820181905260248201526000805160206122b1833981519152604482015290519081900360640190fd5b61099181611609565b50565b60006108a982611231565b6000806109b360028463ffffffff6116e216565b509392505050565b60006108a98260405180606001604052806029815260200161223a602991396002919063ffffffff6116fe16565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106ce5780601f106106a3576101008083540402835291602001916106ce565b60006001600160a01b038216610a915760405162461bcd60e51b815260040180806020018281038252602a815260200180612210602a913960400191505060405180910390fd5b6001600160a01b03821660009081526001602052604090206108a9906112b6565b610aba611244565b600a546001600160a01b03908116911614610b0a576040805162461bcd60e51b815260206004820181905260248201526000805160206122b1833981519152604482015290519081900360640190fd5b600a546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600a80546001600160a01b0319169055565b610b5c611244565b600a546001600160a01b03908116911614610bac576040805162461bcd60e51b815260206004820181905260248201526000805160206122b1833981519152604482015290519081900360640190fd5b61099181611715565b600a546001600160a01b031690565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106ce5780601f106106a3576101008083540402835291602001916106ce565b610c2d611244565b6001600160a01b0316826001600160a01b03161415610c93576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060056000610ca0611244565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610ce4611244565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b610d3b610d35611244565b836112c1565b610d765760405162461bcd60e51b815260040180806020018281038252603181526020018061234a6031913960400191505060405180910390fd5b610d8284848484611816565b50505050565b6060610d9382611231565b610dce5760405162461bcd60e51b815260040180806020018281038252602f8152602001806122fa602f913960400191505060405180910390fd5b60008281526008602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610e635780601f10610e3857610100808354040283529160200191610e63565b820191906000526020600020905b815481529060010190602001808311610e4657829003601f168201915b505060095493945050505060026000196101006001841615020190911604610e8c57905061063d565b805115610f5d576009816040516020018083805460018160011615610100020316600290048015610ef45780601f10610ed2576101008083540402835291820191610ef4565b820191906000526020600020905b815481529060010190602001808311610ee0575b5050825160208401908083835b60208310610f205780518252601f199092019160209182019101610f01565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405291505061063d565b6009610f6884611156565b6040516020018083805460018160011615610100020316600290048015610fc65780601f10610fa4576101008083540402835291820191610fc6565b820191906000526020600020905b815481529060010190602001808311610fb2575b5050825160208401908083835b60208310610ff25780518252601f199092019160209182019101610fd3565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b611065611244565b600a546001600160a01b039081169116146110b5576040805162461bcd60e51b815260206004820181905260248201526000805160206122b1833981519152604482015290519081900360640190fd5b6001600160a01b0381166110fa5760405162461bcd60e51b81526004018080602001828103825260268152602001806121626026913960400191505060405180910390fd5b600a546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600a80546001600160a01b0319166001600160a01b0392909216919091179055565b60608161117b57506040805180820190915260018152600360fc1b602082015261063d565b8160005b811561119357600101600a8204915061117f565b60608167ffffffffffffffff811180156111ac57600080fd5b506040519080825280601f01601f1916602001820160405280156111d7576020820181803683370190505b50859350905060001982015b831561122857600a840660300160f81b8282806001900393508151811061120657fe5b60200101906001600160f81b031916908160001a905350600a840493506111e3565b50949350505050565b60006108a960028363ffffffff61186816565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061127d826109bb565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006108a982611874565b60006112cc82611231565b6113075760405162461bcd60e51b815260040180806020018281038252602c8152602001806121ac602c913960400191505060405180910390fd5b6000611312836109bb565b9050806001600160a01b0316846001600160a01b0316148061134d5750836001600160a01b0316611342846106d9565b6001600160a01b0316145b8061135d575061135d818561102f565b949350505050565b826001600160a01b0316611378826109bb565b6001600160a01b0316146113bd5760405162461bcd60e51b81526004018080602001828103825260298152602001806122d16029913960400191505060405180910390fd5b6001600160a01b0382166114025760405162461bcd60e51b81526004018080602001828103825260248152602001806121886024913960400191505060405180910390fd5b61140d838383610811565b611418600082611248565b6001600160a01b0383166000908152600160205260409020611440908263ffffffff61187816565b506001600160a01b0382166000908152600160205260409020611469908263ffffffff61188416565b5061147c6002828463ffffffff61189016565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006108a683836118a6565b6001600160a01b03821661152a576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b61153381611231565b15611585576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b61159160008383610811565b6001600160a01b03821660009081526001602052604090206115b9908263ffffffff61188416565b506115cc6002828463ffffffff61189016565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000611614826109bb565b905061162281600084610811565b61162d600083611248565b600082815260086020526040902054600260001961010060018416150201909116041561166b57600082815260086020526040812061166b91612031565b6001600160a01b0381166000908152600160205260409020611693908363ffffffff61187816565b506116a560028363ffffffff61190a16565b5060405182906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60008080806116f18686611916565b9097909650945050505050565b600061170b848484611991565b90505b9392505050565b466109118261172383611156565b60405160200180806768747470733a2f2f60c01b81525060080183805190602001908083835b602083106117685780518252601f199092019160209182019101611749565b51815160209384036101000a60001901801990921691161790526d2f7672652f76312f636861696e2f60901b919093019081528451600e90910192850191508083835b602083106117ca5780518252601f1990920191602091820191016117ab565b6001836020036101000a03801982511681845116808217855250505050505090500180662f746f6b656e2f60c81b81525060070192505050604051602081830303815290604052611a5b565b611821848484611365565b61182d84848484611a6e565b610d825760405162461bcd60e51b81526004018080602001828103825260328152602001806121306032913960400191505060405180910390fd5b60006108a68383611bee565b5490565b60006108a68383611c06565b60006108a68383611ccc565b600061170b84846001600160a01b038516611d16565b815460009082106118e85760405162461bcd60e51b815260040180806020018281038252602281526020018061210e6022913960400191505060405180910390fd5b8260000182815481106118f757fe5b9060005260206000200154905092915050565b60006108a68383611dad565b81546000908190831061195a5760405162461bcd60e51b81526004018080602001828103825260228152602001806122636022913960400191505060405180910390fd5b600084600001848154811061196b57fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008281526001840160205260408120548281611a2c5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156119f15781810151838201526020016119d9565b50505050905090810190601f168015611a1e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50846000016001820381548110611a3f57fe5b9060005260206000209060020201600101549150509392505050565b8051610911906009906020840190612075565b6000611a82846001600160a01b0316611e81565b611a8e5750600161135d565b6060611bb4630a85bd0160e11b611aa3611244565b88878760405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611b1c578181015183820152602001611b04565b50505050905090810190601f168015611b495780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050604051806060016040528060328152602001612130603291396001600160a01b038816919063ffffffff611eba16565b90506000818060200190516020811015611bcd57600080fd5b50516001600160e01b031916630a85bd0160e11b1492505050949350505050565b60009081526001919091016020526040902054151590565b60008181526001830160205260408120548015611cc25783546000198083019190810190600090879083908110611c3957fe5b9060005260206000200154905080876000018481548110611c5657fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080611c8657fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506108a9565b60009150506108a9565b6000611cd88383611bee565b611d0e575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556108a9565b5060006108a9565b600082815260018401602052604081205480611d7b57505060408051808201825283815260208082018481528654600181810189556000898152848120955160029093029095019182559151908201558654868452818801909252929091205561170e565b82856000016001830381548110611d8e57fe5b906000526020600020906002020160010181905550600091505061170e565b60008181526001830160205260408120548015611cc25783546000198083019190810190600090879083908110611de057fe5b9060005260206000209060020201905080876000018481548110611e0057fe5b600091825260208083208454600290930201918255600193840154918401919091558354825289830190526040902090840190558654879080611e3f57fe5b60008281526020808220600260001990940193840201828155600190810183905592909355888152898201909252604082209190915594506108a99350505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061135d575050151592915050565b606061170b84846000856060611ecf85611e81565b611f20576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310611f5f5780518252601f199092019160209182019101611f40565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611fc1576040519150601f19603f3d011682016040523d82523d6000602084013e611fc6565b606091505b50915091508115611fda57915061135d9050565b805115611fea5780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156119f15781810151838201526020016119d9565b50805460018160011615610100020316600290046000825580601f106120575750610991565b601f01602090049060005260206000209081019061099191906120f3565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106120b657805160ff19168380011785556120e3565b828001600101855582156120e3579182015b828111156120e35782518255916020019190600101906120c8565b506120ef9291506120f3565b5090565b6106d691905b808211156120ef57600081556001016120f956fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65724552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a26469706673582212200cbe3b93631186b484982464f60b359da8ace6d52aa8de13b33da591f03ff2cc64736f6c634300060a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101585760003560e01c80636352211e116100c357806395d89b411161007c57806395d89b41146104b2578063a22cb465146104ba578063b88d4fde146104e8578063c87b56dd146105ae578063e985e9c5146105cb578063f2fde38b146105f957610158565b80636352211e146103b15780636c0360eb146103ce57806370a08231146103d6578063715018a6146103fc578063839dc732146104045780638da5cb5b146104aa57610158565b80632f745c59116101155780632f745c59146102cc57806340c10f19146102f857806342842e0e1461032457806342966c681461035a5780634f558e79146103775780634f6ccce71461039457610158565b806301ffc9a71461015d57806306fdde0314610198578063081812fc14610215578063095ea7b31461024e57806318160ddd1461027c57806323b872dd14610296575b600080fd5b6101846004803603602081101561017357600080fd5b50356001600160e01b03191661061f565b604080519115158252519081900360200190f35b6101a0610642565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101da5781810151838201526020016101c2565b50505050905090810190601f1680156102075780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102326004803603602081101561022b57600080fd5b50356106d9565b604080516001600160a01b039092168252519081900360200190f35b61027a6004803603604081101561026457600080fd5b506001600160a01b03813516906020013561073b565b005b610284610816565b60408051918252519081900360200190f35b61027a600480360360608110156102ac57600080fd5b506001600160a01b03813581169160208101359091169060400135610827565b610284600480360360408110156102e257600080fd5b506001600160a01b03813516906020013561087e565b61027a6004803603604081101561030e57600080fd5b506001600160a01b0381351690602001356108af565b61027a6004803603606081101561033a57600080fd5b506001600160a01b03813581169160208101359091169060400135610915565b61027a6004803603602081101561037057600080fd5b5035610930565b6101846004803603602081101561038d57600080fd5b5035610994565b610284600480360360208110156103aa57600080fd5b503561099f565b610232600480360360208110156103c757600080fd5b50356109bb565b6101a06109e9565b610284600480360360208110156103ec57600080fd5b50356001600160a01b0316610a4a565b61027a610ab2565b61027a6004803603602081101561041a57600080fd5b81019060208101813564010000000081111561043557600080fd5b82018360208201111561044757600080fd5b8035906020019184600183028401116401000000008311171561046957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610b54945050505050565b610232610bb5565b6101a0610bc4565b61027a600480360360408110156104d057600080fd5b506001600160a01b0381351690602001351515610c25565b61027a600480360360808110156104fe57600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561053957600080fd5b82018360208201111561054b57600080fd5b8035906020019184600183028401116401000000008311171561056d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d2a945050505050565b6101a0600480360360208110156105c457600080fd5b5035610d88565b610184600480360360408110156105e157600080fd5b506001600160a01b038135811691602001351661102f565b61027a6004803603602081101561060f57600080fd5b50356001600160a01b031661105d565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106ce5780601f106106a3576101008083540402835291602001916106ce565b820191906000526020600020905b8154815290600101906020018083116106b157829003601f168201915b505050505090505b90565b60006106e482611231565b61071f5760405162461bcd60e51b815260040180806020018281038252602c815260200180612285602c913960400191505060405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610746826109bb565b9050806001600160a01b0316836001600160a01b031614156107995760405162461bcd60e51b81526004018080602001828103825260218152602001806123296021913960400191505060405180910390fd5b806001600160a01b03166107ab611244565b6001600160a01b031614806107cc57506107cc816107c7611244565b61102f565b6108075760405162461bcd60e51b81526004018080602001828103825260388152602001806121d86038913960400191505060405180910390fd5b6108118383611248565b505050565b600061082260026112b6565b905090565b610838610832611244565b826112c1565b6108735760405162461bcd60e51b815260040180806020018281038252603181526020018061234a6031913960400191505060405180910390fd5b610811838383611365565b6001600160a01b03821660009081526001602052604081206108a6908363ffffffff6114c316565b90505b92915050565b6108b7611244565b600a546001600160a01b03908116911614610907576040805162461bcd60e51b815260206004820181905260248201526000805160206122b1833981519152604482015290519081900360640190fd5b61091182826114cf565b5050565b61081183838360405180602001604052806000815250610d2a565b610938611244565b600a546001600160a01b03908116911614610988576040805162461bcd60e51b815260206004820181905260248201526000805160206122b1833981519152604482015290519081900360640190fd5b61099181611609565b50565b60006108a982611231565b6000806109b360028463ffffffff6116e216565b509392505050565b60006108a98260405180606001604052806029815260200161223a602991396002919063ffffffff6116fe16565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106ce5780601f106106a3576101008083540402835291602001916106ce565b60006001600160a01b038216610a915760405162461bcd60e51b815260040180806020018281038252602a815260200180612210602a913960400191505060405180910390fd5b6001600160a01b03821660009081526001602052604090206108a9906112b6565b610aba611244565b600a546001600160a01b03908116911614610b0a576040805162461bcd60e51b815260206004820181905260248201526000805160206122b1833981519152604482015290519081900360640190fd5b600a546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600a80546001600160a01b0319169055565b610b5c611244565b600a546001600160a01b03908116911614610bac576040805162461bcd60e51b815260206004820181905260248201526000805160206122b1833981519152604482015290519081900360640190fd5b61099181611715565b600a546001600160a01b031690565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106ce5780601f106106a3576101008083540402835291602001916106ce565b610c2d611244565b6001600160a01b0316826001600160a01b03161415610c93576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060056000610ca0611244565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610ce4611244565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b610d3b610d35611244565b836112c1565b610d765760405162461bcd60e51b815260040180806020018281038252603181526020018061234a6031913960400191505060405180910390fd5b610d8284848484611816565b50505050565b6060610d9382611231565b610dce5760405162461bcd60e51b815260040180806020018281038252602f8152602001806122fa602f913960400191505060405180910390fd5b60008281526008602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610e635780601f10610e3857610100808354040283529160200191610e63565b820191906000526020600020905b815481529060010190602001808311610e4657829003601f168201915b505060095493945050505060026000196101006001841615020190911604610e8c57905061063d565b805115610f5d576009816040516020018083805460018160011615610100020316600290048015610ef45780601f10610ed2576101008083540402835291820191610ef4565b820191906000526020600020905b815481529060010190602001808311610ee0575b5050825160208401908083835b60208310610f205780518252601f199092019160209182019101610f01565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405291505061063d565b6009610f6884611156565b6040516020018083805460018160011615610100020316600290048015610fc65780601f10610fa4576101008083540402835291820191610fc6565b820191906000526020600020905b815481529060010190602001808311610fb2575b5050825160208401908083835b60208310610ff25780518252601f199092019160209182019101610fd3565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b611065611244565b600a546001600160a01b039081169116146110b5576040805162461bcd60e51b815260206004820181905260248201526000805160206122b1833981519152604482015290519081900360640190fd5b6001600160a01b0381166110fa5760405162461bcd60e51b81526004018080602001828103825260268152602001806121626026913960400191505060405180910390fd5b600a546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600a80546001600160a01b0319166001600160a01b0392909216919091179055565b60608161117b57506040805180820190915260018152600360fc1b602082015261063d565b8160005b811561119357600101600a8204915061117f565b60608167ffffffffffffffff811180156111ac57600080fd5b506040519080825280601f01601f1916602001820160405280156111d7576020820181803683370190505b50859350905060001982015b831561122857600a840660300160f81b8282806001900393508151811061120657fe5b60200101906001600160f81b031916908160001a905350600a840493506111e3565b50949350505050565b60006108a960028363ffffffff61186816565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061127d826109bb565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006108a982611874565b60006112cc82611231565b6113075760405162461bcd60e51b815260040180806020018281038252602c8152602001806121ac602c913960400191505060405180910390fd5b6000611312836109bb565b9050806001600160a01b0316846001600160a01b0316148061134d5750836001600160a01b0316611342846106d9565b6001600160a01b0316145b8061135d575061135d818561102f565b949350505050565b826001600160a01b0316611378826109bb565b6001600160a01b0316146113bd5760405162461bcd60e51b81526004018080602001828103825260298152602001806122d16029913960400191505060405180910390fd5b6001600160a01b0382166114025760405162461bcd60e51b81526004018080602001828103825260248152602001806121886024913960400191505060405180910390fd5b61140d838383610811565b611418600082611248565b6001600160a01b0383166000908152600160205260409020611440908263ffffffff61187816565b506001600160a01b0382166000908152600160205260409020611469908263ffffffff61188416565b5061147c6002828463ffffffff61189016565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006108a683836118a6565b6001600160a01b03821661152a576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b61153381611231565b15611585576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b61159160008383610811565b6001600160a01b03821660009081526001602052604090206115b9908263ffffffff61188416565b506115cc6002828463ffffffff61189016565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000611614826109bb565b905061162281600084610811565b61162d600083611248565b600082815260086020526040902054600260001961010060018416150201909116041561166b57600082815260086020526040812061166b91612031565b6001600160a01b0381166000908152600160205260409020611693908363ffffffff61187816565b506116a560028363ffffffff61190a16565b5060405182906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60008080806116f18686611916565b9097909650945050505050565b600061170b848484611991565b90505b9392505050565b466109118261172383611156565b60405160200180806768747470733a2f2f60c01b81525060080183805190602001908083835b602083106117685780518252601f199092019160209182019101611749565b51815160209384036101000a60001901801990921691161790526d2f7672652f76312f636861696e2f60901b919093019081528451600e90910192850191508083835b602083106117ca5780518252601f1990920191602091820191016117ab565b6001836020036101000a03801982511681845116808217855250505050505090500180662f746f6b656e2f60c81b81525060070192505050604051602081830303815290604052611a5b565b611821848484611365565b61182d84848484611a6e565b610d825760405162461bcd60e51b81526004018080602001828103825260328152602001806121306032913960400191505060405180910390fd5b60006108a68383611bee565b5490565b60006108a68383611c06565b60006108a68383611ccc565b600061170b84846001600160a01b038516611d16565b815460009082106118e85760405162461bcd60e51b815260040180806020018281038252602281526020018061210e6022913960400191505060405180910390fd5b8260000182815481106118f757fe5b9060005260206000200154905092915050565b60006108a68383611dad565b81546000908190831061195a5760405162461bcd60e51b81526004018080602001828103825260228152602001806122636022913960400191505060405180910390fd5b600084600001848154811061196b57fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008281526001840160205260408120548281611a2c5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156119f15781810151838201526020016119d9565b50505050905090810190601f168015611a1e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50846000016001820381548110611a3f57fe5b9060005260206000209060020201600101549150509392505050565b8051610911906009906020840190612075565b6000611a82846001600160a01b0316611e81565b611a8e5750600161135d565b6060611bb4630a85bd0160e11b611aa3611244565b88878760405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611b1c578181015183820152602001611b04565b50505050905090810190601f168015611b495780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050604051806060016040528060328152602001612130603291396001600160a01b038816919063ffffffff611eba16565b90506000818060200190516020811015611bcd57600080fd5b50516001600160e01b031916630a85bd0160e11b1492505050949350505050565b60009081526001919091016020526040902054151590565b60008181526001830160205260408120548015611cc25783546000198083019190810190600090879083908110611c3957fe5b9060005260206000200154905080876000018481548110611c5657fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080611c8657fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506108a9565b60009150506108a9565b6000611cd88383611bee565b611d0e575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556108a9565b5060006108a9565b600082815260018401602052604081205480611d7b57505060408051808201825283815260208082018481528654600181810189556000898152848120955160029093029095019182559151908201558654868452818801909252929091205561170e565b82856000016001830381548110611d8e57fe5b906000526020600020906002020160010181905550600091505061170e565b60008181526001830160205260408120548015611cc25783546000198083019190810190600090879083908110611de057fe5b9060005260206000209060020201905080876000018481548110611e0057fe5b600091825260208083208454600290930201918255600193840154918401919091558354825289830190526040902090840190558654879080611e3f57fe5b60008281526020808220600260001990940193840201828155600190810183905592909355888152898201909252604082209190915594506108a99350505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061135d575050151592915050565b606061170b84846000856060611ecf85611e81565b611f20576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310611f5f5780518252601f199092019160209182019101611f40565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611fc1576040519150601f19603f3d011682016040523d82523d6000602084013e611fc6565b606091505b50915091508115611fda57915061135d9050565b805115611fea5780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156119f15781810151838201526020016119d9565b50805460018160011615610100020316600290046000825580601f106120575750610991565b601f01602090049060005260206000209081019061099191906120f3565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106120b657805160ff19168380011785556120e3565b828001600101855582156120e3579182015b828111156120e35782518255916020019190600101906120c8565b506120ef9291506120f3565b5090565b6106d691905b808211156120ef57600081556001016120f956fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65724552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a26469706673582212200cbe3b93631186b484982464f60b359da8ace6d52aa8de13b33da591f03ff2cc64736f6c634300060a0033",
  "immutableReferences": {},
  "sourceMap": "676:1747:10:-:0;;;898:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;898:129:10;;;;;;;;;;-1:-1:-1;898:129:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;898:129:10;3565:365:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3565:365:36;;;;898:129:10;;-1:-1:-1;3565:365:36;-1:-1:-1;751:40:31;;-1:-1:-1;;;;;;;;;751:18:31;:40;:::i;:::-;3637:12:36;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;3659:16:36;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;3763:40:36;-1:-1:-1;;;;;;;;3763:18:36;:40;:::i;:::-;3813:49;-1:-1:-1;;;;;;;;3813:18:36;:49;:::i;:::-;3872:51;-1:-1:-1;;;;;;;;3872:18:36;:51;:::i;:::-;-1:-1:-1;865:17:30;;-1:-1:-1;885:12:30;-1:-1:-1;;;;;885:10:30;:12;:::i;:::-;907:6;:18;;-1:-1:-1;;;;;;907:18:30;-1:-1:-1;;;;;907:18:30;;;;;;;;940:43;;907:18;;-1:-1:-1;907:18:30;-1:-1:-1;;940:43:30;;-1:-1:-1;;940:43:30;-1:-1:-1;989:31:10::1;1013:6:::0;-1:-1:-1;;;;;989:23:10::1;:31:::0;:::i:1;:::-;898:129:::0;676:1747;;1482:198:31;-1:-1:-1;;;;;;1565:25:31;;;;;1557:66;;;;;-1:-1:-1;;;1557:66:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1633:33:31;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1633:40:31;1669:4;1633:40;;;1482:198::o;590:104:29:-;677:10;590:104;;:::o;1122:418:10:-;1392:9;1420:113;1468:6;1494:25;1392:9;1494:16;;;;;;;:25;;:::i;:::-;1439:92;;;;;;-1:-1:-1;;;1439:92:10;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1439:92:10;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1439:92:10;;;;;;;;;;;-1:-1:-1;;;1439:92:10;;;;;;;;;;;;;;;;;-1:-1:-1;1439:92:10;;;;;;;;;;;;;-1:-1:-1;;1439:92:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1439:92:10;;;;;;;;;;;;;;;;;;;;;1420:11;;;:113;;:::i;:::-;1122:418;;:::o;202:723:44:-;258:13;475:10;471:51;;-1:-1:-1;501:10:44;;;;;;;;;;;;-1:-1:-1;;;501:10:44;;;;;;471:51;546:5;531:12;585:75;592:9;;585:75;;617:8;;647:2;639:10;;;;585:75;;;669:19;701:6;-1:-1:-1;;;;;691:17:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;691:17:44;-1:-1:-1;761:5:44;;-1:-1:-1;669:39:44;-1:-1:-1;;;734:10:44;;776:112;783:9;;776:112;;849:2;842:4;:9;837:2;:14;826:27;;808:6;815:7;;;;;;;808:15;;;;;;;;;;;:45;-1:-1:-1;;;;;808:45:44;;;;;;;;-1:-1:-1;875:2:44;867:10;;;;776:112;;;-1:-1:-1;911:6:44;-1:-1:-1;;;202:723:44;;;;:::o;14647:98:36:-;14719:19;;;;:8;;:19;;;;676:1747:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;676:1747:10;;;-1:-1:-1;676:1747:10;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "676:1747:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;948:140:31;;;;;;;;;;;;;;;;-1:-1:-1;948:140:31;-1:-1:-1;;;;;;948:140:31;;:::i;:::-;;;;;;;;;;;;;;;;;;4486:90:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7093:209;;;;;;;;;;;;;;;;-1:-1:-1;7093:209:36;;:::i;:::-;;;;-1:-1:-1;;;;;7093:209:36;;;;;;;;;;;;;;6651:381;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6651:381:36;;;;;;;;:::i;:::-;;6161:200;;;:::i;:::-;;;;;;;;;;;;;;;;7941:300;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7941:300:36;;;;;;;;;;;;;;;;;:::i;5938:152::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5938:152:36;;;;;;;;:::i;1839:97:10:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1839:97:10;;;;;;;;:::i;8307:149:36:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8307:149:36;;;;;;;;;;;;;;;;;:::i;2018:81:10:-;;;;;;;;;;;;;;;;-1:-1:-1;2018:81:10;;:::i;2319:102::-;;;;;;;;;;;;;;;;-1:-1:-1;2319:102:10;;:::i;6433:161:36:-;;;;;;;;;;;;;;;;-1:-1:-1;6433:161:36;;:::i;4257:167::-;;;;;;;;;;;;;;;;-1:-1:-1;4257:167:36;;:::i;5772:87::-;;;:::i;3989:211::-;;;;;;;;;;;;;;;;-1:-1:-1;3989:211:36;-1:-1:-1;;;;;3989:211:36;;:::i;1689:145:30:-;;;:::i;1636:121:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1636:121:10;;-1:-1:-1;1636:121:10;;-1:-1:-1;;;;;1636:121:10:i;1066:77:30:-;;;:::i;4640:94:36:-;;;:::i;7369:290::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7369:290:36;;;;;;;;;;:::i;8522:282::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8522:282:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8522:282:36;;-1:-1:-1;8522:282:36;;-1:-1:-1;;;;;8522:282:36:i;4800:740::-;;;;;;;;;;;;;;;;-1:-1:-1;4800:740:36;;:::i;7725:154::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7725:154:36;;;;;;;;;;:::i;1983:240:30:-;;;;;;;;;;;;;;;;-1:-1:-1;1983:240:30;-1:-1:-1;;;;;1983:240:30;;:::i;948:140:31:-;-1:-1:-1;;;;;;1048:33:31;;1025:4;1048:33;;;;;;;;;;;;;948:140;;;;:::o;4486:90:36:-;4564:5;4557:12;;;;;;;;-1:-1:-1;;4557:12:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4532:13;;4557:12;;4564:5;;4557:12;;4564:5;4557:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4486:90;;:::o;7093:209::-;7161:7;7188:16;7196:7;7188;:16::i;:::-;7180:73;;;;-1:-1:-1;;;7180:73:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7271:24:36;;;;:15;:24;;;;;;-1:-1:-1;;;;;7271:24:36;;7093:209::o;6651:381::-;6731:13;6747:16;6755:7;6747;:16::i;:::-;6731:32;;6787:5;-1:-1:-1;;;;;6781:11:36;:2;-1:-1:-1;;;;;6781:11:36;;;6773:57;;;;-1:-1:-1;;;6773:57:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6865:5;-1:-1:-1;;;;;6849:21:36;:12;:10;:12::i;:::-;-1:-1:-1;;;;;6849:21:36;;:62;;;;6874:37;6891:5;6898:12;:10;:12::i;:::-;6874:16;:37::i;:::-;6841:152;;;;-1:-1:-1;;;6841:152:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7004:21;7013:2;7017:7;7004:8;:21::i;:::-;6651:381;;;:::o;6161:200::-;6214:7;6333:21;:12;:19;:21::i;:::-;6326:28;;6161:200;:::o;7941:300::-;8100:41;8119:12;:10;:12::i;:::-;8133:7;8100:18;:41::i;:::-;8092:103;;;;-1:-1:-1;;;8092:103:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8206:28;8216:4;8222:2;8226:7;8206:9;:28::i;5938:152::-;-1:-1:-1;;;;;6053:20:36;;6027:7;6053:20;;;:13;:20;;;;;:30;;6077:5;6053:30;:23;:30;:::i;:::-;6046:37;;5938:152;;;;;:::o;1839:97:10:-;1280:12:30;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:30;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:30;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:30;;;;;;;;;;;;;;;1911:18:10::1;1917:2;1921:7;1911:5;:18::i;:::-;1839:97:::0;;:::o;8307:149:36:-;8410:39;8427:4;8433:2;8437:7;8410:39;;;;;;;;;;;;:16;:39::i;2018:81:10:-;1280:12:30;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:30;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:30;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:30;;;;;;;;;;;;;;;2078:14:10::1;2084:7;2078:5;:14::i;:::-;2018:81:::0;:::o;2319:102::-;2375:4;2398:16;2406:7;2398;:16::i;6433:161:36:-;6500:7;;6541:22;:12;6557:5;6541:22;:15;:22;:::i;:::-;-1:-1:-1;6519:44:36;6433:161;-1:-1:-1;;;6433:161:36:o;4257:167::-;4321:7;4347:70;4364:7;4347:70;;;;;;;;;;;;;;;;;:12;;:70;;:16;:70;:::i;5772:87::-;5844:8;5837:15;;;;;;;;-1:-1:-1;;5837:15:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5812:13;;5837:15;;5844:8;;5837:15;;5844:8;5837:15;;;;;;;;;;;;;;;;;;;;;;;;3989:211;4053:7;-1:-1:-1;;;;;4080:19:36;;4072:74;;;;-1:-1:-1;;;4072:74:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4164:20:36;;;;;;:13;:20;;;;;:29;;:27;:29::i;1689:145:30:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:30;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:30;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:30;;;;;;;;;;;;;;;1779:6:::1;::::0;1758:40:::1;::::0;1795:1:::1;::::0;-1:-1:-1;;;;;1779:6:30::1;::::0;1758:40:::1;::::0;1795:1;;1758:40:::1;1808:6;:19:::0;;-1:-1:-1;;;;;;1808:19:30::1;::::0;;1689:145::o;1636:121:10:-;1280:12:30;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:30;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:30;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:30;;;;;;;;;;;;;;;1719:31:10::1;1743:6;1719:23;:31::i;1066:77:30:-:0;1130:6;;-1:-1:-1;;;;;1130:6:30;1066:77;:::o;4640:94:36:-;4720:7;4713:14;;;;;;;;-1:-1:-1;;4713:14:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4688:13;;4713:14;;4720:7;;4713:14;;4720:7;4713:14;;;;;;;;;;;;;;;;;;;;;;;;7369:290;7483:12;:10;:12::i;:::-;-1:-1:-1;;;;;7471:24:36;:8;-1:-1:-1;;;;;7471:24:36;;;7463:62;;;;;-1:-1:-1;;;7463:62:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;7581:8;7536:18;:32;7555:12;:10;:12::i;:::-;-1:-1:-1;;;;;7536:32:36;;;;;;;;;;;;;;;;;-1:-1:-1;7536:32:36;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;7536:53:36;;;;;;;;;;;7619:12;:10;:12::i;:::-;7604:48;;;;;;;;;;-1:-1:-1;;;;;7604:48:36;;;;;;;;;;;;;;7369:290;;:::o;8522:282::-;8653:41;8672:12;:10;:12::i;:::-;8686:7;8653:18;:41::i;:::-;8645:103;;;;-1:-1:-1;;;8645:103:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8758:39;8772:4;8778:2;8782:7;8791:5;8758:13;:39::i;:::-;8522:282;;;;:::o;4800:740::-;4865:13;4898:16;4906:7;4898;:16::i;:::-;4890:76;;;;-1:-1:-1;;;4890:76:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5003:19;;;;:10;:19;;;;;;;;;4977:45;;;;;;-1:-1:-1;;4977:45:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;:45;;;5003:19;4977:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5101:8:36;5095:22;4977:45;;-1:-1:-1;;;;5095:22:36;-1:-1:-1;;5095:22:36;;;;;;;;;;;5091:74;;5145:9;-1:-1:-1;5138:16:36;;5091:74;5267:23;;:27;5263:110;;5341:8;5351:9;5324:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5324:37:36;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5324:37:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5310:52;;;;;5263:110;5503:8;5513:18;:7;:16;:18::i;:::-;5486:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5486:46:36;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5486:46:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5472:61;;;4800:740;;;:::o;7725:154::-;-1:-1:-1;;;;;7837:25:36;;;7814:4;7837:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;7725:154::o;1983:240:30:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:30;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:30;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:30;;;;;;;;;;;;;;;-1:-1:-1;;;;;2071:22:30;::::1;2063:73;;;;-1:-1:-1::0;;;2063:73:30::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2172:6;::::0;2151:38:::1;::::0;-1:-1:-1;;;;;2151:38:30;;::::1;::::0;2172:6:::1;::::0;2151:38:::1;::::0;2172:6:::1;::::0;2151:38:::1;2199:6;:17:::0;;-1:-1:-1;;;;;;2199:17:30::1;-1:-1:-1::0;;;;;2199:17:30;;;::::1;::::0;;;::::1;::::0;;1983:240::o;202:723:44:-;258:13;475:10;471:51;;-1:-1:-1;501:10:44;;;;;;;;;;;;-1:-1:-1;;;501:10:44;;;;;;471:51;546:5;531:12;585:75;592:9;;585:75;;617:8;;647:2;639:10;;;;585:75;;;669:19;701:6;691:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;691:17:44;-1:-1:-1;761:5:44;;-1:-1:-1;669:39:44;-1:-1:-1;;;734:10:44;;776:112;783:9;;776:112;;849:2;842:4;:9;837:2;:14;826:27;;808:6;815:7;;;;;;;808:15;;;;;;;;;;;:45;-1:-1:-1;;;;;808:45:44;;;;;;;;-1:-1:-1;875:2:44;867:10;;;;776:112;;;-1:-1:-1;911:6:44;202:723;-1:-1:-1;;;;202:723:44:o;10237:117:36:-;10294:4;10317:30;:12;10339:7;10317:30;:21;:30;:::i;590:104:29:-;677:10;590:104;:::o;15893:155:36:-;15958:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15958:29:36;-1:-1:-1;;;;;15958:29:36;;;;;;;;:24;;16011:16;15958:24;16011:7;:16::i;:::-;-1:-1:-1;;;;;16002:39:36;;;;;;;;;;;15893:155;;:::o;7023:121:42:-;7092:7;7118:19;7126:3;7118:7;:19::i;10512:329:36:-;10597:4;10621:16;10629:7;10621;:16::i;:::-;10613:73;;;;-1:-1:-1;;;10613:73:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10696:13;10712:16;10720:7;10712;:16::i;:::-;10696:32;;10757:5;-1:-1:-1;;;;;10746:16:36;:7;-1:-1:-1;;;;;10746:16:36;;:51;;;;10790:7;-1:-1:-1;;;;;10766:31:36;:20;10778:7;10766:11;:20::i;:::-;-1:-1:-1;;;;;10766:31:36;;10746:51;:87;;;;10801:32;10818:5;10825:7;10801:16;:32::i;:::-;10738:96;10512:329;-1:-1:-1;;;;10512:329:36:o;13506:559::-;13623:4;-1:-1:-1;;;;;13603:24:36;:16;13611:7;13603;:16::i;:::-;-1:-1:-1;;;;;13603:24:36;;13595:78;;;;-1:-1:-1;;;13595:78:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13691:16:36;;13683:65;;;;-1:-1:-1;;;13683:65:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13759:39;13780:4;13786:2;13790:7;13759:20;:39::i;:::-;13860:29;13877:1;13881:7;13860:8;:29::i;:::-;-1:-1:-1;;;;;13900:19:36;;;;;;:13;:19;;;;;:35;;13927:7;13900:35;:26;:35;:::i;:::-;-1:-1:-1;;;;;;13945:17:36;;;;;;:13;:17;;;;;:30;;13967:7;13945:30;:21;:30;:::i;:::-;-1:-1:-1;13986:29:36;:12;14003:7;14012:2;13986:29;:16;:29;:::i;:::-;;14050:7;14046:2;-1:-1:-1;;;;;14031:27:36;14040:4;-1:-1:-1;;;;;14031:27:36;;;;;;;;;;;13506:559;;;:::o;7649:135:43:-;7720:7;7754:22;7758:3;7770:5;7754:3;:22::i;12070:393:36:-;-1:-1:-1;;;;;12149:16:36;;12141:61;;;;;-1:-1:-1;;;12141:61:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12221:16;12229:7;12221;:16::i;:::-;12220:17;12212:58;;;;;-1:-1:-1;;;12212:58:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;12281:45;12310:1;12314:2;12318:7;12281:20;:45::i;:::-;-1:-1:-1;;;;;12337:17:36;;;;;;:13;:17;;;;;:30;;12359:7;12337:30;:21;:30;:::i;:::-;-1:-1:-1;12378:29:36;:12;12395:7;12404:2;12378:29;:16;:29;:::i;:::-;-1:-1:-1;12423:33:36;;12448:7;;-1:-1:-1;;;;;12423:33:36;;;12440:1;;12423:33;;12440:1;;12423:33;12070:393;;:::o;12680:502::-;12739:13;12755:16;12763:7;12755;:16::i;:::-;12739:32;;12782:48;12803:5;12818:1;12822:7;12782:20;:48::i;:::-;12868:29;12885:1;12889:7;12868:8;:29::i;:::-;12953:19;;;;:10;:19;;;;;12947:33;;-1:-1:-1;;12947:33:36;;;;;;;;;;;:38;12943:95;;13008:19;;;;:10;:19;;;;;13001:26;;;:::i;:::-;-1:-1:-1;;;;;13048:20:36;;;;;;:13;:20;;;;;:36;;13076:7;13048:36;:27;:36;:::i;:::-;-1:-1:-1;13095:28:36;:12;13115:7;13095:28;:19;:28;:::i;:::-;-1:-1:-1;13139:36:36;;13167:7;;13163:1;;-1:-1:-1;;;;;13139:36:36;;;;;13163:1;;13139:36;12680:502;;:::o;7472:224:42:-;7552:7;;;;7611:22;7615:3;7627:5;7611:3;:22::i;:::-;7580:53;;;;-1:-1:-1;7472:224:42;-1:-1:-1;;;;;7472:224:42:o;8115:202::-;8222:7;8264:44;8269:3;8289;8295:12;8264:4;:44::i;:::-;8256:53;-1:-1:-1;8115:202:42;;;;;;:::o;1122:418:10:-;1392:9;1420:113;1468:6;1494:25;1392:9;1494:16;:25::i;:::-;1439:92;;;;;;-1:-1:-1;;;1439:92:10;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1439:92:10;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1439:92:10;;;;;;;;;;;-1:-1:-1;;;1439:92:10;;;;;;;;;;;;;;;;;-1:-1:-1;1439:92:10;;;;;;;;;;;;;-1:-1:-1;;1439:92:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1439:92:10;;;;;;;;;;;;;;;;;;;;;1420:11;:113::i;9665:269:36:-;9778:28;9788:4;9794:2;9798:7;9778:9;:28::i;:::-;9824:48;9847:4;9853:2;9857:7;9866:5;9824:22;:48::i;:::-;9816:111;;;;-1:-1:-1;;;9816:111:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6791:149:42;6875:4;6898:35;6908:3;6928;6898:9;:35::i;4483:108::-;4565:19;;4483:108::o;6764:135:43:-;6834:4;6857:35;6865:3;6885:5;6857:7;:35::i;6467:129::-;6534:4;6557:32;6562:3;6582:5;6557:4;:32::i;6239:174:42:-;6328:4;6351:55;6356:3;6376;-1:-1:-1;;;;;6390:14:42;;6351:4;:55::i;4423:201:43:-;4517:18;;4490:7;;4517:26;-1:-1:-1;4509:73:43;;;;-1:-1:-1;;;4509:73:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4599:3;:11;;4611:5;4599:18;;;;;;;;;;;;;;;;4592:25;;4423:201;;;;:::o;6572:140:42:-;6649:4;6672:33;6680:3;6700;6672:7;:33::i;4934:274::-;5037:19;;5001:7;;;;5037:27;-1:-1:-1;5029:74:42;;;;-1:-1:-1;;;5029:74:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5114:22;5139:3;:12;;5152:5;5139:19;;;;;;;;;;;;;;;;;;5114:44;;5176:5;:10;;;5188:5;:12;;;5168:33;;;;;4934:274;;;;;:::o;5615:315::-;5709:7;5747:17;;;:12;;;:17;;;;;;5797:12;5782:13;5774:36;;;;-1:-1:-1;;;5774:36:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5863:3;:12;;5887:1;5876:8;:12;5863:26;;;;;;;;;;;;;;;;;;:33;;;5856:40;;;5615:315;;;;;:::o;14647:98:36:-;14719:19;;;;:8;;:19;;;;;:::i;15298:589::-;15418:4;15443:15;:2;-1:-1:-1;;;;;15443:13:36;;:15::i;:::-;15438:58;;-1:-1:-1;15481:4:36;15474:11;;15438:58;15505:23;15531:246;-1:-1:-1;;;15642:12:36;:10;:12::i;:::-;15668:4;15686:7;15707:5;15547:175;;;;;;-1:-1:-1;;;;;15547:175:36;-1:-1:-1;;;;;15547:175:36;;;;;;-1:-1:-1;;;;;15547:175:36;-1:-1:-1;;;;;15547:175:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15547:175:36;;;;;;;-1:-1:-1;;;;;15547:175:36;;;;;;;;;;;15531:246;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15531:15:36;;;:246;;:15;:246;:::i;:::-;15505:272;;15787:13;15814:10;15803:32;;;;;;;;;;;;;;;-1:-1:-1;15803:32:36;-1:-1:-1;;;;;;15853:26:36;-1:-1:-1;;;15853:26:36;;-1:-1:-1;;;15298:589:36;;;;;;:::o;4270:123:42:-;4341:4;4364:17;;;:12;;;;;:17;;;;;;:22;;;4270:123::o;2183:1512:43:-;2249:4;2386:19;;;:12;;;:19;;;;;;2420:15;;2416:1273;;2849:18;;-1:-1:-1;;2801:14:43;;;;2849:22;;;;2777:21;;2849:3;;:22;;3131;;;;;;;;;;;;;;3111:42;;3274:9;3245:3;:11;;3257:13;3245:26;;;;;;;;;;;;;;;;;;;:38;;;;3349:23;;;3391:1;3349:12;;;:23;;;;;;3375:17;;;3349:43;;3498:17;;3349:3;;3498:17;;;;;;;;;;;;;;;;;;;;;;3590:3;:12;;:19;3603:5;3590:19;;;;;;;;;;;3583:26;;;3631:4;3624:11;;;;;;;;2416:1273;3673:5;3666:12;;;;;1611:404;1674:4;1695:21;1705:3;1710:5;1695:9;:21::i;:::-;1690:319;;-1:-1:-1;1732:23:43;;;;;;;;:11;:23;;;;;;;;;;;;;1912:18;;1890:19;;;:12;;;:19;;;;;;:40;;;;1944:11;;1690:319;-1:-1:-1;1993:5:43;1986:12;;1828:678:42;1904:4;2037:17;;;:12;;;:17;;;;;;2069:13;2065:435;;-1:-1:-1;;2153:38:42;;;;;;;;;;;;;;;;;;2135:57;;;;;;;;:12;:57;;;;;;;;;;;;;;;;;;;;;;;;2347:19;;2327:17;;;:12;;;:17;;;;;;;:39;2380:11;;2065:435;2458:5;2422:3;:12;;2446:1;2435:8;:12;2422:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2484:5;2477:12;;;;;2674:1517;2738:4;2871:17;;;:12;;;:17;;;;;;2903:13;;2899:1286;;3329:19;;-1:-1:-1;;3283:12:42;;;;3329:23;;;;3259:21;;3329:3;;:23;;3621;;;;;;;;;;;;;;;;3592:52;;3766:9;3736:3;:12;;3749:13;3736:27;;;;;;;;;;;;;;;;:39;;:27;;;;;:39;;;;;;;;;;;;;;;3854:14;;3841:28;;:12;;;:28;;;;;3872:17;;;3841:48;;3995:18;;3841:3;;3995:18;;;;;;;;;;;;;;-1:-1:-1;;3995:18:42;;;;;;;;;;;;;;;;;;;;;4088:17;;;:12;;;:17;;;;;;4081:24;;;;3995:18;-1:-1:-1;4120:11:42;;-1:-1:-1;;;;4120:11:42;718:610:41;778:4;1239:20;;1084:66;1278:23;;;;;;:42;;-1:-1:-1;;1305:15:41;;;1270:51;-1:-1:-1;;718:610:41:o;3770:194::-;3873:12;3904:53;3927:6;3935:4;3941:1;3944:12;5247;5279:18;5290:6;5279:10;:18::i;:::-;5271:60;;;;;-1:-1:-1;;;5271:60:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;5402:12;5416:23;5443:6;-1:-1:-1;;;;;5443:11:41;5463:8;5474:4;5443:36;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5443:36:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5401:78;;;;5493:7;5489:580;;;5523:10;-1:-1:-1;5516:17:41;;-1:-1:-1;5516:17:41;5489:580;5634:17;;:21;5630:429;;5892:10;5886:17;5952:15;5939:10;5935:2;5931:19;5924:44;5841:145;6024:20;;-1:-1:-1;;;6024:20:41;;;;;;;;;;;;;;;;;6031:12;;6024:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.6.10;\n\nimport \"openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\";\n\nimport \"openzeppelin-solidity/contracts/access/Ownable.sol\";\n\nimport \"openzeppelin-solidity/contracts/utils/Strings.sol\";\n\n/**\n * The MacroverseRealEstate contract keeps track of who currently owns virtual\n * real estate in the Macroverse world, at all scales. It supersedes the\n * MacroverseStarRegistry. Registration and Macroverse-specific manipulation of\n * tokens is accomplished through the MacroverseUniversalRegistry, which owns\n * this contract.\n *\n * The split between this contract and the MacroverseUniversalRegistry exists\n * to keep contract size under the limit. \n */\ncontract MacroverseRealEstate is ERC721, Ownable {\n\n    \n    /**\n     * Deploy the backend, taking mint, burn, and set-user commands from the deployer.\n     * Use the given domain as the domain for token URIs.\n     */\n    constructor(string memory domain) public ERC721(\"Macroverse Real Estate\", \"MRE\") {\n        _setTokenMetadataDomain(domain);\n    }\n    \n    /**\n     * Allow this contract to change the ERC721 metadata URI domain.\n     */\n    function _setTokenMetadataDomain(string memory domain) internal {\n        // Set up new OpenZeppelin 3.0 automatic token URI system.\n        // Good thing we match their format or we'd have to fork OZ.\n        uint chainId = 0;\n        assembly {\n            chainId := chainid()\n        }\n        _setBaseURI(string(abi.encodePacked(\"https://\", domain, \"/vre/v1/chain/\", Strings.toString(chainId), \"/token/\")));\n    }\n    \n    /**\n     * Allow this the owner to change the ERC721 metadata URI domain.\n     */\n    function setTokenMetadataDomain(string memory domain) external onlyOwner {\n        _setTokenMetadataDomain(domain);\n    }\n\n    /**\n     * Mint tokens at the direction of the owning contract.\n     */\n    function mint(address to, uint256 tokenId) external onlyOwner {\n        _mint(to, tokenId);\n    }\n\n    /**\n     * Burn tokens at the direction of the owning contract.\n     */\n    function burn(uint256 tokenId) external onlyOwner {\n        _burn(tokenId);\n    }\n\n    /**\n     * Publically expose a token existence test. Returns true if the given\n     * token is owned by someone, and false otherwise. Note that tokens sent to\n     * 0x0 but not burned may still exist.\n     */\n    function exists(uint256 tokenId) external view returns (bool) {\n        return _exists(tokenId);\n    }\n}\n\n// SPDX-License-Identifier: UNLICENSED\n",
  "sourcePath": "/home/anovak/workspace/macroverse/contracts/MacroverseRealEstate.sol",
  "ast": {
    "absolutePath": "/home/anovak/workspace/macroverse/contracts/MacroverseRealEstate.sol",
    "exportedSymbols": {
      "MacroverseRealEstate": [
        3166
      ]
    },
    "id": 3167,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3058,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:10"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "id": 3059,
        "nodeType": "ImportDirective",
        "scope": 3167,
        "sourceUnit": 12623,
        "src": "26:65:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "id": 3060,
        "nodeType": "ImportDirective",
        "scope": 3167,
        "sourceUnit": 11136,
        "src": "93:60:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/utils/Strings.sol",
        "file": "openzeppelin-solidity/contracts/utils/Strings.sol",
        "id": 3061,
        "nodeType": "ImportDirective",
        "scope": 3167,
        "sourceUnit": 13956,
        "src": "155:59:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3063,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12622,
              "src": "709:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$12622",
                "typeString": "contract ERC721"
              }
            },
            "id": 3064,
            "nodeType": "InheritanceSpecifier",
            "src": "709:6:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3065,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11135,
              "src": "717:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$11135",
                "typeString": "contract Ownable"
              }
            },
            "id": 3066,
            "nodeType": "InheritanceSpecifier",
            "src": "717:7:10"
          }
        ],
        "contractDependencies": [
          11026,
          11135,
          11192,
          11204,
          12622,
          12738,
          12769,
          12796
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3062,
          "nodeType": "StructuredDocumentation",
          "src": "216:459:10",
          "text": " The MacroverseRealEstate contract keeps track of who currently owns virtual\n real estate in the Macroverse world, at all scales. It supersedes the\n MacroverseStarRegistry. Registration and Macroverse-specific manipulation of\n tokens is accomplished through the MacroverseUniversalRegistry, which owns\n this contract.\n The split between this contract and the MacroverseUniversalRegistry exists\n to keep contract size under the limit. "
        },
        "fullyImplemented": true,
        "id": 3166,
        "linearizedBaseContracts": [
          3166,
          11135,
          12622,
          12769,
          12796,
          12738,
          11192,
          11204,
          11026
        ],
        "name": "MacroverseRealEstate",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3080,
              "nodeType": "Block",
              "src": "979:48:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3077,
                        "name": "domain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3069,
                        "src": "1013:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3076,
                      "name": "_setTokenMetadataDomain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3110,
                      "src": "989:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "989:31:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3079,
                  "nodeType": "ExpressionStatement",
                  "src": "989:31:10"
                }
              ]
            },
            "documentation": {
              "id": 3067,
              "nodeType": "StructuredDocumentation",
              "src": "737:156:10",
              "text": " Deploy the backend, taking mint, burn, and set-user commands from the deployer.\n Use the given domain as the domain for token URIs."
            },
            "id": 3081,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4d6163726f7665727365205265616c20457374617465",
                    "id": 3072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "946:24:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6448b0c6d20bc4eea194151115138cf3e5fb3b1b1353ee46d9467b39e619b61d",
                      "typeString": "literal_string \"Macroverse Real Estate\""
                    },
                    "value": "Macroverse Real Estate"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4d5245",
                    "id": 3073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "972:5:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6a276174106362147b87c12a762f3687580129251ca71e76de954b6d530dfa8f",
                      "typeString": "literal_string \"MRE\""
                    },
                    "value": "MRE"
                  }
                ],
                "id": 3074,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3071,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 12622,
                  "src": "939:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$12622_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "939:39:10"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3069,
                  "mutability": "mutable",
                  "name": "domain",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3081,
                  "src": "910:20:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3068,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "910:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "909:22:10"
            },
            "returnParameters": {
              "id": 3075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "979:0:10"
            },
            "scope": 3166,
            "src": "898:129:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3109,
              "nodeType": "Block",
              "src": "1186:354:10",
              "statements": [
                {
                  "assignments": [
                    3088
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3088,
                      "mutability": "mutable",
                      "name": "chainId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3109,
                      "src": "1332:12:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3087,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1332:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3090,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 3089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1347:1:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1332:16:10"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1367:44:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1381:20:10",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "chainid",
                            "nodeType": "YulIdentifier",
                            "src": "1392:7:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1392:9:10"
                        },
                        "variableNames": [
                          {
                            "name": "chainId",
                            "nodeType": "YulIdentifier",
                            "src": "1381:7:10"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 3088,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1381:7:10",
                      "valueSize": 1
                    }
                  ],
                  "id": 3091,
                  "nodeType": "InlineAssembly",
                  "src": "1358:53:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "68747470733a2f2f",
                                "id": 3097,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1456:10:10",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_22a0bccaefa7e44032d5e21026b45254e49ef9bce8763cb450aaa27db3ce52a1",
                                  "typeString": "literal_string \"https://\""
                                },
                                "value": "https://"
                              },
                              {
                                "argumentTypes": null,
                                "id": 3098,
                                "name": "domain",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3084,
                                "src": "1468:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "2f7672652f76312f636861696e2f",
                                "id": 3099,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1476:16:10",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_0774c37070c25323d9b5c853e81b491b65ba6246d69a8c9915e5ea5206ebcec1",
                                  "typeString": "literal_string \"/vre/v1/chain/\""
                                },
                                "value": "/vre/v1/chain/"
                              },
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 3102,
                                    "name": "chainId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3088,
                                    "src": "1511:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3100,
                                    "name": "Strings",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13955,
                                    "src": "1494:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Strings_$13955_$",
                                      "typeString": "type(library Strings)"
                                    }
                                  },
                                  "id": 3101,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "toString",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13954,
                                  "src": "1494:16:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (string memory)"
                                  }
                                },
                                "id": 3103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1494:25:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "2f746f6b656e2f",
                                "id": 3104,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1521:9:10",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_744d9f0f09a47cf88aebd2a73ac1c367e8c95a4e22be6a16d5f075d39c7618db",
                                  "typeString": "literal_string \"/token/\""
                                },
                                "value": "/token/"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_22a0bccaefa7e44032d5e21026b45254e49ef9bce8763cb450aaa27db3ce52a1",
                                  "typeString": "literal_string \"https://\""
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0774c37070c25323d9b5c853e81b491b65ba6246d69a8c9915e5ea5206ebcec1",
                                  "typeString": "literal_string \"/vre/v1/chain/\""
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_744d9f0f09a47cf88aebd2a73ac1c367e8c95a4e22be6a16d5f075d39c7618db",
                                  "typeString": "literal_string \"/token/\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 3095,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1439:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 3096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1439:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 3105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1439:92:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 3094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1432:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": {
                            "id": 3093,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "1432:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1432:100:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3092,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12530,
                      "src": "1420:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1420:113:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3108,
                  "nodeType": "ExpressionStatement",
                  "src": "1420:113:10"
                }
              ]
            },
            "documentation": {
              "id": 3082,
              "nodeType": "StructuredDocumentation",
              "src": "1037:80:10",
              "text": " Allow this contract to change the ERC721 metadata URI domain."
            },
            "id": 3110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setTokenMetadataDomain",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3084,
                  "mutability": "mutable",
                  "name": "domain",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3110,
                  "src": "1155:20:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3083,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1154:22:10"
            },
            "returnParameters": {
              "id": 3086,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1186:0:10"
            },
            "scope": 3166,
            "src": "1122:418:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3122,
              "nodeType": "Block",
              "src": "1709:48:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3119,
                        "name": "domain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3113,
                        "src": "1743:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3118,
                      "name": "_setTokenMetadataDomain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3110,
                      "src": "1719:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1719:31:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3121,
                  "nodeType": "ExpressionStatement",
                  "src": "1719:31:10"
                }
              ]
            },
            "documentation": {
              "id": 3111,
              "nodeType": "StructuredDocumentation",
              "src": "1550:81:10",
              "text": " Allow this the owner to change the ERC721 metadata URI domain."
            },
            "functionSelector": "839dc732",
            "id": 3123,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3116,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3115,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11084,
                  "src": "1699:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1699:9:10"
              }
            ],
            "name": "setTokenMetadataDomain",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3113,
                  "mutability": "mutable",
                  "name": "domain",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3123,
                  "src": "1668:20:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3112,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1668:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1667:22:10"
            },
            "returnParameters": {
              "id": 3117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1709:0:10"
            },
            "scope": 3166,
            "src": "1636:121:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3138,
              "nodeType": "Block",
              "src": "1901:35:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3134,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3126,
                        "src": "1917:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3135,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3128,
                        "src": "1921:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3133,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12358,
                      "src": "1911:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1911:18:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3137,
                  "nodeType": "ExpressionStatement",
                  "src": "1911:18:10"
                }
              ]
            },
            "documentation": {
              "id": 3124,
              "nodeType": "StructuredDocumentation",
              "src": "1763:71:10",
              "text": " Mint tokens at the direction of the owning contract."
            },
            "functionSelector": "40c10f19",
            "id": 3139,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3131,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3130,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11084,
                  "src": "1891:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1891:9:10"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3126,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3139,
                  "src": "1853:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1853:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3128,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3139,
                  "src": "1865:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3127,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1865:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1852:29:10"
            },
            "returnParameters": {
              "id": 3132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1901:0:10"
            },
            "scope": 3166,
            "src": "1839:97:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3151,
              "nodeType": "Block",
              "src": "2068:31:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3148,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3142,
                        "src": "2084:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3147,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12426,
                      "src": "2078:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2078:14:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3150,
                  "nodeType": "ExpressionStatement",
                  "src": "2078:14:10"
                }
              ]
            },
            "documentation": {
              "id": 3140,
              "nodeType": "StructuredDocumentation",
              "src": "1942:71:10",
              "text": " Burn tokens at the direction of the owning contract."
            },
            "functionSelector": "42966c68",
            "id": 3152,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3145,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3144,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11084,
                  "src": "2058:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2058:9:10"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3142,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3152,
                  "src": "2032:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2032:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2031:17:10"
            },
            "returnParameters": {
              "id": 3146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2068:0:10"
            },
            "scope": 3166,
            "src": "2018:81:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3164,
              "nodeType": "Block",
              "src": "2381:40:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3161,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3155,
                        "src": "2406:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3160,
                      "name": "_exists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12215,
                      "src": "2398:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 3162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2398:16:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3159,
                  "id": 3163,
                  "nodeType": "Return",
                  "src": "2391:23:10"
                }
              ]
            },
            "documentation": {
              "id": 3153,
              "nodeType": "StructuredDocumentation",
              "src": "2105:209:10",
              "text": " Publically expose a token existence test. Returns true if the given\n token is owned by someone, and false otherwise. Note that tokens sent to\n 0x0 but not burned may still exist."
            },
            "functionSelector": "4f558e79",
            "id": 3165,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exists",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3155,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3165,
                  "src": "2335:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2335:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2334:17:10"
            },
            "returnParameters": {
              "id": 3159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3158,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3165,
                  "src": "2375:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3157,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2375:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2374:6:10"
            },
            "scope": 3166,
            "src": "2319:102:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3167,
        "src": "676:1747:10"
      }
    ],
    "src": "0:2464:10"
  },
  "legacyAST": {
    "absolutePath": "/home/anovak/workspace/macroverse/contracts/MacroverseRealEstate.sol",
    "exportedSymbols": {
      "MacroverseRealEstate": [
        3166
      ]
    },
    "id": 3167,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3058,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:10"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "id": 3059,
        "nodeType": "ImportDirective",
        "scope": 3167,
        "sourceUnit": 12623,
        "src": "26:65:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "id": 3060,
        "nodeType": "ImportDirective",
        "scope": 3167,
        "sourceUnit": 11136,
        "src": "93:60:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/utils/Strings.sol",
        "file": "openzeppelin-solidity/contracts/utils/Strings.sol",
        "id": 3061,
        "nodeType": "ImportDirective",
        "scope": 3167,
        "sourceUnit": 13956,
        "src": "155:59:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3063,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12622,
              "src": "709:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$12622",
                "typeString": "contract ERC721"
              }
            },
            "id": 3064,
            "nodeType": "InheritanceSpecifier",
            "src": "709:6:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3065,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11135,
              "src": "717:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$11135",
                "typeString": "contract Ownable"
              }
            },
            "id": 3066,
            "nodeType": "InheritanceSpecifier",
            "src": "717:7:10"
          }
        ],
        "contractDependencies": [
          11026,
          11135,
          11192,
          11204,
          12622,
          12738,
          12769,
          12796
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3062,
          "nodeType": "StructuredDocumentation",
          "src": "216:459:10",
          "text": " The MacroverseRealEstate contract keeps track of who currently owns virtual\n real estate in the Macroverse world, at all scales. It supersedes the\n MacroverseStarRegistry. Registration and Macroverse-specific manipulation of\n tokens is accomplished through the MacroverseUniversalRegistry, which owns\n this contract.\n The split between this contract and the MacroverseUniversalRegistry exists\n to keep contract size under the limit. "
        },
        "fullyImplemented": true,
        "id": 3166,
        "linearizedBaseContracts": [
          3166,
          11135,
          12622,
          12769,
          12796,
          12738,
          11192,
          11204,
          11026
        ],
        "name": "MacroverseRealEstate",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3080,
              "nodeType": "Block",
              "src": "979:48:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3077,
                        "name": "domain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3069,
                        "src": "1013:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3076,
                      "name": "_setTokenMetadataDomain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3110,
                      "src": "989:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "989:31:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3079,
                  "nodeType": "ExpressionStatement",
                  "src": "989:31:10"
                }
              ]
            },
            "documentation": {
              "id": 3067,
              "nodeType": "StructuredDocumentation",
              "src": "737:156:10",
              "text": " Deploy the backend, taking mint, burn, and set-user commands from the deployer.\n Use the given domain as the domain for token URIs."
            },
            "id": 3081,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4d6163726f7665727365205265616c20457374617465",
                    "id": 3072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "946:24:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6448b0c6d20bc4eea194151115138cf3e5fb3b1b1353ee46d9467b39e619b61d",
                      "typeString": "literal_string \"Macroverse Real Estate\""
                    },
                    "value": "Macroverse Real Estate"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4d5245",
                    "id": 3073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "972:5:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6a276174106362147b87c12a762f3687580129251ca71e76de954b6d530dfa8f",
                      "typeString": "literal_string \"MRE\""
                    },
                    "value": "MRE"
                  }
                ],
                "id": 3074,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3071,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 12622,
                  "src": "939:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$12622_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "939:39:10"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3069,
                  "mutability": "mutable",
                  "name": "domain",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3081,
                  "src": "910:20:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3068,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "910:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "909:22:10"
            },
            "returnParameters": {
              "id": 3075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "979:0:10"
            },
            "scope": 3166,
            "src": "898:129:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3109,
              "nodeType": "Block",
              "src": "1186:354:10",
              "statements": [
                {
                  "assignments": [
                    3088
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3088,
                      "mutability": "mutable",
                      "name": "chainId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3109,
                      "src": "1332:12:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3087,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1332:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3090,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 3089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1347:1:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1332:16:10"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1367:44:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1381:20:10",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "chainid",
                            "nodeType": "YulIdentifier",
                            "src": "1392:7:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1392:9:10"
                        },
                        "variableNames": [
                          {
                            "name": "chainId",
                            "nodeType": "YulIdentifier",
                            "src": "1381:7:10"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 3088,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1381:7:10",
                      "valueSize": 1
                    }
                  ],
                  "id": 3091,
                  "nodeType": "InlineAssembly",
                  "src": "1358:53:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "68747470733a2f2f",
                                "id": 3097,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1456:10:10",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_22a0bccaefa7e44032d5e21026b45254e49ef9bce8763cb450aaa27db3ce52a1",
                                  "typeString": "literal_string \"https://\""
                                },
                                "value": "https://"
                              },
                              {
                                "argumentTypes": null,
                                "id": 3098,
                                "name": "domain",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3084,
                                "src": "1468:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "2f7672652f76312f636861696e2f",
                                "id": 3099,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1476:16:10",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_0774c37070c25323d9b5c853e81b491b65ba6246d69a8c9915e5ea5206ebcec1",
                                  "typeString": "literal_string \"/vre/v1/chain/\""
                                },
                                "value": "/vre/v1/chain/"
                              },
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 3102,
                                    "name": "chainId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3088,
                                    "src": "1511:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 3100,
                                    "name": "Strings",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13955,
                                    "src": "1494:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Strings_$13955_$",
                                      "typeString": "type(library Strings)"
                                    }
                                  },
                                  "id": 3101,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "toString",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13954,
                                  "src": "1494:16:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (string memory)"
                                  }
                                },
                                "id": 3103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1494:25:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "2f746f6b656e2f",
                                "id": 3104,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1521:9:10",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_744d9f0f09a47cf88aebd2a73ac1c367e8c95a4e22be6a16d5f075d39c7618db",
                                  "typeString": "literal_string \"/token/\""
                                },
                                "value": "/token/"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_22a0bccaefa7e44032d5e21026b45254e49ef9bce8763cb450aaa27db3ce52a1",
                                  "typeString": "literal_string \"https://\""
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0774c37070c25323d9b5c853e81b491b65ba6246d69a8c9915e5ea5206ebcec1",
                                  "typeString": "literal_string \"/vre/v1/chain/\""
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_744d9f0f09a47cf88aebd2a73ac1c367e8c95a4e22be6a16d5f075d39c7618db",
                                  "typeString": "literal_string \"/token/\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 3095,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1439:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 3096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1439:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 3105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1439:92:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 3094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1432:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": {
                            "id": 3093,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "1432:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1432:100:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3092,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12530,
                      "src": "1420:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1420:113:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3108,
                  "nodeType": "ExpressionStatement",
                  "src": "1420:113:10"
                }
              ]
            },
            "documentation": {
              "id": 3082,
              "nodeType": "StructuredDocumentation",
              "src": "1037:80:10",
              "text": " Allow this contract to change the ERC721 metadata URI domain."
            },
            "id": 3110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setTokenMetadataDomain",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3084,
                  "mutability": "mutable",
                  "name": "domain",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3110,
                  "src": "1155:20:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3083,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1154:22:10"
            },
            "returnParameters": {
              "id": 3086,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1186:0:10"
            },
            "scope": 3166,
            "src": "1122:418:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3122,
              "nodeType": "Block",
              "src": "1709:48:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3119,
                        "name": "domain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3113,
                        "src": "1743:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3118,
                      "name": "_setTokenMetadataDomain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3110,
                      "src": "1719:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1719:31:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3121,
                  "nodeType": "ExpressionStatement",
                  "src": "1719:31:10"
                }
              ]
            },
            "documentation": {
              "id": 3111,
              "nodeType": "StructuredDocumentation",
              "src": "1550:81:10",
              "text": " Allow this the owner to change the ERC721 metadata URI domain."
            },
            "functionSelector": "839dc732",
            "id": 3123,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3116,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3115,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11084,
                  "src": "1699:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1699:9:10"
              }
            ],
            "name": "setTokenMetadataDomain",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3113,
                  "mutability": "mutable",
                  "name": "domain",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3123,
                  "src": "1668:20:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3112,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1668:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1667:22:10"
            },
            "returnParameters": {
              "id": 3117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1709:0:10"
            },
            "scope": 3166,
            "src": "1636:121:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3138,
              "nodeType": "Block",
              "src": "1901:35:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3134,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3126,
                        "src": "1917:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3135,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3128,
                        "src": "1921:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3133,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12358,
                      "src": "1911:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1911:18:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3137,
                  "nodeType": "ExpressionStatement",
                  "src": "1911:18:10"
                }
              ]
            },
            "documentation": {
              "id": 3124,
              "nodeType": "StructuredDocumentation",
              "src": "1763:71:10",
              "text": " Mint tokens at the direction of the owning contract."
            },
            "functionSelector": "40c10f19",
            "id": 3139,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3131,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3130,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11084,
                  "src": "1891:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1891:9:10"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3126,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3139,
                  "src": "1853:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1853:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3128,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3139,
                  "src": "1865:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3127,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1865:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1852:29:10"
            },
            "returnParameters": {
              "id": 3132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1901:0:10"
            },
            "scope": 3166,
            "src": "1839:97:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3151,
              "nodeType": "Block",
              "src": "2068:31:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3148,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3142,
                        "src": "2084:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3147,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12426,
                      "src": "2078:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2078:14:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3150,
                  "nodeType": "ExpressionStatement",
                  "src": "2078:14:10"
                }
              ]
            },
            "documentation": {
              "id": 3140,
              "nodeType": "StructuredDocumentation",
              "src": "1942:71:10",
              "text": " Burn tokens at the direction of the owning contract."
            },
            "functionSelector": "42966c68",
            "id": 3152,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3145,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3144,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11084,
                  "src": "2058:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2058:9:10"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3142,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3152,
                  "src": "2032:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2032:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2031:17:10"
            },
            "returnParameters": {
              "id": 3146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2068:0:10"
            },
            "scope": 3166,
            "src": "2018:81:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3164,
              "nodeType": "Block",
              "src": "2381:40:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3161,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3155,
                        "src": "2406:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3160,
                      "name": "_exists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12215,
                      "src": "2398:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 3162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2398:16:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3159,
                  "id": 3163,
                  "nodeType": "Return",
                  "src": "2391:23:10"
                }
              ]
            },
            "documentation": {
              "id": 3153,
              "nodeType": "StructuredDocumentation",
              "src": "2105:209:10",
              "text": " Publically expose a token existence test. Returns true if the given\n token is owned by someone, and false otherwise. Note that tokens sent to\n 0x0 but not burned may still exist."
            },
            "functionSelector": "4f558e79",
            "id": 3165,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exists",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3155,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3165,
                  "src": "2335:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2335:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2334:17:10"
            },
            "returnParameters": {
              "id": 3159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3158,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3165,
                  "src": "2375:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3157,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2375:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2374:6:10"
            },
            "scope": 3166,
            "src": "2319:102:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3167,
        "src": "676:1747:10"
      }
    ],
    "src": "0:2464:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.10+commit.00c0fcaf.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xE72f7a7d339A9d4B729dEa0549D39645d51FAaF7",
      "transactionHash": "0x4f10365da7de8195ac9eb9e8f937b42cd58e87daa459863e0315e9bc8e1fcf95"
    },
    "4": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address",
              "internalType": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool",
              "internalType": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x2B5CDc25018642d8049F3f7D7FD2Fd030B9541d6",
      "transactionHash": "0xf19e52c05a557238477be3b4fa0d4e6a169472ab124e6ee2f564751813802304"
    },
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xa7E3500afC55cf7228adeb226183363ac8BecE25",
      "transactionHash": "0xd17e3713f7d010c8d5f6c2336c930d776b4149fc82a52e9bbe8077c48887e852"
    }
  },
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-12-11T02:46:40.838Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "burn(uint256)": {
        "notice": "Burn tokens at the direction of the owning contract."
      },
      "constructor": "Deploy the backend, taking mint, burn, and set-user commands from the deployer. Use the given domain as the domain for token URIs.",
      "exists(uint256)": {
        "notice": "Publically expose a token existence test. Returns true if the given token is owned by someone, and false otherwise. Note that tokens sent to 0x0 but not burned may still exist."
      },
      "mint(address,uint256)": {
        "notice": "Mint tokens at the direction of the owning contract."
      },
      "setTokenMetadataDomain(string)": {
        "notice": "Allow this the owner to change the ERC721 metadata URI domain."
      }
    },
    "notice": "The MacroverseRealEstate contract keeps track of who currently owns virtual real estate in the Macroverse world, at all scales. It supersedes the MacroverseStarRegistry. Registration and Macroverse-specific manipulation of tokens is accomplished through the MacroverseUniversalRegistry, which owns this contract. The split between this contract and the MacroverseUniversalRegistry exists to keep contract size under the limit. "
  }
}