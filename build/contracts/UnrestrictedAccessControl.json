{
  "contractName": "UnrestrictedAccessControl",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowQuery",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.14+commit.01f1aaa4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowQuery\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"allowQuery(address,address)\":{\"notice\":\"Always approve access, ignoring the addresses passed in. Note that this raises solidity compiler warnings about unused variables.\"}},\"notice\":\"Represents an access control strategy where all requests are accepted.\"}},\"settings\":{\"compilationTarget\":{\"/z/home/anovak/workspace/macroverse/contracts/UnrestrictedAccessControl.sol\":\"UnrestrictedAccessControl\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/z/home/anovak/workspace/macroverse/contracts/AccessControl.sol\":{\"keccak256\":\"0xb73144156419d9a5318081c9ae9d65b13da5e5e706a96c17c24c2173a6b31ecc\",\"urls\":[\"bzz-raw://9a300f85ad1673f454fdf492f29c50e3b0f1f12f178b5d3ce45f6a6724025395\",\"dweb:/ipfs/QmTPzViBHUXQ9TvWyWoNPKsRqfgbDpv8YfFproneZ8HcBw\"]},\"/z/home/anovak/workspace/macroverse/contracts/UnrestrictedAccessControl.sol\":{\"keccak256\":\"0x0406209b279a116edbb549852e4ad573e0fcb3a5c0243c0ddc43b201a2ab8a7a\",\"urls\":[\"bzz-raw://824348daa3c5bdb313de54fa26708d820435df084a86282a3fa0e7e25762958d\",\"dweb:/ipfs/QmSw9wG8MjUx8K4Y5yrCFfW5CRifTHjm378tKmX8rwBjPV\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060e78061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80634af5fb0f14602d575b600080fd5b608c60048036036040811015604157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505060a6565b604051808215151515815260200191505060405180910390f35b6000600190509291505056fea265627a7a72315820726609bca9caf7d21aa152869e075aab50bf9345bf177e67ceb2b4bc794627ca64736f6c634300050e0032",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c80634af5fb0f14602d575b600080fd5b608c60048036036040811015604157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505060a6565b604051808215151515815260200191505060405180910390f35b6000600190509291505056fea265627a7a72315820726609bca9caf7d21aa152869e075aab50bf9345bf177e67ceb2b4bc794627ca64736f6c634300050e0032",
  "sourceMap": "138:322:25:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;138:322:25;;;;;;;",
  "deployedSourceMap": "138:322:25:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;138:322:25;;;;;;;;;;;;;;;;;;;339:119;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;339:119:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;424:4;447;440:11;;339:119;;;;:::o",
  "source": "pragma solidity ^0.5.2;\n\nimport \"./AccessControl.sol\";\n\n/**\n * Represents an access control strategy where all requests are accepted.\n */\ncontract UnrestrictedAccessControl {\n    /**\n     * Always approve access, ignoring the addresses passed in.\n     * Note that this raises solidity compiler warnings about unused variables.\n     */\n    function allowQuery(address /* sender */, address /* origin */) public pure returns (bool) {\n        return true;\n    }\n}\n",
  "sourcePath": "/z/home/anovak/workspace/macroverse/contracts/UnrestrictedAccessControl.sol",
  "ast": {
    "absolutePath": "/z/home/anovak/workspace/macroverse/contracts/UnrestrictedAccessControl.sol",
    "exportedSymbols": {
      "UnrestrictedAccessControl": [
        10249
      ]
    },
    "id": 10250,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10235,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:25"
      },
      {
        "absolutePath": "/z/home/anovak/workspace/macroverse/contracts/AccessControl.sol",
        "file": "./AccessControl.sol",
        "id": 10236,
        "nodeType": "ImportDirective",
        "scope": 10250,
        "sourceUnit": 12,
        "src": "25:29:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "Represents an access control strategy where all requests are accepted.",
        "fullyImplemented": true,
        "id": 10249,
        "linearizedBaseContracts": [
          10249
        ],
        "name": "UnrestrictedAccessControl",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10247,
              "nodeType": "Block",
              "src": "430:28:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 10245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "447:4:25",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 10244,
                  "id": 10246,
                  "nodeType": "Return",
                  "src": "440:11:25"
                }
              ]
            },
            "documentation": "Always approve access, ignoring the addresses passed in.\nNote that this raises solidity compiler warnings about unused variables.",
            "id": 10248,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowQuery",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10238,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10248,
                  "src": "359:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "359:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10240,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10248,
                  "src": "381:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10239,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "381:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "358:44:25"
            },
            "returnParameters": {
              "id": 10244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10243,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10248,
                  "src": "424:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10242,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "424:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "423:6:25"
            },
            "scope": 10249,
            "src": "339:119:25",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 10250,
        "src": "138:322:25"
      }
    ],
    "src": "0:461:25"
  },
  "legacyAST": {
    "absolutePath": "/z/home/anovak/workspace/macroverse/contracts/UnrestrictedAccessControl.sol",
    "exportedSymbols": {
      "UnrestrictedAccessControl": [
        10249
      ]
    },
    "id": 10250,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10235,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:25"
      },
      {
        "absolutePath": "/z/home/anovak/workspace/macroverse/contracts/AccessControl.sol",
        "file": "./AccessControl.sol",
        "id": 10236,
        "nodeType": "ImportDirective",
        "scope": 10250,
        "sourceUnit": 12,
        "src": "25:29:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "Represents an access control strategy where all requests are accepted.",
        "fullyImplemented": true,
        "id": 10249,
        "linearizedBaseContracts": [
          10249
        ],
        "name": "UnrestrictedAccessControl",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10247,
              "nodeType": "Block",
              "src": "430:28:25",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 10245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "447:4:25",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 10244,
                  "id": 10246,
                  "nodeType": "Return",
                  "src": "440:11:25"
                }
              ]
            },
            "documentation": "Always approve access, ignoring the addresses passed in.\nNote that this raises solidity compiler warnings about unused variables.",
            "id": 10248,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowQuery",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10238,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10248,
                  "src": "359:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "359:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10240,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10248,
                  "src": "381:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10239,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "381:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "358:44:25"
            },
            "returnParameters": {
              "id": 10244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10243,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10248,
                  "src": "424:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10242,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "424:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "423:6:25"
            },
            "scope": 10249,
            "src": "339:119:25",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 10250,
        "src": "138:322:25"
      }
    ],
    "src": "0:461:25"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.14+commit.01f1aaa4.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {},
      "links": {},
      "address": "0xd85ca484f03c686b8a85b195f4f5fc1753b7c826",
      "updated_at": 1498363737188
    },
    "4": {
      "events": {},
      "links": {},
      "address": "0xB7eF25266908b65B0e01fE0C2Cc185EEEDe4A072",
      "transactionHash": "0xec78d8b0ed6ded05e6592cf328a092df2f88493ade7b53f3d6361c238e830707"
    }
  },
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-05-22T04:25:20.772Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {
      "allowQuery(address,address)": {
        "notice": "Always approve access, ignoring the addresses passed in. Note that this raises solidity compiler warnings about unused variables."
      }
    },
    "notice": "Represents an access control strategy where all requests are accepted."
  }
}