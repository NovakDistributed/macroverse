{
  "contractName": "MRVToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "sendProceedsTo",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sendTokensTo",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "CrowdsaleClose",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "CrowdsaleOpen",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "newDecimals",
          "type": "uint8"
        }
      ],
      "name": "DecimalChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "etherAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "name": "TokenPurchase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closeTimer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxCrowdsaleSupplyInWholeTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openTimer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contractAddr",
          "type": "address"
        }
      ],
      "name": "reclaimContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        }
      ],
      "name": "reclaimToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "tokenFallback",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wholeTokensPerEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wholeTokensReserved",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [],
      "name": "openTimerElapsed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closeTimerElapsed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkOpenTimer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkCloseTimer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isCrowdsaleActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMaxInWholeTokens",
          "type": "uint256"
        }
      ],
      "name": "setMaxSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openCrowdsale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minutesFromNow",
          "type": "uint256"
        }
      ],
      "name": "setCrowdsaleOpenTimerFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clearCrowdsaleOpenTimer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minutesFromNow",
          "type": "uint256"
        }
      ],
      "name": "setCrowdsaleCloseTimerFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clearCrowdsaleCloseTimer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closeCrowdsale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "newDecimals",
          "type": "uint8"
        }
      ],
      "name": "setDecimals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reclaimEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"sendProceedsTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sendTokensTo\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"CrowdsaleClose\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"CrowdsaleOpen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"newDecimals\",\"type\":\"uint8\"}],\"name\":\"DecimalChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"etherAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkCloseTimer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkOpenTimer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearCrowdsaleCloseTimer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearCrowdsaleOpenTimer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeCrowdsale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeTimer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeTimerElapsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isCrowdsaleActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxCrowdsaleSupplyInWholeTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openCrowdsale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTimer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTimerElapsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"reclaimContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reclaimEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"}],\"name\":\"reclaimToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minutesFromNow\",\"type\":\"uint256\"}],\"name\":\"setCrowdsaleCloseTimerFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minutesFromNow\",\"type\":\"uint256\"}],\"name\":\"setCrowdsaleOpenTimerFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"newDecimals\",\"type\":\"uint8\"}],\"name\":\"setDecimals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxInWholeTokens\",\"type\":\"uint256\"}],\"name\":\"setMaxSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wholeTokensPerEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wholeTokensReserved\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"_owner\":\"address The address which owns the funds.\",\"_spender\":\"address The address which will spend the funds. return A uint256 specifing the amount of tokens still avaible for the spender.\"}},\"approve(address,uint256)\":{\"details\":\"Aprove the passed address to spend the specified amount of tokens on behalf of msg.sender.\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"_owner\":\"The address to query the the balance of.  return An uint256 representing the amount owned by the passed address.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"reclaimContract(address)\":{\"details\":\"Reclaim ownership of Ownable contracts\",\"params\":{\"contractAddr\":\"The address of the Ownable to be reclaimed.\"}},\"reclaimToken(address)\":{\"details\":\"Reclaim all IERC20 compatible tokens\",\"params\":{\"tokenAddr\":\"address The address of the token contract\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"tokenFallback(address,uint256,bytes)\":{\"details\":\"Reject all ERC23 compatible tokens\"},\"transfer(address,uint256)\":{\"details\":\"transfer token for a specified address\",\"params\":{\"_to\":\"The address to transfer to.\",\"_value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\",\"params\":{\"_from\":\"address The address which you want to send tokens from\",\"_to\":\"address The address which you want to transfer to\",\"_value\":\"uint256 the amout of tokens to be transfered\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"checkCloseTimer()\":{\"notice\":\"If the close timer has elapsed, stop the crowdsale.\"},\"checkOpenTimer()\":{\"notice\":\"If the open timer has elapsed, start the crowdsale. Can be called by people, but also gets called when people try to contribute.\"},\"clearCrowdsaleCloseTimer()\":{\"notice\":\"Let the owner stop the crowdsale close timer, as long as it has not yet expired.\"},\"clearCrowdsaleOpenTimer()\":{\"notice\":\"Let the owner stop the crowdsale open timer, as long as the crowdsale has not yet opened.\"},\"closeCrowdsale()\":{\"notice\":\"Allow the owner to end the crowdsale manually.\"},\"closeTimerElapsed()\":{\"notice\":\"Determine if the crowdsale should close by timer.\"},\"constructor\":\"Deploy a new MRVToken contract, paying crowdsale proceeds to the given address, and awarding reserved tokens to the other given address.\",\"isCrowdsaleActive()\":{\"notice\":\"Determine if the crowdsale is currently happening.\"},\"openCrowdsale()\":{\"notice\":\"Allow the owner to start the crowdsale manually.\"},\"openTimerElapsed()\":{\"notice\":\"Determine if the crowdsale should open by timer.\"},\"reclaimEther()\":{\"notice\":\"If Ether somehow manages to get into this contract, provide a way to get it out again. During normal crowdsale operation, ETH is immediately forwarded to the beneficiary.\"},\"setCrowdsaleCloseTimerFor(uint256)\":{\"notice\":\"Let the owner start the timer for the crowdsale end. Counts from when the function is called, *not* from the start of the crowdsale. It is possible, but a bad idea, to set this before the open timer.\"},\"setCrowdsaleOpenTimerFor(uint256)\":{\"notice\":\"Let the owner start the timer for the crowdsale start. Without further owner intervention, anyone will be able to open the crowdsale when the timer expires. Further calls will re-set the timer to count from the time the transaction is processed. The timer can be re-set after it has tripped, unless someone has already opened the crowdsale.\"},\"setDecimals(uint8)\":{\"notice\":\"When the crowdsale is finished, the contract owner may adjust the decimal places for display purposes. This should work like a 10-to-1 split or reverse-split. The point of this mechanism is to keep the individual MRV tokens from getting inconveniently valuable or cheap. However, it relies on the contract owner taking the time to update the decimal place value. Note that this changes the decimals IMMEDIATELY with NO NOTICE to users.\"},\"setMaxSupply(uint256)\":{\"notice\":\"Before the crowdsale opens, the max token count can be configured.\"}},\"notice\":\"!!!WARNING!!! Due to breaking changes in OpenZeppelin, THE CODE OF THIS CONTRACT IS SIGNIFICANTLY DIFFERENT FROM THAT WHICH IS ACTUALLY DEPLOYED ON THE MAINNET in order to allow it to build on current Solidity against current OpenZeppelin. Unless I've missed a good way to ship archival bytecode to represent a contract for testing purposes, blame the OZ devs and the Solidity devs and the Truffle devs not talking to each other about a sensible migration system for projects with existing mainnet code deployed that are under active development. MRV token, distributed by crowdsale. Token and crowdsale functionality are unified in a single contract, to make clear and restrict the conditions under which tokens can be created or destroyed. Derived from OpenZeppelin CrowdsaleToken template. Key Crowdsale Facts:  * MRV tokens will be sold at a rate of 5,000 per ETH. * All MRV token sales are final. No refunds can be issued by the contract. * Unless adjusted later by the crowdsale operator, up to 100 million tokens will be available. * An additional 5,000 tokens are reserved.  * Participate in the crowdsale by sending ETH to this contract, when the crowdsale is open. * Sending more ETH than required to purchase all the remaining tokens will fail. * Timers can be set to allow anyone to open/close the crowdsale at the proper time. The crowdsale   operator reserves the right to set, unset, and reset these timers at any time, for any reason,   and without notice. * The operator of the crowdsale has the ability to manually open it and close it, and reserves   the right to do so at any time, for any reason, and without notice. * The crowdsale cannot be reopened, and no tokens can be created, after the crowdsale closes. * The crowdsale operator reserves the right to adjust the decimal places of the MRV token at   any time after the crowdsale closes, for any reason, and without notice. MRV tokens are   initially divisible to 18 decimal places. * The crowdsale operator reserves the right to not open or close the crowdsale, not set the   open or close timer, and generally refrain from doing things that the contract would otherwise   authorize them to do. * The crowdsale operator reserves the right to claim and keep any ETH or tokens that end up in   the contract's account. During normal crowdsale operation, ETH is not stored in the contract's   account, and is instead sent directly to the beneficiary.\"}},\"settings\":{\"compilationTarget\":{\"/home/anovak/workspace/macroverse/contracts/MRVToken.sol\":\"MRVToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/anovak/workspace/macroverse/contracts/HasNoContracts.sol\":{\"keccak256\":\"0xd02f05b2811cdede03d04d4a24dd33da47bf1da87214b9684fb3c056a26e22b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4463d6c8a654d45a2ab593ea7c58db4c9238fb29f1fd01cca1825bb70dbdfb08\",\"dweb:/ipfs/QmQ9gbbpDbrcrSnhUCXzkbgu6wQJFPKsw3p45rP2Djt5Hf\"]},\"/home/anovak/workspace/macroverse/contracts/HasNoTokens.sol\":{\"keccak256\":\"0xf3ea60d506aa95b8d4f9a66d2bfc20d9c133144e782c891df2a926d9d1a0909b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1d88f6a41dc1e634c7cbd060c5971ba5c93b96cfa66a01033b819551a7d12c8\",\"dweb:/ipfs/QmSq65wd32aWKFF9VpPKWJVMsbywJ864Dv6HgNk2GTQ3Nr\"]},\"/home/anovak/workspace/macroverse/contracts/MRVToken.sol\":{\"keccak256\":\"0x319d1d9a259c8ee554ca5629f6aedee72d27a909ab1656c809343fac607e02b8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2d5f1b493af9caf080ada3fd7090cb5b684c1c3b0affc1da3b4b0ed0fc9b9e5a\",\"dweb:/ipfs/QmVXuqPNUDCo8fxHgZZeSAodU5jSnhqq46C41pqe8LMzee\"]},\"/home/anovak/workspace/macroverse/contracts/OZ1BasicToken.sol\":{\"keccak256\":\"0xe1277f49aaede3b00e8f5b2ea57642d7d89310a78c3d9010e4f6efce89485e4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d3e4343428089061aba0f1e72a5b59a9ccc095ed9bea54db62018cf1cbb4904\",\"dweb:/ipfs/Qmd2gWdb6h7vLMS7CfRNxRAoS3ThhAn65Zr1rncZHvqqup\"]},\"/home/anovak/workspace/macroverse/contracts/OZ1ERC20.sol\":{\"keccak256\":\"0x41c529653e4eb48ae27c863fe99813fa6f1ef182fa8c90124efcb5e4ff25f1e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6dc53c8647fd65a0ba124981c45510e017c599e708283eccef7fc38f344ca6d7\",\"dweb:/ipfs/QmWmivY1bwv8szqLvf36M28Hn6Mhvr8M9vQZsvb5zwENAc\"]},\"/home/anovak/workspace/macroverse/contracts/OZ1ERC20Basic.sol\":{\"keccak256\":\"0xd993a56060cd71bd501e0d0cf3471b29f0fcd88cddf6e08882d28fe6b1de37b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e17260ebd2a433f6be36b4554697b9dedc31c82c6d844eec828eaf1248651bd\",\"dweb:/ipfs/QmfDESA3k6f1h7FoMUaRLBVW7E5ALKQ7hnu7H1wMQPAJfc\"]},\"/home/anovak/workspace/macroverse/contracts/OZ1StandardToken.sol\":{\"keccak256\":\"0xb1362dd056705d89ed98808a98b92392630010e2eb0ad853fa321dbb361113b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea8a3a290cefa2f6fbf7626c35fa4bdca6cb869847a5d8ae37dc21f8e59a65b\",\"dweb:/ipfs/Qmf6hHtu3mVvUxPtRiMRP3sTswVjLyQJyBx3NtAqvVqWGi\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600755600060085534801561001a57600080fd5b506040516119c03803806119c08339818101604052604081101561003d57600080fd5b50805160209091015160006100596001600160e01b0361010e16565b600380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600480546001600160a01b0319166001600160a01b039384161790556003805460ff60a01b1916600960a11b17905569010f0cf064dd592000006000818155919092168152600160205260409020556006805461ffff191690556305f5e100600555610112565b3390565b61189f806101216000396000f3fe6080604052600436106101fd5760003560e01c8063715018a61161010d578063983c0a01116100a0578063dd3260fc1161006f578063dd3260fc146106ee578063dd62ed3e14610703578063e330a7371461073e578063ea66363114610768578063f2fde38b1461077d57610241565b8063983c0a01146105f95780639f727c271461060e578063a9059cbb14610623578063c0ee0b8a1461065c57610241565b80638490d598116100dc5780638490d598146104815780638da5cb5b1461059e57806392f351f9146105cf57806395d89b41146105e457610241565b8063715018a61461051d57806379d220ae146105325780637a1395aa1461055c57806380f4531f1461058957610241565b806328ef6f40116101905780634e15dfe91161015f5780634e15dfe9146104815780635da24f90146104965780636d6e2710146104ab5780636f8b44b0146104c057806370a08231146104ea57610241565b806328ef6f40146103f95780632aed7f3f1461040e578063313ce56714610441578063346fc0dd1461046c57610241565b806317ffc320116101cc57806317ffc3201461034757806318160ddd1461037a5780631f4425f3146103a157806323b872dd146103b657610241565b80630118e6861461024657806306fdde031461026f578063095ea7b3146102f95780630d051c521461033257610241565b366102415761020a6107b0565b610212610805565b600654610100900460ff161561022757600080fd5b60065460ff1661023657600080fd5b61023f3361085b565b005b600080fd5b34801561025257600080fd5b5061025b6109a5565b604080519115158252519081900360200190f35b34801561027b57600080fd5b506102846109e3565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102be5781810151838201526020016102a6565b50505050905090810190601f1680156102eb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561030557600080fd5b5061023f6004803603604081101561031c57600080fd5b506001600160a01b038135169060200135610a0f565b34801561033e57600080fd5b5061023f610aac565b34801561035357600080fd5b5061023f6004803603602081101561036a57600080fd5b50356001600160a01b0316610b28565b34801561038657600080fd5b5061038f610c91565b60408051918252519081900360200190f35b3480156103ad57600080fd5b5061023f610805565b3480156103c257600080fd5b5061023f600480360360608110156103d957600080fd5b506001600160a01b03813581169160208101359091169060400135610c97565b34801561040557600080fd5b5061023f610daf565b34801561041a57600080fd5b5061023f6004803603602081101561043157600080fd5b50356001600160a01b0316610e66565b34801561044d57600080fd5b50610456610f3a565b6040805160ff9092168252519081900360200190f35b34801561047857600080fd5b5061038f610f4a565b34801561048d57600080fd5b5061038f610f50565b3480156104a257600080fd5b5061038f610f56565b3480156104b757600080fd5b5061023f610f5c565b3480156104cc57600080fd5b5061023f600480360360208110156104e357600080fd5b5035610fd3565b3480156104f657600080fd5b5061038f6004803603602081101561050d57600080fd5b50356001600160a01b0316611048565b34801561052957600080fd5b5061023f611063565b34801561053e57600080fd5b5061023f6004803603602081101561055557600080fd5b5035611105565b34801561056857600080fd5b5061023f6004803603602081101561057f57600080fd5b503560ff1661117f565b34801561059557600080fd5b5061025b611247565b3480156105aa57600080fd5b506105b3611260565b604080516001600160a01b039092168252519081900360200190f35b3480156105db57600080fd5b5061038f61126f565b3480156105f057600080fd5b50610284611275565b34801561060557600080fd5b5061023f611294565b34801561061a57600080fd5b5061023f611369565b34801561062f57600080fd5b5061023f6004803603604081101561064657600080fd5b506001600160a01b0381351690602001356113f6565b34801561066857600080fd5b5061023f6004803603606081101561067f57600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156106af57600080fd5b8201836020820111156106c157600080fd5b803590602001918460018302840111640100000000831117156106e357600080fd5b509092509050610241565b3480156106fa57600080fd5b5061023f6107b0565b34801561070f57600080fd5b5061038f6004803603604081101561072657600080fd5b506001600160a01b03813581169160200135166114b2565b34801561074a57600080fd5b5061023f6004803603602081101561076157600080fd5b50356114df565b34801561077457600080fd5b5061025b61155e565b34801561078957600080fd5b5061023f600480360360208110156107a057600080fd5b50356001600160a01b0316611577565b6107b861155e565b15610803576006805460ff1916600117905560006007556040805142815290517ff82aa3c8d92a1044b702b0c9718bd99d353a4a85a215bdb4fe6c6a04b5f541e09181900360200190a15b565b61080d611247565b15610803576006805461ff00191661010017905560006008556040805142815290517f99424d4740b41446c45fa894e3dda8489b8ef8df8a37f8035f83053ed26485c19181900360200190a1565b6108636107b0565b61086b610805565b600654610100900460ff161561088057600080fd5b60065460ff1661088f57600080fd5b3461089957600080fd5b60006108ad3461138863ffffffff61167016565b905060006108c6826000546116d090919063ffffffff16565b905060055461138801670de0b6b3a7640000028111156108e557600080fd5b60008181556001600160a01b038416815260016020526040902054610910908363ffffffff6116d016565b6001600160a01b038416600081815260016020908152604091829020939093558051428152349381019390935282810191909152517fd240e127ddfc99c27bdd1c45b264d1954a1e2bdb17a4c37e81586fd1412882619181900360600190a16004546040516001600160a01b03909116903480156108fc02916000818181858888f193505050506109a057600080fd5b505050565b60065460009060ff16806109bc57506109bc61155e565b80156109de5750600654610100900460ff16806109dc57506109dc611247565b155b905090565b6040518060400160405280601081526020016f26b0b1b937bb32b939b2902a37b5b2b760811b81525081565b8015801590610a4057503360009081526002602090815260408083206001600160a01b038616845290915290205415155b15610a4a57600080fd5b3360008181526002602090815260408083206001600160a01b03871680855290835292819020859055805185815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35050565b610ab461172a565b6003546001600160a01b03908116911614610b04576040805162461bcd60e51b8152602060048201819052602482015260008051602061184a833981519152604482015290519081900360640190fd5b610b0c610805565b600654610100900460ff1615610b2157600080fd5b6000600855565b610b3061172a565b6003546001600160a01b03908116911614610b80576040805162461bcd60e51b8152602060048201819052602482015260008051602061184a833981519152604482015290519081900360640190fd5b604080516370a0823160e01b8152306004820152905182916000916001600160a01b038416916370a08231916024808301926020929190829003018186803b158015610bcb57600080fd5b505afa158015610bdf573d6000803e3d6000fd5b505050506040513d6020811015610bf557600080fd5b505190506001600160a01b03821663a9059cbb610c10611260565b836040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610c6057600080fd5b505af1158015610c74573d6000803e3d6000fd5b505050506040513d6020811015610c8a57600080fd5b5050505050565b60005481565b60606064361015610ca757600080fd5b6001600160a01b03808516600090815260026020908152604080832033845282528083205493871683526001909152902054610ce9908463ffffffff6116d016565b6001600160a01b038086166000908152600160205260408082209390935590871681522054610d1e908463ffffffff61172e16565b6001600160a01b038616600090815260016020526040902055610d47818463ffffffff61172e16565b6001600160a01b03808716600081815260026020908152604080832033845282529182902094909455805187815290519288169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35050505050565b610db761172a565b6003546001600160a01b03908116911614610e07576040805162461bcd60e51b8152602060048201819052602482015260008051602061184a833981519152604482015290519081900360640190fd5b610e0f6107b0565b60065460ff1615610e1f57600080fd5b6006805460ff1916600117905560006007556040805142815290517ff82aa3c8d92a1044b702b0c9718bd99d353a4a85a215bdb4fe6c6a04b5f541e09181900360200190a1565b610e6e61172a565b6003546001600160a01b03908116911614610ebe576040805162461bcd60e51b8152602060048201819052602482015260008051602061184a833981519152604482015290519081900360640190fd5b806001600160a01b03811663f2fde38b610ed6611260565b6040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b158015610f1e57600080fd5b505af1158015610f32573d6000803e3d6000fd5b505050505050565b600354600160a01b900460ff1681565b60055481565b61138881565b60085481565b610f6461172a565b6003546001600160a01b03908116911614610fb4576040805162461bcd60e51b8152602060048201819052602482015260008051602061184a833981519152604482015290519081900360640190fd5b610fbc6107b0565b60065460ff1615610fcc57600080fd5b6000600755565b610fdb61172a565b6003546001600160a01b0390811691161461102b576040805162461bcd60e51b8152602060048201819052602482015260008051602061184a833981519152604482015290519081900360640190fd5b6110336107b0565b60065460ff161561104357600080fd5b600555565b6001600160a01b031660009081526001602052604090205490565b61106b61172a565b6003546001600160a01b039081169116146110bb576040805162461bcd60e51b8152602060048201819052602482015260008051602061184a833981519152604482015290519081900360640190fd5b6003546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600380546001600160a01b0319169055565b61110d61172a565b6003546001600160a01b0390811691161461115d576040805162461bcd60e51b8152602060048201819052602482015260008051602061184a833981519152604482015290519081900360640190fd5b6111656107b0565b60065460ff161561117557600080fd5b603c024201600755565b61118761172a565b6003546001600160a01b039081169116146111d7576040805162461bcd60e51b8152602060048201819052602482015260008051602061184a833981519152604482015290519081900360640190fd5b6111df610805565b600654610100900460ff166111f357600080fd5b6003805460ff8316600160a01b810260ff60a01b199092169190911790915560408051918252517fed6150ec960548590c920ded6ef554ec9e451dd7b4c85f62fb3760812cd72cf19181900360200190a150565b60006008546000141580156109de575050600854421190565b6003546001600160a01b031690565b60075481565b6040518060400160405280600381526020016226a92b60e91b81525081565b61129c61172a565b6003546001600160a01b039081169116146112ec576040805162461bcd60e51b8152602060048201819052602482015260008051602061184a833981519152604482015290519081900360640190fd5b6112f46107b0565b6112fc610805565b600654610100900460ff161561131157600080fd5b60065460ff1661132057600080fd5b6006805461ff00191661010017905560006008556040805142815290517f99424d4740b41446c45fa894e3dda8489b8ef8df8a37f8035f83053ed26485c19181900360200190a1565b61137161172a565b6003546001600160a01b039081169116146113c1576040805162461bcd60e51b8152602060048201819052602482015260008051602061184a833981519152604482015290519081900360640190fd5b6113c9611260565b6001600160a01b03166108fc479081150290604051600060405180830381858888f1935050505061080357fe5b6040604436101561140657600080fd5b33600090815260016020526040902054611426908363ffffffff61172e16565b33600090815260016020526040808220929092556001600160a01b03851681522054611458908363ffffffff6116d016565b6001600160a01b0384166000818152600160209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505050565b6001600160a01b038083166000908152600260209081526040808320938516835292905220545b92915050565b6114e761172a565b6003546001600160a01b03908116911614611537576040805162461bcd60e51b8152602060048201819052602482015260008051602061184a833981519152604482015290519081900360640190fd5b61153f610805565b600654610100900460ff161561155457600080fd5b603c024201600855565b60006007546000141580156109de575050600754421190565b61157f61172a565b6003546001600160a01b039081169116146115cf576040805162461bcd60e51b8152602060048201819052602482015260008051602061184a833981519152604482015290519081900360640190fd5b6001600160a01b0381166116145760405162461bcd60e51b81526004018080602001828103825260268152602001806118036026913960400191505060405180910390fd5b6003546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380546001600160a01b0319166001600160a01b0392909216919091179055565b60008261167f575060006114d9565b8282028284828161168c57fe5b04146116c95760405162461bcd60e51b81526004018080602001828103825260218152602001806118296021913960400191505060405180910390fd5b9392505050565b6000828201838110156116c9576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b3390565b60006116c983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250600081848411156117fa5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156117bf5781810151838201526020016117a7565b50505050905090810190601f1680156117ec5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220c8d70a9e1a8e2d359203d93f5e9823cb3ce65d4581a51d1ca0b27cfec7a38f0964736f6c634300060a0033",
  "deployedBytecode": "0x6080604052600436106101fd5760003560e01c8063715018a61161010d578063983c0a01116100a0578063dd3260fc1161006f578063dd3260fc146106ee578063dd62ed3e14610703578063e330a7371461073e578063ea66363114610768578063f2fde38b1461077d57610241565b8063983c0a01146105f95780639f727c271461060e578063a9059cbb14610623578063c0ee0b8a1461065c57610241565b80638490d598116100dc5780638490d598146104815780638da5cb5b1461059e57806392f351f9146105cf57806395d89b41146105e457610241565b8063715018a61461051d57806379d220ae146105325780637a1395aa1461055c57806380f4531f1461058957610241565b806328ef6f40116101905780634e15dfe91161015f5780634e15dfe9146104815780635da24f90146104965780636d6e2710146104ab5780636f8b44b0146104c057806370a08231146104ea57610241565b806328ef6f40146103f95780632aed7f3f1461040e578063313ce56714610441578063346fc0dd1461046c57610241565b806317ffc320116101cc57806317ffc3201461034757806318160ddd1461037a5780631f4425f3146103a157806323b872dd146103b657610241565b80630118e6861461024657806306fdde031461026f578063095ea7b3146102f95780630d051c521461033257610241565b366102415761020a6107b0565b610212610805565b600654610100900460ff161561022757600080fd5b60065460ff1661023657600080fd5b61023f3361085b565b005b600080fd5b34801561025257600080fd5b5061025b6109a5565b604080519115158252519081900360200190f35b34801561027b57600080fd5b506102846109e3565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102be5781810151838201526020016102a6565b50505050905090810190601f1680156102eb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561030557600080fd5b5061023f6004803603604081101561031c57600080fd5b506001600160a01b038135169060200135610a0f565b34801561033e57600080fd5b5061023f610aac565b34801561035357600080fd5b5061023f6004803603602081101561036a57600080fd5b50356001600160a01b0316610b28565b34801561038657600080fd5b5061038f610c91565b60408051918252519081900360200190f35b3480156103ad57600080fd5b5061023f610805565b3480156103c257600080fd5b5061023f600480360360608110156103d957600080fd5b506001600160a01b03813581169160208101359091169060400135610c97565b34801561040557600080fd5b5061023f610daf565b34801561041a57600080fd5b5061023f6004803603602081101561043157600080fd5b50356001600160a01b0316610e66565b34801561044d57600080fd5b50610456610f3a565b6040805160ff9092168252519081900360200190f35b34801561047857600080fd5b5061038f610f4a565b34801561048d57600080fd5b5061038f610f50565b3480156104a257600080fd5b5061038f610f56565b3480156104b757600080fd5b5061023f610f5c565b3480156104cc57600080fd5b5061023f600480360360208110156104e357600080fd5b5035610fd3565b3480156104f657600080fd5b5061038f6004803603602081101561050d57600080fd5b50356001600160a01b0316611048565b34801561052957600080fd5b5061023f611063565b34801561053e57600080fd5b5061023f6004803603602081101561055557600080fd5b5035611105565b34801561056857600080fd5b5061023f6004803603602081101561057f57600080fd5b503560ff1661117f565b34801561059557600080fd5b5061025b611247565b3480156105aa57600080fd5b506105b3611260565b604080516001600160a01b039092168252519081900360200190f35b3480156105db57600080fd5b5061038f61126f565b3480156105f057600080fd5b50610284611275565b34801561060557600080fd5b5061023f611294565b34801561061a57600080fd5b5061023f611369565b34801561062f57600080fd5b5061023f6004803603604081101561064657600080fd5b506001600160a01b0381351690602001356113f6565b34801561066857600080fd5b5061023f6004803603606081101561067f57600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156106af57600080fd5b8201836020820111156106c157600080fd5b803590602001918460018302840111640100000000831117156106e357600080fd5b509092509050610241565b3480156106fa57600080fd5b5061023f6107b0565b34801561070f57600080fd5b5061038f6004803603604081101561072657600080fd5b506001600160a01b03813581169160200135166114b2565b34801561074a57600080fd5b5061023f6004803603602081101561076157600080fd5b50356114df565b34801561077457600080fd5b5061025b61155e565b34801561078957600080fd5b5061023f600480360360208110156107a057600080fd5b50356001600160a01b0316611577565b6107b861155e565b15610803576006805460ff1916600117905560006007556040805142815290517ff82aa3c8d92a1044b702b0c9718bd99d353a4a85a215bdb4fe6c6a04b5f541e09181900360200190a15b565b61080d611247565b15610803576006805461ff00191661010017905560006008556040805142815290517f99424d4740b41446c45fa894e3dda8489b8ef8df8a37f8035f83053ed26485c19181900360200190a1565b6108636107b0565b61086b610805565b600654610100900460ff161561088057600080fd5b60065460ff1661088f57600080fd5b3461089957600080fd5b60006108ad3461138863ffffffff61167016565b905060006108c6826000546116d090919063ffffffff16565b905060055461138801670de0b6b3a7640000028111156108e557600080fd5b60008181556001600160a01b038416815260016020526040902054610910908363ffffffff6116d016565b6001600160a01b038416600081815260016020908152604091829020939093558051428152349381019390935282810191909152517fd240e127ddfc99c27bdd1c45b264d1954a1e2bdb17a4c37e81586fd1412882619181900360600190a16004546040516001600160a01b03909116903480156108fc02916000818181858888f193505050506109a057600080fd5b505050565b60065460009060ff16806109bc57506109bc61155e565b80156109de5750600654610100900460ff16806109dc57506109dc611247565b155b905090565b6040518060400160405280601081526020016f26b0b1b937bb32b939b2902a37b5b2b760811b81525081565b8015801590610a4057503360009081526002602090815260408083206001600160a01b038616845290915290205415155b15610a4a57600080fd5b3360008181526002602090815260408083206001600160a01b03871680855290835292819020859055805185815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35050565b610ab461172a565b6003546001600160a01b03908116911614610b04576040805162461bcd60e51b8152602060048201819052602482015260008051602061184a833981519152604482015290519081900360640190fd5b610b0c610805565b600654610100900460ff1615610b2157600080fd5b6000600855565b610b3061172a565b6003546001600160a01b03908116911614610b80576040805162461bcd60e51b8152602060048201819052602482015260008051602061184a833981519152604482015290519081900360640190fd5b604080516370a0823160e01b8152306004820152905182916000916001600160a01b038416916370a08231916024808301926020929190829003018186803b158015610bcb57600080fd5b505afa158015610bdf573d6000803e3d6000fd5b505050506040513d6020811015610bf557600080fd5b505190506001600160a01b03821663a9059cbb610c10611260565b836040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610c6057600080fd5b505af1158015610c74573d6000803e3d6000fd5b505050506040513d6020811015610c8a57600080fd5b5050505050565b60005481565b60606064361015610ca757600080fd5b6001600160a01b03808516600090815260026020908152604080832033845282528083205493871683526001909152902054610ce9908463ffffffff6116d016565b6001600160a01b038086166000908152600160205260408082209390935590871681522054610d1e908463ffffffff61172e16565b6001600160a01b038616600090815260016020526040902055610d47818463ffffffff61172e16565b6001600160a01b03808716600081815260026020908152604080832033845282529182902094909455805187815290519288169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35050505050565b610db761172a565b6003546001600160a01b03908116911614610e07576040805162461bcd60e51b8152602060048201819052602482015260008051602061184a833981519152604482015290519081900360640190fd5b610e0f6107b0565b60065460ff1615610e1f57600080fd5b6006805460ff1916600117905560006007556040805142815290517ff82aa3c8d92a1044b702b0c9718bd99d353a4a85a215bdb4fe6c6a04b5f541e09181900360200190a1565b610e6e61172a565b6003546001600160a01b03908116911614610ebe576040805162461bcd60e51b8152602060048201819052602482015260008051602061184a833981519152604482015290519081900360640190fd5b806001600160a01b03811663f2fde38b610ed6611260565b6040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b158015610f1e57600080fd5b505af1158015610f32573d6000803e3d6000fd5b505050505050565b600354600160a01b900460ff1681565b60055481565b61138881565b60085481565b610f6461172a565b6003546001600160a01b03908116911614610fb4576040805162461bcd60e51b8152602060048201819052602482015260008051602061184a833981519152604482015290519081900360640190fd5b610fbc6107b0565b60065460ff1615610fcc57600080fd5b6000600755565b610fdb61172a565b6003546001600160a01b0390811691161461102b576040805162461bcd60e51b8152602060048201819052602482015260008051602061184a833981519152604482015290519081900360640190fd5b6110336107b0565b60065460ff161561104357600080fd5b600555565b6001600160a01b031660009081526001602052604090205490565b61106b61172a565b6003546001600160a01b039081169116146110bb576040805162461bcd60e51b8152602060048201819052602482015260008051602061184a833981519152604482015290519081900360640190fd5b6003546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600380546001600160a01b0319169055565b61110d61172a565b6003546001600160a01b0390811691161461115d576040805162461bcd60e51b8152602060048201819052602482015260008051602061184a833981519152604482015290519081900360640190fd5b6111656107b0565b60065460ff161561117557600080fd5b603c024201600755565b61118761172a565b6003546001600160a01b039081169116146111d7576040805162461bcd60e51b8152602060048201819052602482015260008051602061184a833981519152604482015290519081900360640190fd5b6111df610805565b600654610100900460ff166111f357600080fd5b6003805460ff8316600160a01b810260ff60a01b199092169190911790915560408051918252517fed6150ec960548590c920ded6ef554ec9e451dd7b4c85f62fb3760812cd72cf19181900360200190a150565b60006008546000141580156109de575050600854421190565b6003546001600160a01b031690565b60075481565b6040518060400160405280600381526020016226a92b60e91b81525081565b61129c61172a565b6003546001600160a01b039081169116146112ec576040805162461bcd60e51b8152602060048201819052602482015260008051602061184a833981519152604482015290519081900360640190fd5b6112f46107b0565b6112fc610805565b600654610100900460ff161561131157600080fd5b60065460ff1661132057600080fd5b6006805461ff00191661010017905560006008556040805142815290517f99424d4740b41446c45fa894e3dda8489b8ef8df8a37f8035f83053ed26485c19181900360200190a1565b61137161172a565b6003546001600160a01b039081169116146113c1576040805162461bcd60e51b8152602060048201819052602482015260008051602061184a833981519152604482015290519081900360640190fd5b6113c9611260565b6001600160a01b03166108fc479081150290604051600060405180830381858888f1935050505061080357fe5b6040604436101561140657600080fd5b33600090815260016020526040902054611426908363ffffffff61172e16565b33600090815260016020526040808220929092556001600160a01b03851681522054611458908363ffffffff6116d016565b6001600160a01b0384166000818152600160209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505050565b6001600160a01b038083166000908152600260209081526040808320938516835292905220545b92915050565b6114e761172a565b6003546001600160a01b03908116911614611537576040805162461bcd60e51b8152602060048201819052602482015260008051602061184a833981519152604482015290519081900360640190fd5b61153f610805565b600654610100900460ff161561155457600080fd5b603c024201600855565b60006007546000141580156109de575050600754421190565b61157f61172a565b6003546001600160a01b039081169116146115cf576040805162461bcd60e51b8152602060048201819052602482015260008051602061184a833981519152604482015290519081900360640190fd5b6001600160a01b0381166116145760405162461bcd60e51b81526004018080602001828103825260268152602001806118036026913960400191505060405180910390fd5b6003546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380546001600160a01b0319166001600160a01b0392909216919091179055565b60008261167f575060006114d9565b8282028284828161168c57fe5b04146116c95760405162461bcd60e51b81526004018080602001828103825260218152602001806118296021913960400191505060405180910390fd5b9392505050565b6000828201838110156116c9576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b3390565b60006116c983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250600081848411156117fa5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156117bf5781810151838201526020016117a7565b50505050905090810190601f1680156117ec5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220c8d70a9e1a8e2d359203d93f5e9823cb3ce65d4581a51d1ca0b27cfec7a38f0964736f6c634300060a0033",
  "immutableReferences": {},
  "sourceMap": "2758:11266:5:-:0;;;4280:1;4256:25;;4434:1;4409:26;;4648:684;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4648:684:5;;;;;;;865:17:30;885:12;-1:-1:-1;;;;;885:10:30;:12;:::i;:::-;907:6;:18;;-1:-1:-1;;;;;;907:18:30;-1:-1:-1;;;;;907:18:30;;;;;;;;940:43;;907:18;;-1:-1:-1;907:18:30;-1:-1:-1;;940:43:30;;-1:-1:-1;;940:43:30;-1:-1:-1;4777:11:5;:28;;-1:-1:-1;;;;;;4777:28:5;-1:-1:-1;;;;;4777:28:5;;;;;;4871:8;:13;;-1:-1:-1;;;;4871:13:5;-1:-1:-1;;;4871:13:5;;;4988:30;-1:-1:-1;4974:44:5;;;5028:22;;;;;;-1:-1:-1;5028:22:5;;;;;:36;5148:16;:24;;-1:-1:-1;;5182:22:5;;;5316:9;5282:31;:43;2758:11266;;590:104:29;677:10;590:104;:::o;2758:11266:5:-;;;;;;;",
  "deployedSourceMap": "2758:11266:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7501:16;:14;:16::i;:::-;7527:17;:15;:17::i;:::-;7558:14;;;;;;;7554:28;;;7574:8;;;7554:28;7597:16;;;;7592:31;;7615:8;;;7592:31;6109:24:::1;6122:10;6109:12;:24::i;:::-;2758:11266:::0;;;;;8798:271;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2977:48;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1298:523:23;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1298:523:23;;;;;;;;:::i;10900:101:5:-;;;;;;;;;;;;;:::i;786:207:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;786:207:4;-1:-1:-1;;;;;786:207:4;;:::i;174:26:22:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8527:187:5;;;;;;;;;;;;;:::i;566:501:23:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;566:501:23;;;;;;;;;;;;;;;;;:::i;9465:155:5:-;;;;;;;;;;;;;:::i;517:166:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;517:166:2;-1:-1:-1;;;;;517:166:2;;:::i;3349:21:5:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3561:43;;;;;;;;;;;;;:::i;3779:45::-;;;;;;;;;;;;;:::i;4409:26::-;;;;;;;;;;;;;:::i;10288:99::-;;;;;;;;;;;;;:::i;9231:152::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9231:152:5;;:::i;1095:116:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1095:116:20;-1:-1:-1;;;;;1095:116:20;;:::i;1689:145:30:-;;;;;;;;;;;;;:::i;10015:150:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10015:150:5;;:::i;13376:215::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13376:215:5;;;;:::i;7971:117::-;;;;;;;;;;;;;:::i;1066:77:30:-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1066:77:30;;;;;;;;;;;;;;4256:25:5;;;;;;;;;;;;;:::i;3068:37::-;;;;;;;;;;;;;:::i;12652:159::-;;;;;;;;;;;;;:::i;13802:219::-;;;;;;;;;;;;;:::i;654:239:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;654:239:20;;;;;;;;:::i;532:127:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;532:127:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;532:127:4;;-1:-1:-1;532:127:4;-1:-1:-1;532:127:4;:::i;8257:185:5:-;;;;;;;;;;;;;:::i;2136:145:23:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2136:145:23;;;;;;;;;;:::i;10634:152:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10634:152:5;;:::i;7774:114::-;;;;;;;;;;;;;:::i;1983:240:30:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1983:240:30;-1:-1:-1;;;;;1983:240:30;;:::i;8257:185:5:-;8304:18;:16;:18::i;:::-;8300:136;;;8338:16;:23;;-1:-1:-1;;8338:23:5;8357:4;8338:23;;;:16;8375:9;:13;8407:18;;;8421:3;8407:18;;;;;;;;;;;;;8300:136;8257:185::o;8527:187::-;8575:19;:17;:19::i;:::-;8571:137;;;8610:14;:21;;-1:-1:-1;;8610:21:5;;;;;;8645:10;:14;8678:19;;;8693:3;8678:19;;;;;;;;;;;;;8527:187::o;11266:1306::-;7501:16;:14;:16::i;:::-;7527:17;:15;:17::i;:::-;7558:14;;;;;;;7554:28;;;7574:8;;;7554:28;7597:16;;;;7592:31;;7615:8;;;7592:31;11350:9:::1;11346:53;;11380:8;::::0;::::1;11346:53;11409:11;11423:32;:9;3820:4;11423:32;:13;:32;:::i;:::-;11409:46;;11531:22;11556:23;11572:6;11556:11;;:15;;:23;;;;:::i;:::-;11531:48;;11642:31;;3716:4;11620:53;11677:8;11619:66;11602:14;:83;11598:234;;;11813:8;::::0;::::1;11598:234;12085:11;:28:::0;;;-1:-1:-1;;;;;12145:19:5;::::1;::::0;;:8:::1;:19;::::0;;;;;:31:::1;::::0;12169:6;12145:31:::1;:23;:31;:::i;:::-;-1:-1:-1::0;;;;;12123:19:5;::::1;;::::0;;;:8:::1;:19;::::0;;;;;;;;:53;;;;12233:40;;12247:3:::1;12233:40:::0;;12252:9:::1;12233:40:::0;;::::1;::::0;;;;;;;;;;;;::::1;::::0;;;;;;;::::1;12504:11;::::0;:27:::1;::::0;-1:-1:-1;;;;;12504:11:5;;::::1;::::0;12521:9:::1;12504:27:::0;::::1;;;::::0;:11:::1;:27:::0;:11;:27;12521:9;12504:11;:27;::::1;;;;;;12499:67;;12547:8;::::0;::::1;12499:67;7633:1;;11266:1306:::0;:::o;8798:271::-;8978:16;;8848:4;;8978:16;;;:38;;;8998:18;:16;:18::i;:::-;8977:84;;;;-1:-1:-1;9023:14:5;;;;;;;;:37;;;9041:19;:17;:19::i;:::-;9021:40;8977:84;8969:93;;8798:271;:::o;2977:48::-;;;;;;;;;;;;;;-1:-1:-1;;;2977:48:5;;;;:::o;1298:523:23:-;1665:11;;;;;1664:53;;-1:-1:-1;1690:10:23;1682:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;1682:29:23;;;;;;;;;;:34;;1664:53;1660:67;;;1719:8;;;1660:67;1742:10;1734:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;1734:29:23;;;;;;;;;;;;:38;;;1778;;;;;;;1734:29;;1742:10;1778:38;;;;;;;;;;;1298:523;;:::o;10900:101:5:-;1280:12:30;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:30;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:30;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:30;;;;;;;;;;;;;;;6804:17:5::1;:15;:17::i;:::-;6835:14;::::0;::::1;::::0;::::1;;;6831:28;;;6851:8;::::0;::::1;6831:28;10993:1:::2;10980:10;:14:::0;10900:101::o;786:207:4:-;1280:12:30;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:30;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:30;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:30;;;;;;;;;;;;;;;912:34:4::1;::::0;;-1:-1:-1;;;912:34:4;;940:4:::1;912:34;::::0;::::1;::::0;;;878:9;;852:16:::1;::::0;-1:-1:-1;;;;;912:19:4;::::1;::::0;::::1;::::0;:34;;;;;::::1;::::0;;;;;;;;:19;:34;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;912:34:4;;-1:-1:-1;;;;;;952:18:4;::::1;;971:7;:5;:7::i;:::-;980;952:36;;;;;;;;;;;;;-1:-1:-1::0;;;;;952:36:4::1;-1:-1:-1::0;;;;;952:36:4::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;;;;786:207:4:o;174:26:22:-;;;;:::o;566:501:23:-;664:6;453:8:20;435;:26;432:56;;;472:8;;;432:56;-1:-1:-1;;;;;699:14:23;;::::1;678:18;699:14:::0;;;:7:::1;:14;::::0;;;;;;;714:10:::1;699:26:::0;;;;;;;;895:13;;::::1;::::0;;:8:::1;:13:::0;;;;;;:25:::1;::::0;913:6;895:25:::1;:17;:25;:::i;:::-;-1:-1:-1::0;;;;;879:13:23;;::::1;;::::0;;;:8:::1;:13;::::0;;;;;:41;;;;944:15;;::::1;::::0;;;;:27:::1;::::0;964:6;944:27:::1;:19;:27;:::i;:::-;-1:-1:-1::0;;;;;926:15:23;::::1;;::::0;;;:8:::1;:15;::::0;;;;:45;1006:22:::1;:10:::0;1021:6;1006:22:::1;:14;:22;:::i;:::-;-1:-1:-1::0;;;;;977:14:23;;::::1;;::::0;;;:7:::1;:14;::::0;;;;;;;992:10:::1;977:26:::0;;;;;;;;:51;;;;1034:28;;;;;;;;;::::1;::::0;977:14;;1034:28:::1;::::0;;;;;;;;;::::1;494:1:20;566:501:23::0;;;;:::o;9465:155:5:-;1280:12:30;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:30;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:30;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:30;;;;;;;;;;;;;;;7248:16:5::1;:14;:16::i;:::-;7278;::::0;::::1;;7274:30;;;7296:8;::::0;::::1;7274:30;9534:16:::2;:23:::0;;-1:-1:-1;;9534:23:5::2;9553:4;9534:23;::::0;;:16:::2;9567:9;:13:::0;9595:18:::2;::::0;;9609:3:::2;9595:18:::0;;;;::::2;::::0;;;;::::2;::::0;;::::2;9465:155::o:0;517:166:2:-;1280:12:30;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:30;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:30;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:30;;;;;;;;;;;;;;;620:12:2;-1:-1:-1;;;;;639:30:2;::::1;;670:7;:5;:7::i;:::-;639:39;;;;;;;;;;;;;-1:-1:-1::0;;;;;639:39:2::1;-1:-1:-1::0;;;;;639:39:2::1;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1339:1:30;517:166:2::0;:::o;3349:21:5:-;;;-1:-1:-1;;;3349:21:5;;;;;:::o;3561:43::-;;;;:::o;3779:45::-;3820:4;3779:45;:::o;4409:26::-;;;;:::o;10288:99::-;1280:12:30;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:30;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:30;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:30;;;;;;;;;;;;;;;7248:16:5::1;:14;:16::i;:::-;7278;::::0;::::1;;7274:30;;;7296:8;::::0;::::1;7274:30;10379:1:::2;10367:9;:13:::0;10288:99::o;9231:152::-;1280:12:30;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:30;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:30;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:30;;;;;;;;;;;;;;;7248:16:5::1;:14;:16::i;:::-;7278;::::0;::::1;;7274:30;;;7296:8;::::0;::::1;7274:30;9323:31:::2;:53:::0;9231:152::o;1095:116:20:-;-1:-1:-1;;;;;1190:16:20;1160:15;1190:16;;;:8;:16;;;;;;;1095:116::o;1689:145:30:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:30;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:30;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:30;;;;;;;;;;;;;;;1779:6:::1;::::0;1758:40:::1;::::0;1795:1:::1;::::0;-1:-1:-1;;;;;1779:6:30::1;::::0;1758:40:::1;::::0;1795:1;;1758:40:::1;1808:6;:19:::0;;-1:-1:-1;;;;;;1808:19:30::1;::::0;;1689:145::o;10015:150:5:-;1280:12:30;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:30;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:30;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:30;;;;;;;;;;;;;;;7248:16:5::1;:14;:16::i;:::-;7278;::::0;::::1;;7274:30;;;7296:8;::::0;::::1;7274:30;10149:9:::2;10132:26;10126:3;:32;10114:9;:44:::0;10015:150::o;13376:215::-;1280:12:30;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:30;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:30;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:30;;;;;;;;;;;;;;;7052:17:5::1;:15;:17::i;:::-;7084:14;::::0;::::1;::::0;::::1;;;7079:29;;7100:8;::::0;::::1;7079:29;13490:8:::2;:22:::0;;::::2;::::0;::::2;-1:-1:-1::0;;;13490:22:5;::::2;-1:-1:-1::0;;;;13490:22:5;;::::2;::::0;;;::::2;::::0;;;13558:26:::2;::::0;;;;;;::::2;::::0;;;;::::2;::::0;;::::2;13376:215:::0;:::o;7971:117::-;8021:4;8045:10;;8059:1;8045:15;;:35;;;;-1:-1:-1;;8070:10:5;;8064:3;:16;;7971:117::o;1066:77:30:-;1130:6;;-1:-1:-1;;;;;1130:6:30;1066:77;:::o;4256:25:5:-;;;;:::o;3068:37::-;;;;;;;;;;;;;;-1:-1:-1;;;3068:37:5;;;;:::o;12652:159::-;1280:12:30;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:30;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:30;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:30;;;;;;;;;;;;;;;7501:16:5::1;:14;:16::i;:::-;7527:17;:15;:17::i;:::-;7558:14;::::0;::::1;::::0;::::1;;;7554:28;;;7574:8;::::0;::::1;7554:28;7597:16;::::0;::::1;;7592:31;;7615:8;::::0;::::1;7592:31;12725:14:::2;:21:::0;;-1:-1:-1;;12725:21:5::2;;;::::0;;;12756:10:::2;:14:::0;12785:19:::2;::::0;;12800:3:::2;12785:19:::0;;;;::::2;::::0;;;;::::2;::::0;;::::2;12652:159::o:0;13802:219::-;1280:12:30;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:30;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:30;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:30;;;;;;;;;;;;;;;13976:7:5::1;:5;:7::i;:::-;-1:-1:-1::0;;;;;13960:30:5::1;:53;13991:21;13960:53;;;;;;;;;;;;;;;;;;;;;;;13953:61;;;654:239:20::0;733:6;453:8;435;:26;432:56;;;472:8;;;432:56;779:10:::1;770:20;::::0;;;:8:::1;:20;::::0;;;;;:32:::1;::::0;795:6;770:32:::1;:24;:32;:::i;:::-;756:10;747:20;::::0;;;:8:::1;:20;::::0;;;;;:55;;;;-1:-1:-1;;;;;824:13:20;::::1;::::0;;;;:25:::1;::::0;842:6;824:25:::1;:17;:25;:::i;:::-;-1:-1:-1::0;;;;;808:13:20;::::1;;::::0;;;:8:::1;:13;::::0;;;;;;;;:41;;;;855:33;;;;;;;808:13;;864:10:::1;::::0;855:33:::1;::::0;;;;;;;;::::1;654:239:::0;;;:::o;2136:145:23:-;-1:-1:-1;;;;;2251:15:23;;;2219:17;2251:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;2136:145;;;;;:::o;10634:152:5:-;1280:12:30;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:30;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:30;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:30;;;;;;;;;;;;;;;6804:17:5::1;:15;:17::i;:::-;6835:14;::::0;::::1;::::0;::::1;;;6831:28;;;6851:8;::::0;::::1;6831:28;10770:9:::2;10753:26;10747:3;:32;10734:10;:45:::0;10634:152::o;7774:114::-;7823:4;7847:9;;7860:1;7847:14;;:33;;;;-1:-1:-1;;7871:9:5;;7865:3;:15;;7774:114::o;1983:240:30:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:30;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:30;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:30;;;;;;;;;;;;;;;-1:-1:-1;;;;;2071:22:30;::::1;2063:73;;;;-1:-1:-1::0;;;2063:73:30::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2172:6;::::0;2151:38:::1;::::0;-1:-1:-1;;;;;2151:38:30;;::::1;::::0;2172:6:::1;::::0;2151:38:::1;::::0;2172:6:::1;::::0;2151:38:::1;2199:6;:17:::0;;-1:-1:-1;;;;;;2199:17:30::1;-1:-1:-1::0;;;;;2199:17:30;;;::::1;::::0;;;::::1;::::0;;1983:240::o;2180:459:33:-;2238:7;2479:6;2475:45;;-1:-1:-1;2508:1:33;2501:8;;2475:45;2542:5;;;2546:1;2542;:5;:1;2565:5;;;;;:10;2557:56;;;;-1:-1:-1;;;2557:56:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2631:1;2180:459;-1:-1:-1;;;2180:459:33:o;874:176::-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:33;;;;;;;;;;;;;;;;;;;;;;;;;;;590:104:29;677:10;590:104;:::o;1321:134:33:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:33;;;1746:187::o",
  "source": "pragma solidity ^0.6.10;\n\n\nimport \"openzeppelin-solidity/contracts/access/Ownable.sol\";\nimport \"./HasNoTokens.sol\";\nimport \"./HasNoContracts.sol\";\nimport \"./OZ1StandardToken.sol\";\n\n\n/**\n *\n * !!!WARNING!!! Due to breaking changes in OpenZeppelin, THE CODE OF THIS\n * CONTRACT IS SIGNIFICANTLY DIFFERENT FROM THAT WHICH IS ACTUALLY DEPLOYED ON\n * THE MAINNET in order to allow it to build on current Solidity against\n * current OpenZeppelin. Unless I've missed a good way to ship archival\n * bytecode to represent a contract for testing purposes, blame the OZ devs and\n * the Solidity devs and the Truffle devs not talking to each other about a\n * sensible migration system for projects with existing mainnet code deployed\n * that are under active development.\n *\n * MRV token, distributed by crowdsale. Token and crowdsale functionality are unified in a single\n * contract, to make clear and restrict the conditions under which tokens can be created or destroyed.\n * Derived from OpenZeppelin CrowdsaleToken template.\n *\n * Key Crowdsale Facts:\n * \n * * MRV tokens will be sold at a rate of 5,000 per ETH.\n *\n * * All MRV token sales are final. No refunds can be issued by the contract.\n *\n * * Unless adjusted later by the crowdsale operator, up to 100 million tokens will be available.\n *\n * * An additional 5,000 tokens are reserved. \n *\n * * Participate in the crowdsale by sending ETH to this contract, when the crowdsale is open.\n *\n * * Sending more ETH than required to purchase all the remaining tokens will fail.\n *\n * * Timers can be set to allow anyone to open/close the crowdsale at the proper time. The crowdsale\n *   operator reserves the right to set, unset, and reset these timers at any time, for any reason,\n *   and without notice.\n *\n * * The operator of the crowdsale has the ability to manually open it and close it, and reserves\n *   the right to do so at any time, for any reason, and without notice.\n *\n * * The crowdsale cannot be reopened, and no tokens can be created, after the crowdsale closes.\n *\n * * The crowdsale operator reserves the right to adjust the decimal places of the MRV token at\n *   any time after the crowdsale closes, for any reason, and without notice. MRV tokens are\n *   initially divisible to 18 decimal places.\n *\n * * The crowdsale operator reserves the right to not open or close the crowdsale, not set the\n *   open or close timer, and generally refrain from doing things that the contract would otherwise\n *   authorize them to do.\n *\n * * The crowdsale operator reserves the right to claim and keep any ETH or tokens that end up in\n *   the contract's account. During normal crowdsale operation, ETH is not stored in the contract's\n *   account, and is instead sent directly to the beneficiary.\n */\ncontract MRVToken is OZ1StandardToken, Ownable, HasNoTokens, HasNoContracts {\n\n    // Token Parameters\n\n    // From StandardToken we inherit balances and totalSupply.\n    \n    // What is the full name of the token?\n    string public constant name = \"Macroverse Token\";\n    // What is its suggested symbol?\n    string public constant symbol = \"MRV\";\n    // How many of the low base-10 digits are to the right of the decimal point?\n    // Note that this is not constant! After the crowdsale, the contract owner can\n    // adjust the decimal places, allowing for 10-to-1 splits and merges.\n    uint8 public decimals;\n    \n    // Crowdsale Parameters\n    \n    // Where will funds collected during the crowdsale be sent?\n    address payable beneficiary;\n    // How many MRV can be sold in the crowdsale?\n    uint public maxCrowdsaleSupplyInWholeTokens;\n    // How many whole tokens are reserved for the beneficiary?\n    uint public constant wholeTokensReserved = 5000;\n    // How many tokens per ETH during the crowdsale?\n    uint public constant wholeTokensPerEth = 5000;\n    \n    // Set to true when the crowdsale starts\n    // Internal flag. Use isCrowdsaleActive instead().\n    bool crowdsaleStarted;\n    // Set to true when the crowdsale ends\n    // Internal flag. Use isCrowdsaleActive instead().\n    bool crowdsaleEnded;\n    // We can also set some timers to open and close the crowdsale. 0 = timer is not set.\n    // After this time, the crowdsale will open with a call to checkOpenTimer().\n    uint public openTimer = 0;\n    // After this time, no contributions will be accepted, and the crowdsale will close with a call to checkCloseTimer().\n    uint public closeTimer = 0;\n    \n    //\n    // Constructor\n    //\n    \n    /**\n    * Deploy a new MRVToken contract, paying crowdsale proceeds to the given address,\n    * and awarding reserved tokens to the other given address.\n    */\n    constructor(address payable sendProceedsTo, address sendTokensTo) public {\n        // Proceeds of the crowdsale go here.\n        beneficiary = sendProceedsTo;\n        \n        // Start with 18 decimals, same as ETH\n        decimals = 18;\n        \n        // Initially, the reserved tokens belong to the given address.\n        totalSupply = wholeTokensReserved * 10 ** 18;\n        balances[sendTokensTo] = totalSupply;\n        \n        // Initially the crowdsale has not yet started or ended.\n        crowdsaleStarted = false;\n        crowdsaleEnded = false;\n        // Default to a max supply of 100 million tokens available.\n        maxCrowdsaleSupplyInWholeTokens = 100000000;\n    }\n    \n    //\n    // Receive function\n    //\n    \n    /**\n    * This is the MAIN CROWDSALE ENTRY POINT. You participate in the crowdsale by \n    * sending ETH to this contract. That calls this function, which credits tokens\n    * to the address or contract that sent the ETH.\n    *\n    * Since MRV tokens are sold at a rate of more than one per ether, and since\n    * they, like ETH, have 18 decimal places (at the time of sale), any fractional\n    * amount of ETH should be handled safely.\n    *\n    * Note that all orders are fill-or-kill. If you send in more ether than there are\n    * tokens remaining to be bought, your transaction will be rolled back and you will\n    * get no tokens and waste your gas.\n    */\n    receive() external payable onlyDuringCrowdsale {\n        createTokens(msg.sender);\n    }\n    \n    //\n    // Events\n    //\n    \n    // Fired when the crowdsale is recorded as started.\n    event CrowdsaleOpen(uint time);\n    // Fired when someone contributes to the crowdsale and buys MRV\n    event TokenPurchase(uint time, uint etherAmount, address from);\n    // Fired when the crowdsale is recorded as ended.\n    event CrowdsaleClose(uint time);\n    // Fired when the decimal point moves\n    event DecimalChange(uint8 newDecimals);\n    \n    //\n    // Modifiers (encoding important crowdsale logic)\n    //\n    \n    /**\n     * Only allow some actions before the crowdsale closes, whether it's open or not.\n     */\n    modifier onlyBeforeClosed {\n        checkCloseTimer();\n        if (crowdsaleEnded) revert();\n        _;\n    }\n    \n    /**\n     * Only allow some actions after the crowdsale is over.\n     * Will set the crowdsale closed if it should be.\n     */\n    modifier onlyAfterClosed {\n        checkCloseTimer();\n        if (!crowdsaleEnded) revert();\n        _;\n    }\n    \n    /**\n     * Only allow some actions before the crowdsale starts.\n     */\n    modifier onlyBeforeOpened {\n        checkOpenTimer();\n        if (crowdsaleStarted) revert();\n        _;\n    }\n    \n    /**\n     * Only allow some actions while the crowdsale is active.\n     * Will set the crowdsale open if it should be.\n     */\n    modifier onlyDuringCrowdsale {\n        checkOpenTimer();\n        checkCloseTimer();\n        if (crowdsaleEnded) revert();\n        if (!crowdsaleStarted) revert();\n        _;\n    }\n\n    //\n    // Status and utility functions\n    //\n    \n    /**\n     * Determine if the crowdsale should open by timer.\n     */\n    function openTimerElapsed() public view returns (bool) {\n        return (openTimer != 0 && now > openTimer);\n    }\n    \n    /**\n     * Determine if the crowdsale should close by timer.\n     */\n    function closeTimerElapsed() public view returns (bool) {\n        return (closeTimer != 0 && now > closeTimer);\n    }\n    \n    /**\n     * If the open timer has elapsed, start the crowdsale.\n     * Can be called by people, but also gets called when people try to contribute.\n     */\n    function checkOpenTimer() public {\n        if (openTimerElapsed()) {\n            crowdsaleStarted = true;\n            openTimer = 0;\n            emit CrowdsaleOpen(now);\n        }\n    }\n    \n    /**\n     * If the close timer has elapsed, stop the crowdsale.\n     */\n    function checkCloseTimer() public {\n        if (closeTimerElapsed()) {\n            crowdsaleEnded = true;\n            closeTimer = 0;\n            emit CrowdsaleClose(now);\n        }\n    }\n    \n    /**\n     * Determine if the crowdsale is currently happening.\n     */\n    function isCrowdsaleActive() public view returns (bool) {\n        // The crowdsale is happening if it is open or due to open, and it isn't closed or due to close.\n        return ((crowdsaleStarted || openTimerElapsed()) && !(crowdsaleEnded || closeTimerElapsed()));\n    }\n    \n    //\n    // Before the crowdsale: configuration\n    //\n    \n    /**\n     * Before the crowdsale opens, the max token count can be configured.\n     */\n    function setMaxSupply(uint newMaxInWholeTokens) public onlyOwner onlyBeforeOpened {\n        maxCrowdsaleSupplyInWholeTokens = newMaxInWholeTokens;\n    }\n    \n    /**\n     * Allow the owner to start the crowdsale manually.\n     */\n    function openCrowdsale() public onlyOwner onlyBeforeOpened {\n        crowdsaleStarted = true;\n        openTimer = 0;\n        emit CrowdsaleOpen(now);\n    }\n    \n    /**\n     * Let the owner start the timer for the crowdsale start. Without further owner intervention,\n     * anyone will be able to open the crowdsale when the timer expires.\n     * Further calls will re-set the timer to count from the time the transaction is processed.\n     * The timer can be re-set after it has tripped, unless someone has already opened the crowdsale.\n     */\n    function setCrowdsaleOpenTimerFor(uint minutesFromNow) public onlyOwner onlyBeforeOpened {\n        openTimer = now + minutesFromNow * 1 minutes;\n    }\n    \n    /**\n     * Let the owner stop the crowdsale open timer, as long as the crowdsale has not yet opened.\n     */\n    function clearCrowdsaleOpenTimer() public onlyOwner onlyBeforeOpened {\n        openTimer = 0;\n    }\n    \n    /**\n     * Let the owner start the timer for the crowdsale end. Counts from when the function is called,\n     * *not* from the start of the crowdsale.\n     * It is possible, but a bad idea, to set this before the open timer.\n     */\n    function setCrowdsaleCloseTimerFor(uint minutesFromNow) public onlyOwner onlyBeforeClosed {\n        closeTimer = now + minutesFromNow * 1 minutes;\n    }\n    \n    /**\n     * Let the owner stop the crowdsale close timer, as long as it has not yet expired.\n     */\n    function clearCrowdsaleCloseTimer() public onlyOwner onlyBeforeClosed {\n        closeTimer = 0;\n    }\n    \n    \n    //\n    // During the crowdsale\n    //\n    \n    /**\n     * Create tokens for the given address, in response to a payment.\n     * Cannot be called by outside callers; use the fallback function, which will create tokens for whoever pays it.\n     */\n    function createTokens(address recipient) internal onlyDuringCrowdsale {\n        if (msg.value == 0) {\n            revert();\n        }\n\n        uint tokens = msg.value.mul(wholeTokensPerEth); // Exploits the fact that we have 18 decimals, like ETH.\n        \n        uint256 newTotalSupply = totalSupply.add(tokens);\n        \n        if (newTotalSupply > (wholeTokensReserved + maxCrowdsaleSupplyInWholeTokens) * 10 ** 18) {\n            // This would be too many tokens issued.\n            // Don't mess around with partial order fills.\n            revert();\n        }\n        \n        // Otherwise, we can fill the order entirely, so make the tokens and put them in the specified account.\n        // POST-DEPLOY NOTE: This does not emit transfer events for minted tokens, which confuses some blockchain viewers.\n        totalSupply = newTotalSupply;\n        balances[recipient] = balances[recipient].add(tokens);\n        \n        // Announce the purchase\n        emit TokenPurchase(now, msg.value, recipient);\n\n        // Lastly (after all state changes), send the money to the crowdsale beneficiary.\n        // This allows the crowdsale contract itself not to hold any ETH.\n        // It also means that ALL SALES ARE FINAL!\n        if (!beneficiary.send(msg.value)) {\n            revert();\n        }\n    }\n    \n    /**\n     * Allow the owner to end the crowdsale manually.\n     */\n    function closeCrowdsale() public onlyOwner onlyDuringCrowdsale {\n        crowdsaleEnded = true;\n        closeTimer = 0;\n        emit CrowdsaleClose(now);\n    }  \n    \n    //\n    // After the crowdsale: token maintainance\n    //\n    \n    /**\n     * When the crowdsale is finished, the contract owner may adjust the decimal places for display purposes.\n     * This should work like a 10-to-1 split or reverse-split.\n     * The point of this mechanism is to keep the individual MRV tokens from getting inconveniently valuable or cheap.\n     * However, it relies on the contract owner taking the time to update the decimal place value.\n     * Note that this changes the decimals IMMEDIATELY with NO NOTICE to users.\n     */\n    function setDecimals(uint8 newDecimals) public onlyOwner onlyAfterClosed {\n        // Change the decimals\n        decimals = newDecimals;\n        // Announce the change\n        emit DecimalChange(newDecimals);\n    }\n    \n    /**\n     * If Ether somehow manages to get into this contract, provide a way to get it out again.\n     * During normal crowdsale operation, ETH is immediately forwarded to the beneficiary.\n     */\n    function reclaimEther() external onlyOwner {\n        // Send the ETH. Make sure it worked.\n        // Go through uint160 to make owner payable\n        assert(address(uint160(owner())).send(address(this).balance));\n    }\n\n}\n\n// SPDX-License-Identifier: UNLICENSED\n",
  "sourcePath": "/home/anovak/workspace/macroverse/contracts/MRVToken.sol",
  "ast": {
    "absolutePath": "/home/anovak/workspace/macroverse/contracts/MRVToken.sol",
    "exportedSymbols": {
      "MRVToken": [
        724
      ]
    },
    "id": 725,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 204,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "id": 205,
        "nodeType": "ImportDirective",
        "scope": 725,
        "sourceUnit": 11136,
        "src": "27:60:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/anovak/workspace/macroverse/contracts/HasNoTokens.sol",
        "file": "./HasNoTokens.sol",
        "id": 206,
        "nodeType": "ImportDirective",
        "scope": 725,
        "sourceUnit": 203,
        "src": "88:27:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/anovak/workspace/macroverse/contracts/HasNoContracts.sol",
        "file": "./HasNoContracts.sol",
        "id": 207,
        "nodeType": "ImportDirective",
        "scope": 725,
        "sourceUnit": 98,
        "src": "116:30:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/anovak/workspace/macroverse/contracts/OZ1StandardToken.sol",
        "file": "./OZ1StandardToken.sol",
        "id": 208,
        "nodeType": "ImportDirective",
        "scope": 725,
        "sourceUnit": 9015,
        "src": "147:32:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 210,
              "name": "OZ1StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9014,
              "src": "2779:16:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OZ1StandardToken_$9014",
                "typeString": "contract OZ1StandardToken"
              }
            },
            "id": 211,
            "nodeType": "InheritanceSpecifier",
            "src": "2779:16:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 212,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11135,
              "src": "2797:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$11135",
                "typeString": "contract Ownable"
              }
            },
            "id": 213,
            "nodeType": "InheritanceSpecifier",
            "src": "2797:7:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 214,
              "name": "HasNoTokens",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 202,
              "src": "2806:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HasNoTokens_$202",
                "typeString": "contract HasNoTokens"
              }
            },
            "id": 215,
            "nodeType": "InheritanceSpecifier",
            "src": "2806:11:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 216,
              "name": "HasNoContracts",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 97,
              "src": "2819:14:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HasNoContracts_$97",
                "typeString": "contract HasNoContracts"
              }
            },
            "id": 217,
            "nodeType": "InheritanceSpecifier",
            "src": "2819:14:5"
          }
        ],
        "contractDependencies": [
          97,
          202,
          8802,
          8842,
          8870,
          9014,
          11026,
          11135
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 209,
          "nodeType": "StructuredDocumentation",
          "src": "182:2575:5",
          "text": " !!!WARNING!!! Due to breaking changes in OpenZeppelin, THE CODE OF THIS\n CONTRACT IS SIGNIFICANTLY DIFFERENT FROM THAT WHICH IS ACTUALLY DEPLOYED ON\n THE MAINNET in order to allow it to build on current Solidity against\n current OpenZeppelin. Unless I've missed a good way to ship archival\n bytecode to represent a contract for testing purposes, blame the OZ devs and\n the Solidity devs and the Truffle devs not talking to each other about a\n sensible migration system for projects with existing mainnet code deployed\n that are under active development.\n MRV token, distributed by crowdsale. Token and crowdsale functionality are unified in a single\n contract, to make clear and restrict the conditions under which tokens can be created or destroyed.\n Derived from OpenZeppelin CrowdsaleToken template.\n Key Crowdsale Facts:\n \n * MRV tokens will be sold at a rate of 5,000 per ETH.\n * All MRV token sales are final. No refunds can be issued by the contract.\n * Unless adjusted later by the crowdsale operator, up to 100 million tokens will be available.\n * An additional 5,000 tokens are reserved. \n * Participate in the crowdsale by sending ETH to this contract, when the crowdsale is open.\n * Sending more ETH than required to purchase all the remaining tokens will fail.\n * Timers can be set to allow anyone to open/close the crowdsale at the proper time. The crowdsale\n   operator reserves the right to set, unset, and reset these timers at any time, for any reason,\n   and without notice.\n * The operator of the crowdsale has the ability to manually open it and close it, and reserves\n   the right to do so at any time, for any reason, and without notice.\n * The crowdsale cannot be reopened, and no tokens can be created, after the crowdsale closes.\n * The crowdsale operator reserves the right to adjust the decimal places of the MRV token at\n   any time after the crowdsale closes, for any reason, and without notice. MRV tokens are\n   initially divisible to 18 decimal places.\n * The crowdsale operator reserves the right to not open or close the crowdsale, not set the\n   open or close timer, and generally refrain from doing things that the contract would otherwise\n   authorize them to do.\n * The crowdsale operator reserves the right to claim and keep any ETH or tokens that end up in\n   the contract's account. During normal crowdsale operation, ETH is not stored in the contract's\n   account, and is instead sent directly to the beneficiary."
        },
        "fullyImplemented": true,
        "id": 724,
        "linearizedBaseContracts": [
          724,
          97,
          202,
          11135,
          11026,
          9014,
          8842,
          8802,
          8870
        ],
        "name": "MRVToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "06fdde03",
            "id": 220,
            "mutability": "constant",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 724,
            "src": "2977:48:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 218,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2977:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4d6163726f766572736520546f6b656e",
              "id": 219,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3007:18:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_227f2f84a581a314ebc783fb77f55b0882385ea57d1e68195be73f365387cdb9",
                "typeString": "literal_string \"Macroverse Token\""
              },
              "value": "Macroverse Token"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "95d89b41",
            "id": 223,
            "mutability": "constant",
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 724,
            "src": "3068:37:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 221,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "3068:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4d5256",
              "id": 222,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3100:5:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b2f48ef70afc0cc6308ece43df28035baba77d42328e46c8a2c4ef12397e2c0a",
                "typeString": "literal_string \"MRV\""
              },
              "value": "MRV"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "313ce567",
            "id": 225,
            "mutability": "mutable",
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 724,
            "src": "3349:21:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 224,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "3349:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 227,
            "mutability": "mutable",
            "name": "beneficiary",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 724,
            "src": "3478:27:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 226,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3478:15:5",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "346fc0dd",
            "id": 229,
            "mutability": "mutable",
            "name": "maxCrowdsaleSupplyInWholeTokens",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 724,
            "src": "3561:43:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 228,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "3561:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "8490d598",
            "id": 232,
            "mutability": "constant",
            "name": "wholeTokensReserved",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 724,
            "src": "3673:47:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 230,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "3673:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "35303030",
              "id": 231,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3716:4:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5000_by_1",
                "typeString": "int_const 5000"
              },
              "value": "5000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "4e15dfe9",
            "id": 235,
            "mutability": "constant",
            "name": "wholeTokensPerEth",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 724,
            "src": "3779:45:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 233,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "3779:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "35303030",
              "id": 234,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3820:4:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5000_by_1",
                "typeString": "int_const 5000"
              },
              "value": "5000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 237,
            "mutability": "mutable",
            "name": "crowdsaleStarted",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 724,
            "src": "3935:21:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 236,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "3935:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 239,
            "mutability": "mutable",
            "name": "crowdsaleEnded",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 724,
            "src": "4060:19:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 238,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "4060:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "92f351f9",
            "id": 242,
            "mutability": "mutable",
            "name": "openTimer",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 724,
            "src": "4256:25:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 240,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "4256:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 241,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4280:1:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5da24f90",
            "id": 245,
            "mutability": "mutable",
            "name": "closeTimer",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 724,
            "src": "4409:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 243,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "4409:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 244,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4434:1:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 287,
              "nodeType": "Block",
              "src": "4721:611:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 253,
                      "name": "beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 227,
                      "src": "4777:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 254,
                      "name": "sendProceedsTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 248,
                      "src": "4791:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4777:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 256,
                  "nodeType": "ExpressionStatement",
                  "src": "4777:28:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 257,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 225,
                      "src": "4871:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3138",
                      "id": 258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4882:2:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "4871:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 260,
                  "nodeType": "ExpressionStatement",
                  "src": "4871:13:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 261,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8847,
                      "src": "4974:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 262,
                        "name": "wholeTokensReserved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "4988:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5010:2:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3138",
                          "id": 264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5016:2:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "src": "5010:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "4988:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4974:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "4974:44:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 269,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8722,
                        "src": "5028:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 271,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 270,
                        "name": "sendTokensTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 250,
                        "src": "5037:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5028:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 272,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8847,
                      "src": "5053:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5028:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "5028:36:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 275,
                      "name": "crowdsaleStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 237,
                      "src": "5148:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5167:5:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "5148:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 278,
                  "nodeType": "ExpressionStatement",
                  "src": "5148:24:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 279,
                      "name": "crowdsaleEnded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 239,
                      "src": "5182:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5199:5:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "5182:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "5182:22:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 283,
                      "name": "maxCrowdsaleSupplyInWholeTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "5282:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "313030303030303030",
                      "id": 284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5316:9:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000_by_1",
                        "typeString": "int_const 100000000"
                      },
                      "value": "100000000"
                    },
                    "src": "5282:43:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 286,
                  "nodeType": "ExpressionStatement",
                  "src": "5282:43:5"
                }
              ]
            },
            "documentation": {
              "id": 246,
              "nodeType": "StructuredDocumentation",
              "src": "4484:159:5",
              "text": " Deploy a new MRVToken contract, paying crowdsale proceeds to the given address,\n and awarding reserved tokens to the other given address."
            },
            "id": 288,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 248,
                  "mutability": "mutable",
                  "name": "sendProceedsTo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 288,
                  "src": "4660:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4660:15:5",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 250,
                  "mutability": "mutable",
                  "name": "sendTokensTo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 288,
                  "src": "4692:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4692:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4659:54:5"
            },
            "returnParameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4721:0:5"
            },
            "scope": 724,
            "src": "4648:684:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 299,
              "nodeType": "Block",
              "src": "6099:41:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 295,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6122:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6122:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 294,
                      "name": "createTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 658,
                      "src": "6109:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6109:24:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "6109:24:5"
                }
              ]
            },
            "documentation": {
              "id": 289,
              "nodeType": "StructuredDocumentation",
              "src": "5385:662:5",
              "text": " This is the MAIN CROWDSALE ENTRY POINT. You participate in the crowdsale by \n sending ETH to this contract. That calls this function, which credits tokens\n to the address or contract that sent the ETH.\n Since MRV tokens are sold at a rate of more than one per ether, and since\n they, like ETH, have 18 decimal places (at the time of sale), any fractional\n amount of ETH should be handled safely.\n Note that all orders are fill-or-kill. If you send in more ether than there are\n tokens remaining to be bought, your transaction will be rolled back and you will\n get no tokens and waste your gas."
            },
            "id": 300,
            "implemented": true,
            "kind": "receive",
            "modifiers": [
              {
                "arguments": null,
                "id": 292,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 291,
                  "name": "onlyDuringCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 382,
                  "src": "6079:19:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6079:19:5"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6059:2:5"
            },
            "returnParameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6099:0:5"
            },
            "scope": 724,
            "src": "6052:88:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 304,
            "name": "CrowdsaleOpen",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 302,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 304,
                  "src": "6259:9:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6259:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6258:11:5"
            },
            "src": "6239:31:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 312,
            "name": "TokenPurchase",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 306,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 312,
                  "src": "6363:9:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6363:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 308,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "etherAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 312,
                  "src": "6374:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 307,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6374:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 310,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 312,
                  "src": "6392:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6392:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6362:43:5"
            },
            "src": "6343:63:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 316,
            "name": "CrowdsaleClose",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 314,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 316,
                  "src": "6486:9:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 313,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6486:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6485:11:5"
            },
            "src": "6465:32:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 320,
            "name": "DecimalChange",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 318,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newDecimals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 320,
                  "src": "6564:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 317,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6564:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6563:19:5"
            },
            "src": "6544:39:5"
          },
          {
            "body": {
              "id": 332,
              "nodeType": "Block",
              "src": "6794:83:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 323,
                      "name": "checkCloseTimer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 456,
                      "src": "6804:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6804:17:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 325,
                  "nodeType": "ExpressionStatement",
                  "src": "6804:17:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 326,
                    "name": "crowdsaleEnded",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 239,
                    "src": "6835:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 330,
                  "nodeType": "IfStatement",
                  "src": "6831:28:5",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 327,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "6851:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6851:8:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 329,
                    "nodeType": "ExpressionStatement",
                    "src": "6851:8:5"
                  }
                },
                {
                  "id": 331,
                  "nodeType": "PlaceholderStatement",
                  "src": "6869:1:5"
                }
              ]
            },
            "documentation": {
              "id": 321,
              "nodeType": "StructuredDocumentation",
              "src": "6666:97:5",
              "text": " Only allow some actions before the crowdsale closes, whether it's open or not."
            },
            "id": 333,
            "name": "onlyBeforeClosed",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6794:0:5"
            },
            "src": "6768:109:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 346,
              "nodeType": "Block",
              "src": "7042:84:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 336,
                      "name": "checkCloseTimer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 456,
                      "src": "7052:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7052:17:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 338,
                  "nodeType": "ExpressionStatement",
                  "src": "7052:17:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "7083:15:5",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 339,
                      "name": "crowdsaleEnded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 239,
                      "src": "7084:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 344,
                  "nodeType": "IfStatement",
                  "src": "7079:29:5",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 341,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "7100:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7100:8:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 343,
                    "nodeType": "ExpressionStatement",
                    "src": "7100:8:5"
                  }
                },
                {
                  "id": 345,
                  "nodeType": "PlaceholderStatement",
                  "src": "7118:1:5"
                }
              ]
            },
            "documentation": {
              "id": 334,
              "nodeType": "StructuredDocumentation",
              "src": "6887:125:5",
              "text": " Only allow some actions after the crowdsale is over.\n Will set the crowdsale closed if it should be."
            },
            "id": 347,
            "name": "onlyAfterClosed",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7042:0:5"
            },
            "src": "7017:109:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 359,
              "nodeType": "Block",
              "src": "7238:84:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 350,
                      "name": "checkOpenTimer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 435,
                      "src": "7248:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7248:16:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "7248:16:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 353,
                    "name": "crowdsaleStarted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 237,
                    "src": "7278:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 357,
                  "nodeType": "IfStatement",
                  "src": "7274:30:5",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 354,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "7296:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7296:8:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 356,
                    "nodeType": "ExpressionStatement",
                    "src": "7296:8:5"
                  }
                },
                {
                  "id": 358,
                  "nodeType": "PlaceholderStatement",
                  "src": "7314:1:5"
                }
              ]
            },
            "documentation": {
              "id": 348,
              "nodeType": "StructuredDocumentation",
              "src": "7136:71:5",
              "text": " Only allow some actions before the crowdsale starts."
            },
            "id": 360,
            "name": "onlyBeforeOpened",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7238:0:5"
            },
            "src": "7212:110:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 381,
              "nodeType": "Block",
              "src": "7491:150:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 363,
                      "name": "checkOpenTimer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 435,
                      "src": "7501:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7501:16:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 365,
                  "nodeType": "ExpressionStatement",
                  "src": "7501:16:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 366,
                      "name": "checkCloseTimer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 456,
                      "src": "7527:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7527:17:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 368,
                  "nodeType": "ExpressionStatement",
                  "src": "7527:17:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 369,
                    "name": "crowdsaleEnded",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 239,
                    "src": "7558:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 373,
                  "nodeType": "IfStatement",
                  "src": "7554:28:5",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 370,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "7574:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7574:8:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 372,
                    "nodeType": "ExpressionStatement",
                    "src": "7574:8:5"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "7596:17:5",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 374,
                      "name": "crowdsaleStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 237,
                      "src": "7597:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 379,
                  "nodeType": "IfStatement",
                  "src": "7592:31:5",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 376,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "7615:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7615:8:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 378,
                    "nodeType": "ExpressionStatement",
                    "src": "7615:8:5"
                  }
                },
                {
                  "id": 380,
                  "nodeType": "PlaceholderStatement",
                  "src": "7633:1:5"
                }
              ]
            },
            "documentation": {
              "id": 361,
              "nodeType": "StructuredDocumentation",
              "src": "7332:125:5",
              "text": " Only allow some actions while the crowdsale is active.\n Will set the crowdsale open if it should be."
            },
            "id": 382,
            "name": "onlyDuringCrowdsale",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7491:0:5"
            },
            "src": "7462:179:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 397,
              "nodeType": "Block",
              "src": "7829:59:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 388,
                            "name": "openTimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "7847:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7860:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7847:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 391,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -17,
                            "src": "7865:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 392,
                            "name": "openTimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "7871:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7865:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7847:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 395,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7846:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 387,
                  "id": 396,
                  "nodeType": "Return",
                  "src": "7839:42:5"
                }
              ]
            },
            "documentation": {
              "id": 383,
              "nodeType": "StructuredDocumentation",
              "src": "7702:67:5",
              "text": " Determine if the crowdsale should open by timer."
            },
            "functionSelector": "ea663631",
            "id": 398,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "openTimerElapsed",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7799:2:5"
            },
            "returnParameters": {
              "id": 387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 386,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 398,
                  "src": "7823:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 385,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7823:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7822:6:5"
            },
            "scope": 724,
            "src": "7774:114:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 413,
              "nodeType": "Block",
              "src": "8027:61:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 404,
                            "name": "closeTimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 245,
                            "src": "8045:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8059:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8045:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 407,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -17,
                            "src": "8064:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 408,
                            "name": "closeTimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 245,
                            "src": "8070:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8064:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8045:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 411,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8044:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 403,
                  "id": 412,
                  "nodeType": "Return",
                  "src": "8037:44:5"
                }
              ]
            },
            "documentation": {
              "id": 399,
              "nodeType": "StructuredDocumentation",
              "src": "7898:68:5",
              "text": " Determine if the crowdsale should close by timer."
            },
            "functionSelector": "80f4531f",
            "id": 414,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "closeTimerElapsed",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7997:2:5"
            },
            "returnParameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 414,
                  "src": "8021:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8021:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8020:6:5"
            },
            "scope": 724,
            "src": "7971:117:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 434,
              "nodeType": "Block",
              "src": "8290:152:5",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 418,
                      "name": "openTimerElapsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 398,
                      "src": "8304:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8304:18:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 433,
                  "nodeType": "IfStatement",
                  "src": "8300:136:5",
                  "trueBody": {
                    "id": 432,
                    "nodeType": "Block",
                    "src": "8324:112:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 420,
                            "name": "crowdsaleStarted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 237,
                            "src": "8338:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8357:4:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "8338:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 423,
                        "nodeType": "ExpressionStatement",
                        "src": "8338:23:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 424,
                            "name": "openTimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "8375:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8387:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8375:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 427,
                        "nodeType": "ExpressionStatement",
                        "src": "8375:13:5"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 429,
                              "name": "now",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -17,
                              "src": "8421:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 428,
                            "name": "CrowdsaleOpen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 304,
                            "src": "8407:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8407:18:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 431,
                        "nodeType": "EmitStatement",
                        "src": "8402:23:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 415,
              "nodeType": "StructuredDocumentation",
              "src": "8098:154:5",
              "text": " If the open timer has elapsed, start the crowdsale.\n Can be called by people, but also gets called when people try to contribute."
            },
            "functionSelector": "dd3260fc",
            "id": 435,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkOpenTimer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8280:2:5"
            },
            "returnParameters": {
              "id": 417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8290:0:5"
            },
            "scope": 724,
            "src": "8257:185:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 455,
              "nodeType": "Block",
              "src": "8561:153:5",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 439,
                      "name": "closeTimerElapsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 414,
                      "src": "8575:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8575:19:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 454,
                  "nodeType": "IfStatement",
                  "src": "8571:137:5",
                  "trueBody": {
                    "id": 453,
                    "nodeType": "Block",
                    "src": "8596:112:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 441,
                            "name": "crowdsaleEnded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 239,
                            "src": "8610:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8627:4:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "8610:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 444,
                        "nodeType": "ExpressionStatement",
                        "src": "8610:21:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 445,
                            "name": "closeTimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 245,
                            "src": "8645:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8658:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8645:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 448,
                        "nodeType": "ExpressionStatement",
                        "src": "8645:14:5"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 450,
                              "name": "now",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -17,
                              "src": "8693:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 449,
                            "name": "CrowdsaleClose",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 316,
                            "src": "8678:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8678:19:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 452,
                        "nodeType": "EmitStatement",
                        "src": "8673:24:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 436,
              "nodeType": "StructuredDocumentation",
              "src": "8452:70:5",
              "text": " If the close timer has elapsed, stop the crowdsale."
            },
            "functionSelector": "1f4425f3",
            "id": 456,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkCloseTimer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8551:2:5"
            },
            "returnParameters": {
              "id": 438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8561:0:5"
            },
            "scope": 724,
            "src": "8527:187:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 476,
              "nodeType": "Block",
              "src": "8854:215:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 465,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 462,
                                "name": "crowdsaleStarted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 237,
                                "src": "8978:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 463,
                                  "name": "openTimerElapsed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 398,
                                  "src": "8998:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                    "typeString": "function () view returns (bool)"
                                  }
                                },
                                "id": 464,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8998:18:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "8978:38:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 466,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8977:40:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "9021:40:5",
                          "subExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 470,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 467,
                                  "name": "crowdsaleEnded",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 239,
                                  "src": "9023:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 468,
                                    "name": "closeTimerElapsed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 414,
                                    "src": "9041:17:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                      "typeString": "function () view returns (bool)"
                                    }
                                  },
                                  "id": 469,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9041:19:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "9023:37:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 471,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9022:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8977:84:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 474,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8976:86:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 461,
                  "id": 475,
                  "nodeType": "Return",
                  "src": "8969:93:5"
                }
              ]
            },
            "documentation": {
              "id": 457,
              "nodeType": "StructuredDocumentation",
              "src": "8724:69:5",
              "text": " Determine if the crowdsale is currently happening."
            },
            "functionSelector": "0118e686",
            "id": 477,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCrowdsaleActive",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8824:2:5"
            },
            "returnParameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 460,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 477,
                  "src": "8848:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 459,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8848:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8847:6:5"
            },
            "scope": 724,
            "src": "8798:271:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 491,
              "nodeType": "Block",
              "src": "9313:70:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 487,
                      "name": "maxCrowdsaleSupplyInWholeTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "9323:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 488,
                      "name": "newMaxInWholeTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 480,
                      "src": "9357:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9323:53:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 490,
                  "nodeType": "ExpressionStatement",
                  "src": "9323:53:5"
                }
              ]
            },
            "documentation": {
              "id": 478,
              "nodeType": "StructuredDocumentation",
              "src": "9141:85:5",
              "text": " Before the crowdsale opens, the max token count can be configured."
            },
            "functionSelector": "6f8b44b0",
            "id": 492,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 483,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 482,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11084,
                  "src": "9286:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "9286:9:5"
              },
              {
                "arguments": null,
                "id": 485,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 484,
                  "name": "onlyBeforeOpened",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 360,
                  "src": "9296:16:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "9296:16:5"
              }
            ],
            "name": "setMaxSupply",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 480,
                  "mutability": "mutable",
                  "name": "newMaxInWholeTokens",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 492,
                  "src": "9253:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9253:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9252:26:5"
            },
            "returnParameters": {
              "id": 486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9313:0:5"
            },
            "scope": 724,
            "src": "9231:152:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 512,
              "nodeType": "Block",
              "src": "9524:96:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 500,
                      "name": "crowdsaleStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 237,
                      "src": "9534:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9553:4:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "9534:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 503,
                  "nodeType": "ExpressionStatement",
                  "src": "9534:23:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 504,
                      "name": "openTimer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 242,
                      "src": "9567:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9579:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9567:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 507,
                  "nodeType": "ExpressionStatement",
                  "src": "9567:13:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 509,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -17,
                        "src": "9609:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 508,
                      "name": "CrowdsaleOpen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 304,
                      "src": "9595:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9595:18:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 511,
                  "nodeType": "EmitStatement",
                  "src": "9590:23:5"
                }
              ]
            },
            "documentation": {
              "id": 493,
              "nodeType": "StructuredDocumentation",
              "src": "9393:67:5",
              "text": " Allow the owner to start the crowdsale manually."
            },
            "functionSelector": "28ef6f40",
            "id": 513,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 496,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 495,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11084,
                  "src": "9497:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "9497:9:5"
              },
              {
                "arguments": null,
                "id": 498,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 497,
                  "name": "onlyBeforeOpened",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 360,
                  "src": "9507:16:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "9507:16:5"
              }
            ],
            "name": "openCrowdsale",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9487:2:5"
            },
            "returnParameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9524:0:5"
            },
            "scope": 724,
            "src": "9465:155:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 531,
              "nodeType": "Block",
              "src": "10104:61:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 523,
                      "name": "openTimer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 242,
                      "src": "10114:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 524,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -17,
                        "src": "10126:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 525,
                          "name": "minutesFromNow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 516,
                          "src": "10132:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10149:9:5",
                          "subdenomination": "minutes",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "1"
                        },
                        "src": "10132:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10126:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10114:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 530,
                  "nodeType": "ExpressionStatement",
                  "src": "10114:44:5"
                }
              ]
            },
            "documentation": {
              "id": 514,
              "nodeType": "StructuredDocumentation",
              "src": "9630:380:5",
              "text": " Let the owner start the timer for the crowdsale start. Without further owner intervention,\n anyone will be able to open the crowdsale when the timer expires.\n Further calls will re-set the timer to count from the time the transaction is processed.\n The timer can be re-set after it has tripped, unless someone has already opened the crowdsale."
            },
            "functionSelector": "79d220ae",
            "id": 532,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 519,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 518,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11084,
                  "src": "10077:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10077:9:5"
              },
              {
                "arguments": null,
                "id": 521,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 520,
                  "name": "onlyBeforeOpened",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 360,
                  "src": "10087:16:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10087:16:5"
              }
            ],
            "name": "setCrowdsaleOpenTimerFor",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 516,
                  "mutability": "mutable",
                  "name": "minutesFromNow",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 532,
                  "src": "10049:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10049:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10048:21:5"
            },
            "returnParameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10104:0:5"
            },
            "scope": 724,
            "src": "10015:150:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 544,
              "nodeType": "Block",
              "src": "10357:30:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 540,
                      "name": "openTimer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 242,
                      "src": "10367:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10379:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10367:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 543,
                  "nodeType": "ExpressionStatement",
                  "src": "10367:13:5"
                }
              ]
            },
            "documentation": {
              "id": 533,
              "nodeType": "StructuredDocumentation",
              "src": "10175:108:5",
              "text": " Let the owner stop the crowdsale open timer, as long as the crowdsale has not yet opened."
            },
            "functionSelector": "6d6e2710",
            "id": 545,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 536,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 535,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11084,
                  "src": "10330:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10330:9:5"
              },
              {
                "arguments": null,
                "id": 538,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 537,
                  "name": "onlyBeforeOpened",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 360,
                  "src": "10340:16:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10340:16:5"
              }
            ],
            "name": "clearCrowdsaleOpenTimer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10320:2:5"
            },
            "returnParameters": {
              "id": 539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10357:0:5"
            },
            "scope": 724,
            "src": "10288:99:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 563,
              "nodeType": "Block",
              "src": "10724:62:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 555,
                      "name": "closeTimer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "10734:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 556,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -17,
                        "src": "10747:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 557,
                          "name": "minutesFromNow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 548,
                          "src": "10753:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10770:9:5",
                          "subdenomination": "minutes",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "1"
                        },
                        "src": "10753:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10747:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10734:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 562,
                  "nodeType": "ExpressionStatement",
                  "src": "10734:45:5"
                }
              ]
            },
            "documentation": {
              "id": 546,
              "nodeType": "StructuredDocumentation",
              "src": "10397:232:5",
              "text": " Let the owner start the timer for the crowdsale end. Counts from when the function is called,\n *not* from the start of the crowdsale.\n It is possible, but a bad idea, to set this before the open timer."
            },
            "functionSelector": "e330a737",
            "id": 564,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 551,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 550,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11084,
                  "src": "10697:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10697:9:5"
              },
              {
                "arguments": null,
                "id": 553,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 552,
                  "name": "onlyBeforeClosed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 333,
                  "src": "10707:16:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10707:16:5"
              }
            ],
            "name": "setCrowdsaleCloseTimerFor",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 548,
                  "mutability": "mutable",
                  "name": "minutesFromNow",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 564,
                  "src": "10669:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10669:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10668:21:5"
            },
            "returnParameters": {
              "id": 554,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10724:0:5"
            },
            "scope": 724,
            "src": "10634:152:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 576,
              "nodeType": "Block",
              "src": "10970:31:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 572,
                      "name": "closeTimer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "10980:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10993:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10980:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "10980:14:5"
                }
              ]
            },
            "documentation": {
              "id": 565,
              "nodeType": "StructuredDocumentation",
              "src": "10796:99:5",
              "text": " Let the owner stop the crowdsale close timer, as long as it has not yet expired."
            },
            "functionSelector": "0d051c52",
            "id": 577,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 568,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 567,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11084,
                  "src": "10943:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10943:9:5"
              },
              {
                "arguments": null,
                "id": 570,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 569,
                  "name": "onlyBeforeClosed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 333,
                  "src": "10953:16:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10953:16:5"
              }
            ],
            "name": "clearCrowdsaleCloseTimer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10933:2:5"
            },
            "returnParameters": {
              "id": 571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10970:0:5"
            },
            "scope": 724,
            "src": "10900:101:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 657,
              "nodeType": "Block",
              "src": "11336:1236:5",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 585,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "11350:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "11350:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11363:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11350:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 593,
                  "nodeType": "IfStatement",
                  "src": "11346:53:5",
                  "trueBody": {
                    "id": 592,
                    "nodeType": "Block",
                    "src": "11366:33:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 589,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "11380:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11380:8:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 591,
                        "nodeType": "ExpressionStatement",
                        "src": "11380:8:5"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    595
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 595,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 657,
                      "src": "11409:11:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 594,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11409:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 601,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 599,
                        "name": "wholeTokensPerEth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "11437:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 596,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11423:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "11423:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11313,
                      "src": "11423:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11423:32:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11409:46:5"
                },
                {
                  "assignments": [
                    603
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 603,
                      "mutability": "mutable",
                      "name": "newTotalSupply",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 657,
                      "src": "11531:22:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 602,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11531:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 608,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 606,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 595,
                        "src": "11572:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 604,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8847,
                        "src": "11556:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11233,
                      "src": "11556:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11556:23:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11531:48:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 609,
                      "name": "newTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 603,
                      "src": "11602:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 612,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 610,
                              "name": "wholeTokensReserved",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 232,
                              "src": "11620:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 611,
                              "name": "maxCrowdsaleSupplyInWholeTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 229,
                              "src": "11642:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11620:53:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 613,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "11619:55:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "id": 616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11677:2:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3138",
                          "id": 615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11683:2:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "src": "11677:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "11619:66:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11602:83:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 623,
                  "nodeType": "IfStatement",
                  "src": "11598:234:5",
                  "trueBody": {
                    "id": 622,
                    "nodeType": "Block",
                    "src": "11687:145:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 619,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "11813:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11813:8:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 621,
                        "nodeType": "ExpressionStatement",
                        "src": "11813:8:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 624,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8847,
                      "src": "12085:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 625,
                      "name": "newTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 603,
                      "src": "12099:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12085:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 627,
                  "nodeType": "ExpressionStatement",
                  "src": "12085:28:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 628,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8722,
                        "src": "12123:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 630,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 629,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 580,
                        "src": "12132:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12123:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 635,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 595,
                          "src": "12169:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 631,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8722,
                            "src": "12145:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 633,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 632,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 580,
                            "src": "12154:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12145:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11233,
                        "src": "12145:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12145:31:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12123:53:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 638,
                  "nodeType": "ExpressionStatement",
                  "src": "12123:53:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 640,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -17,
                        "src": "12247:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 641,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12252:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "12252:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 643,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 580,
                        "src": "12263:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 639,
                      "name": "TokenPurchase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 312,
                      "src": "12233:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12233:40:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 645,
                  "nodeType": "EmitStatement",
                  "src": "12228:45:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "12503:28:5",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 648,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12521:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "12521:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 646,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 227,
                          "src": "12504:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "send",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "12504:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) returns (bool)"
                        }
                      },
                      "id": 650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12504:27:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 656,
                  "nodeType": "IfStatement",
                  "src": "12499:67:5",
                  "trueBody": {
                    "id": 655,
                    "nodeType": "Block",
                    "src": "12533:33:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 652,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "12547:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12547:8:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 654,
                        "nodeType": "ExpressionStatement",
                        "src": "12547:8:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 578,
              "nodeType": "StructuredDocumentation",
              "src": "11063:198:5",
              "text": " Create tokens for the given address, in response to a payment.\n Cannot be called by outside callers; use the fallback function, which will create tokens for whoever pays it."
            },
            "id": 658,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 583,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 582,
                  "name": "onlyDuringCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 382,
                  "src": "11316:19:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "11316:19:5"
              }
            ],
            "name": "createTokens",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 580,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 658,
                  "src": "11288:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 579,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11288:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11287:19:5"
            },
            "returnParameters": {
              "id": 584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11336:0:5"
            },
            "scope": 724,
            "src": "11266:1306:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 678,
              "nodeType": "Block",
              "src": "12715:96:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 666,
                      "name": "crowdsaleEnded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 239,
                      "src": "12725:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12742:4:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "12725:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 669,
                  "nodeType": "ExpressionStatement",
                  "src": "12725:21:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 670,
                      "name": "closeTimer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "12756:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12769:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12756:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 673,
                  "nodeType": "ExpressionStatement",
                  "src": "12756:14:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 675,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -17,
                        "src": "12800:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 674,
                      "name": "CrowdsaleClose",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "12785:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12785:19:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 677,
                  "nodeType": "EmitStatement",
                  "src": "12780:24:5"
                }
              ]
            },
            "documentation": {
              "id": 659,
              "nodeType": "StructuredDocumentation",
              "src": "12582:65:5",
              "text": " Allow the owner to end the crowdsale manually."
            },
            "functionSelector": "983c0a01",
            "id": 679,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 662,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 661,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11084,
                  "src": "12685:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "12685:9:5"
              },
              {
                "arguments": null,
                "id": 664,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 663,
                  "name": "onlyDuringCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 382,
                  "src": "12695:19:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "12695:19:5"
              }
            ],
            "name": "closeCrowdsale",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 660,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12675:2:5"
            },
            "returnParameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12715:0:5"
            },
            "scope": 724,
            "src": "12652:159:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 697,
              "nodeType": "Block",
              "src": "13449:142:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 689,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 225,
                      "src": "13490:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 690,
                      "name": "newDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 682,
                      "src": "13501:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "13490:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 692,
                  "nodeType": "ExpressionStatement",
                  "src": "13490:22:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 694,
                        "name": "newDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 682,
                        "src": "13572:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 693,
                      "name": "DecimalChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 320,
                      "src": "13558:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
                        "typeString": "function (uint8)"
                      }
                    },
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13558:26:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 696,
                  "nodeType": "EmitStatement",
                  "src": "13553:31:5"
                }
              ]
            },
            "documentation": {
              "id": 680,
              "nodeType": "StructuredDocumentation",
              "src": "12889:482:5",
              "text": " When the crowdsale is finished, the contract owner may adjust the decimal places for display purposes.\n This should work like a 10-to-1 split or reverse-split.\n The point of this mechanism is to keep the individual MRV tokens from getting inconveniently valuable or cheap.\n However, it relies on the contract owner taking the time to update the decimal place value.\n Note that this changes the decimals IMMEDIATELY with NO NOTICE to users."
            },
            "functionSelector": "7a1395aa",
            "id": 698,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 685,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 684,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11084,
                  "src": "13423:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "13423:9:5"
              },
              {
                "arguments": null,
                "id": 687,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 686,
                  "name": "onlyAfterClosed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 347,
                  "src": "13433:15:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "13433:15:5"
              }
            ],
            "name": "setDecimals",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 682,
                  "mutability": "mutable",
                  "name": "newDecimals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 698,
                  "src": "13397:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 681,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "13397:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13396:19:5"
            },
            "returnParameters": {
              "id": 688,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13449:0:5"
            },
            "scope": 724,
            "src": "13376:215:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 722,
              "nodeType": "Block",
              "src": "13845:176:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 716,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "13999:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MRVToken_$724",
                                    "typeString": "contract MRVToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MRVToken_$724",
                                    "typeString": "contract MRVToken"
                                  }
                                ],
                                "id": 715,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13991:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 714,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13991:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13991:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "13991:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 709,
                                      "name": "owner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11071,
                                      "src": "13976:5:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 710,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13976:7:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 708,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "13968:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint160_$",
                                    "typeString": "type(uint160)"
                                  },
                                  "typeName": {
                                    "id": 707,
                                    "name": "uint160",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13968:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 711,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13968:16:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              ],
                              "id": 706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13960:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 705,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13960:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 712,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13960:25:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "send",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "13960:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) returns (bool)"
                          }
                        },
                        "id": 719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13960:53:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 704,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "13953:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13953:61:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 721,
                  "nodeType": "ExpressionStatement",
                  "src": "13953:61:5"
                }
              ]
            },
            "documentation": {
              "id": 699,
              "nodeType": "StructuredDocumentation",
              "src": "13601:196:5",
              "text": " If Ether somehow manages to get into this contract, provide a way to get it out again.\n During normal crowdsale operation, ETH is immediately forwarded to the beneficiary."
            },
            "functionSelector": "9f727c27",
            "id": 723,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 702,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 701,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11084,
                  "src": "13835:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "13835:9:5"
              }
            ],
            "name": "reclaimEther",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13823:2:5"
            },
            "returnParameters": {
              "id": 703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13845:0:5"
            },
            "scope": 724,
            "src": "13802:219:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 725,
        "src": "2758:11266:5"
      }
    ],
    "src": "0:14065:5"
  },
  "legacyAST": {
    "absolutePath": "/home/anovak/workspace/macroverse/contracts/MRVToken.sol",
    "exportedSymbols": {
      "MRVToken": [
        724
      ]
    },
    "id": 725,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 204,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "id": 205,
        "nodeType": "ImportDirective",
        "scope": 725,
        "sourceUnit": 11136,
        "src": "27:60:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/anovak/workspace/macroverse/contracts/HasNoTokens.sol",
        "file": "./HasNoTokens.sol",
        "id": 206,
        "nodeType": "ImportDirective",
        "scope": 725,
        "sourceUnit": 203,
        "src": "88:27:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/anovak/workspace/macroverse/contracts/HasNoContracts.sol",
        "file": "./HasNoContracts.sol",
        "id": 207,
        "nodeType": "ImportDirective",
        "scope": 725,
        "sourceUnit": 98,
        "src": "116:30:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/anovak/workspace/macroverse/contracts/OZ1StandardToken.sol",
        "file": "./OZ1StandardToken.sol",
        "id": 208,
        "nodeType": "ImportDirective",
        "scope": 725,
        "sourceUnit": 9015,
        "src": "147:32:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 210,
              "name": "OZ1StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9014,
              "src": "2779:16:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OZ1StandardToken_$9014",
                "typeString": "contract OZ1StandardToken"
              }
            },
            "id": 211,
            "nodeType": "InheritanceSpecifier",
            "src": "2779:16:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 212,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11135,
              "src": "2797:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$11135",
                "typeString": "contract Ownable"
              }
            },
            "id": 213,
            "nodeType": "InheritanceSpecifier",
            "src": "2797:7:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 214,
              "name": "HasNoTokens",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 202,
              "src": "2806:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HasNoTokens_$202",
                "typeString": "contract HasNoTokens"
              }
            },
            "id": 215,
            "nodeType": "InheritanceSpecifier",
            "src": "2806:11:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 216,
              "name": "HasNoContracts",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 97,
              "src": "2819:14:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HasNoContracts_$97",
                "typeString": "contract HasNoContracts"
              }
            },
            "id": 217,
            "nodeType": "InheritanceSpecifier",
            "src": "2819:14:5"
          }
        ],
        "contractDependencies": [
          97,
          202,
          8802,
          8842,
          8870,
          9014,
          11026,
          11135
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 209,
          "nodeType": "StructuredDocumentation",
          "src": "182:2575:5",
          "text": " !!!WARNING!!! Due to breaking changes in OpenZeppelin, THE CODE OF THIS\n CONTRACT IS SIGNIFICANTLY DIFFERENT FROM THAT WHICH IS ACTUALLY DEPLOYED ON\n THE MAINNET in order to allow it to build on current Solidity against\n current OpenZeppelin. Unless I've missed a good way to ship archival\n bytecode to represent a contract for testing purposes, blame the OZ devs and\n the Solidity devs and the Truffle devs not talking to each other about a\n sensible migration system for projects with existing mainnet code deployed\n that are under active development.\n MRV token, distributed by crowdsale. Token and crowdsale functionality are unified in a single\n contract, to make clear and restrict the conditions under which tokens can be created or destroyed.\n Derived from OpenZeppelin CrowdsaleToken template.\n Key Crowdsale Facts:\n \n * MRV tokens will be sold at a rate of 5,000 per ETH.\n * All MRV token sales are final. No refunds can be issued by the contract.\n * Unless adjusted later by the crowdsale operator, up to 100 million tokens will be available.\n * An additional 5,000 tokens are reserved. \n * Participate in the crowdsale by sending ETH to this contract, when the crowdsale is open.\n * Sending more ETH than required to purchase all the remaining tokens will fail.\n * Timers can be set to allow anyone to open/close the crowdsale at the proper time. The crowdsale\n   operator reserves the right to set, unset, and reset these timers at any time, for any reason,\n   and without notice.\n * The operator of the crowdsale has the ability to manually open it and close it, and reserves\n   the right to do so at any time, for any reason, and without notice.\n * The crowdsale cannot be reopened, and no tokens can be created, after the crowdsale closes.\n * The crowdsale operator reserves the right to adjust the decimal places of the MRV token at\n   any time after the crowdsale closes, for any reason, and without notice. MRV tokens are\n   initially divisible to 18 decimal places.\n * The crowdsale operator reserves the right to not open or close the crowdsale, not set the\n   open or close timer, and generally refrain from doing things that the contract would otherwise\n   authorize them to do.\n * The crowdsale operator reserves the right to claim and keep any ETH or tokens that end up in\n   the contract's account. During normal crowdsale operation, ETH is not stored in the contract's\n   account, and is instead sent directly to the beneficiary."
        },
        "fullyImplemented": true,
        "id": 724,
        "linearizedBaseContracts": [
          724,
          97,
          202,
          11135,
          11026,
          9014,
          8842,
          8802,
          8870
        ],
        "name": "MRVToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "06fdde03",
            "id": 220,
            "mutability": "constant",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 724,
            "src": "2977:48:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 218,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2977:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4d6163726f766572736520546f6b656e",
              "id": 219,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3007:18:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_227f2f84a581a314ebc783fb77f55b0882385ea57d1e68195be73f365387cdb9",
                "typeString": "literal_string \"Macroverse Token\""
              },
              "value": "Macroverse Token"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "95d89b41",
            "id": 223,
            "mutability": "constant",
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 724,
            "src": "3068:37:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 221,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "3068:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4d5256",
              "id": 222,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3100:5:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b2f48ef70afc0cc6308ece43df28035baba77d42328e46c8a2c4ef12397e2c0a",
                "typeString": "literal_string \"MRV\""
              },
              "value": "MRV"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "313ce567",
            "id": 225,
            "mutability": "mutable",
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 724,
            "src": "3349:21:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 224,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "3349:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 227,
            "mutability": "mutable",
            "name": "beneficiary",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 724,
            "src": "3478:27:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 226,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3478:15:5",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "346fc0dd",
            "id": 229,
            "mutability": "mutable",
            "name": "maxCrowdsaleSupplyInWholeTokens",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 724,
            "src": "3561:43:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 228,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "3561:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "8490d598",
            "id": 232,
            "mutability": "constant",
            "name": "wholeTokensReserved",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 724,
            "src": "3673:47:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 230,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "3673:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "35303030",
              "id": 231,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3716:4:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5000_by_1",
                "typeString": "int_const 5000"
              },
              "value": "5000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "4e15dfe9",
            "id": 235,
            "mutability": "constant",
            "name": "wholeTokensPerEth",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 724,
            "src": "3779:45:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 233,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "3779:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "35303030",
              "id": 234,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3820:4:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5000_by_1",
                "typeString": "int_const 5000"
              },
              "value": "5000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 237,
            "mutability": "mutable",
            "name": "crowdsaleStarted",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 724,
            "src": "3935:21:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 236,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "3935:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 239,
            "mutability": "mutable",
            "name": "crowdsaleEnded",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 724,
            "src": "4060:19:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 238,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "4060:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "92f351f9",
            "id": 242,
            "mutability": "mutable",
            "name": "openTimer",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 724,
            "src": "4256:25:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 240,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "4256:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 241,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4280:1:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5da24f90",
            "id": 245,
            "mutability": "mutable",
            "name": "closeTimer",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 724,
            "src": "4409:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 243,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "4409:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 244,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4434:1:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 287,
              "nodeType": "Block",
              "src": "4721:611:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 253,
                      "name": "beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 227,
                      "src": "4777:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 254,
                      "name": "sendProceedsTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 248,
                      "src": "4791:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4777:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 256,
                  "nodeType": "ExpressionStatement",
                  "src": "4777:28:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 257,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 225,
                      "src": "4871:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3138",
                      "id": 258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4882:2:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "4871:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 260,
                  "nodeType": "ExpressionStatement",
                  "src": "4871:13:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 261,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8847,
                      "src": "4974:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 262,
                        "name": "wholeTokensReserved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "4988:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5010:2:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3138",
                          "id": 264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5016:2:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "src": "5010:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "4988:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4974:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "4974:44:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 269,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8722,
                        "src": "5028:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 271,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 270,
                        "name": "sendTokensTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 250,
                        "src": "5037:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5028:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 272,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8847,
                      "src": "5053:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5028:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "5028:36:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 275,
                      "name": "crowdsaleStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 237,
                      "src": "5148:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5167:5:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "5148:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 278,
                  "nodeType": "ExpressionStatement",
                  "src": "5148:24:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 279,
                      "name": "crowdsaleEnded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 239,
                      "src": "5182:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5199:5:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "5182:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "5182:22:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 283,
                      "name": "maxCrowdsaleSupplyInWholeTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "5282:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "313030303030303030",
                      "id": 284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5316:9:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000_by_1",
                        "typeString": "int_const 100000000"
                      },
                      "value": "100000000"
                    },
                    "src": "5282:43:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 286,
                  "nodeType": "ExpressionStatement",
                  "src": "5282:43:5"
                }
              ]
            },
            "documentation": {
              "id": 246,
              "nodeType": "StructuredDocumentation",
              "src": "4484:159:5",
              "text": " Deploy a new MRVToken contract, paying crowdsale proceeds to the given address,\n and awarding reserved tokens to the other given address."
            },
            "id": 288,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 248,
                  "mutability": "mutable",
                  "name": "sendProceedsTo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 288,
                  "src": "4660:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4660:15:5",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 250,
                  "mutability": "mutable",
                  "name": "sendTokensTo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 288,
                  "src": "4692:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4692:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4659:54:5"
            },
            "returnParameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4721:0:5"
            },
            "scope": 724,
            "src": "4648:684:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 299,
              "nodeType": "Block",
              "src": "6099:41:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 295,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6122:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6122:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 294,
                      "name": "createTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 658,
                      "src": "6109:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6109:24:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "6109:24:5"
                }
              ]
            },
            "documentation": {
              "id": 289,
              "nodeType": "StructuredDocumentation",
              "src": "5385:662:5",
              "text": " This is the MAIN CROWDSALE ENTRY POINT. You participate in the crowdsale by \n sending ETH to this contract. That calls this function, which credits tokens\n to the address or contract that sent the ETH.\n Since MRV tokens are sold at a rate of more than one per ether, and since\n they, like ETH, have 18 decimal places (at the time of sale), any fractional\n amount of ETH should be handled safely.\n Note that all orders are fill-or-kill. If you send in more ether than there are\n tokens remaining to be bought, your transaction will be rolled back and you will\n get no tokens and waste your gas."
            },
            "id": 300,
            "implemented": true,
            "kind": "receive",
            "modifiers": [
              {
                "arguments": null,
                "id": 292,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 291,
                  "name": "onlyDuringCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 382,
                  "src": "6079:19:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6079:19:5"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6059:2:5"
            },
            "returnParameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6099:0:5"
            },
            "scope": 724,
            "src": "6052:88:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 304,
            "name": "CrowdsaleOpen",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 302,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 304,
                  "src": "6259:9:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6259:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6258:11:5"
            },
            "src": "6239:31:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 312,
            "name": "TokenPurchase",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 306,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 312,
                  "src": "6363:9:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6363:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 308,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "etherAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 312,
                  "src": "6374:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 307,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6374:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 310,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 312,
                  "src": "6392:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6392:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6362:43:5"
            },
            "src": "6343:63:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 316,
            "name": "CrowdsaleClose",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 314,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 316,
                  "src": "6486:9:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 313,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6486:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6485:11:5"
            },
            "src": "6465:32:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 320,
            "name": "DecimalChange",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 318,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newDecimals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 320,
                  "src": "6564:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 317,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6564:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6563:19:5"
            },
            "src": "6544:39:5"
          },
          {
            "body": {
              "id": 332,
              "nodeType": "Block",
              "src": "6794:83:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 323,
                      "name": "checkCloseTimer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 456,
                      "src": "6804:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6804:17:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 325,
                  "nodeType": "ExpressionStatement",
                  "src": "6804:17:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 326,
                    "name": "crowdsaleEnded",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 239,
                    "src": "6835:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 330,
                  "nodeType": "IfStatement",
                  "src": "6831:28:5",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 327,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "6851:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6851:8:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 329,
                    "nodeType": "ExpressionStatement",
                    "src": "6851:8:5"
                  }
                },
                {
                  "id": 331,
                  "nodeType": "PlaceholderStatement",
                  "src": "6869:1:5"
                }
              ]
            },
            "documentation": {
              "id": 321,
              "nodeType": "StructuredDocumentation",
              "src": "6666:97:5",
              "text": " Only allow some actions before the crowdsale closes, whether it's open or not."
            },
            "id": 333,
            "name": "onlyBeforeClosed",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6794:0:5"
            },
            "src": "6768:109:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 346,
              "nodeType": "Block",
              "src": "7042:84:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 336,
                      "name": "checkCloseTimer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 456,
                      "src": "7052:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7052:17:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 338,
                  "nodeType": "ExpressionStatement",
                  "src": "7052:17:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "7083:15:5",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 339,
                      "name": "crowdsaleEnded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 239,
                      "src": "7084:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 344,
                  "nodeType": "IfStatement",
                  "src": "7079:29:5",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 341,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "7100:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7100:8:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 343,
                    "nodeType": "ExpressionStatement",
                    "src": "7100:8:5"
                  }
                },
                {
                  "id": 345,
                  "nodeType": "PlaceholderStatement",
                  "src": "7118:1:5"
                }
              ]
            },
            "documentation": {
              "id": 334,
              "nodeType": "StructuredDocumentation",
              "src": "6887:125:5",
              "text": " Only allow some actions after the crowdsale is over.\n Will set the crowdsale closed if it should be."
            },
            "id": 347,
            "name": "onlyAfterClosed",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7042:0:5"
            },
            "src": "7017:109:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 359,
              "nodeType": "Block",
              "src": "7238:84:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 350,
                      "name": "checkOpenTimer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 435,
                      "src": "7248:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7248:16:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "7248:16:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 353,
                    "name": "crowdsaleStarted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 237,
                    "src": "7278:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 357,
                  "nodeType": "IfStatement",
                  "src": "7274:30:5",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 354,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "7296:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7296:8:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 356,
                    "nodeType": "ExpressionStatement",
                    "src": "7296:8:5"
                  }
                },
                {
                  "id": 358,
                  "nodeType": "PlaceholderStatement",
                  "src": "7314:1:5"
                }
              ]
            },
            "documentation": {
              "id": 348,
              "nodeType": "StructuredDocumentation",
              "src": "7136:71:5",
              "text": " Only allow some actions before the crowdsale starts."
            },
            "id": 360,
            "name": "onlyBeforeOpened",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7238:0:5"
            },
            "src": "7212:110:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 381,
              "nodeType": "Block",
              "src": "7491:150:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 363,
                      "name": "checkOpenTimer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 435,
                      "src": "7501:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7501:16:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 365,
                  "nodeType": "ExpressionStatement",
                  "src": "7501:16:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 366,
                      "name": "checkCloseTimer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 456,
                      "src": "7527:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7527:17:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 368,
                  "nodeType": "ExpressionStatement",
                  "src": "7527:17:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 369,
                    "name": "crowdsaleEnded",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 239,
                    "src": "7558:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 373,
                  "nodeType": "IfStatement",
                  "src": "7554:28:5",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 370,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "7574:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7574:8:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 372,
                    "nodeType": "ExpressionStatement",
                    "src": "7574:8:5"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "7596:17:5",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 374,
                      "name": "crowdsaleStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 237,
                      "src": "7597:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 379,
                  "nodeType": "IfStatement",
                  "src": "7592:31:5",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 376,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "7615:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7615:8:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 378,
                    "nodeType": "ExpressionStatement",
                    "src": "7615:8:5"
                  }
                },
                {
                  "id": 380,
                  "nodeType": "PlaceholderStatement",
                  "src": "7633:1:5"
                }
              ]
            },
            "documentation": {
              "id": 361,
              "nodeType": "StructuredDocumentation",
              "src": "7332:125:5",
              "text": " Only allow some actions while the crowdsale is active.\n Will set the crowdsale open if it should be."
            },
            "id": 382,
            "name": "onlyDuringCrowdsale",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7491:0:5"
            },
            "src": "7462:179:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 397,
              "nodeType": "Block",
              "src": "7829:59:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 388,
                            "name": "openTimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "7847:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7860:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7847:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 391,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -17,
                            "src": "7865:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 392,
                            "name": "openTimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "7871:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7865:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7847:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 395,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7846:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 387,
                  "id": 396,
                  "nodeType": "Return",
                  "src": "7839:42:5"
                }
              ]
            },
            "documentation": {
              "id": 383,
              "nodeType": "StructuredDocumentation",
              "src": "7702:67:5",
              "text": " Determine if the crowdsale should open by timer."
            },
            "functionSelector": "ea663631",
            "id": 398,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "openTimerElapsed",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7799:2:5"
            },
            "returnParameters": {
              "id": 387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 386,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 398,
                  "src": "7823:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 385,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7823:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7822:6:5"
            },
            "scope": 724,
            "src": "7774:114:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 413,
              "nodeType": "Block",
              "src": "8027:61:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 404,
                            "name": "closeTimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 245,
                            "src": "8045:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8059:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8045:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 407,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -17,
                            "src": "8064:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 408,
                            "name": "closeTimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 245,
                            "src": "8070:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8064:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8045:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 411,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8044:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 403,
                  "id": 412,
                  "nodeType": "Return",
                  "src": "8037:44:5"
                }
              ]
            },
            "documentation": {
              "id": 399,
              "nodeType": "StructuredDocumentation",
              "src": "7898:68:5",
              "text": " Determine if the crowdsale should close by timer."
            },
            "functionSelector": "80f4531f",
            "id": 414,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "closeTimerElapsed",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7997:2:5"
            },
            "returnParameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 414,
                  "src": "8021:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8021:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8020:6:5"
            },
            "scope": 724,
            "src": "7971:117:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 434,
              "nodeType": "Block",
              "src": "8290:152:5",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 418,
                      "name": "openTimerElapsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 398,
                      "src": "8304:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8304:18:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 433,
                  "nodeType": "IfStatement",
                  "src": "8300:136:5",
                  "trueBody": {
                    "id": 432,
                    "nodeType": "Block",
                    "src": "8324:112:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 420,
                            "name": "crowdsaleStarted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 237,
                            "src": "8338:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8357:4:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "8338:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 423,
                        "nodeType": "ExpressionStatement",
                        "src": "8338:23:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 424,
                            "name": "openTimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "8375:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8387:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8375:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 427,
                        "nodeType": "ExpressionStatement",
                        "src": "8375:13:5"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 429,
                              "name": "now",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -17,
                              "src": "8421:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 428,
                            "name": "CrowdsaleOpen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 304,
                            "src": "8407:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8407:18:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 431,
                        "nodeType": "EmitStatement",
                        "src": "8402:23:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 415,
              "nodeType": "StructuredDocumentation",
              "src": "8098:154:5",
              "text": " If the open timer has elapsed, start the crowdsale.\n Can be called by people, but also gets called when people try to contribute."
            },
            "functionSelector": "dd3260fc",
            "id": 435,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkOpenTimer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8280:2:5"
            },
            "returnParameters": {
              "id": 417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8290:0:5"
            },
            "scope": 724,
            "src": "8257:185:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 455,
              "nodeType": "Block",
              "src": "8561:153:5",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 439,
                      "name": "closeTimerElapsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 414,
                      "src": "8575:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8575:19:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 454,
                  "nodeType": "IfStatement",
                  "src": "8571:137:5",
                  "trueBody": {
                    "id": 453,
                    "nodeType": "Block",
                    "src": "8596:112:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 441,
                            "name": "crowdsaleEnded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 239,
                            "src": "8610:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8627:4:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "8610:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 444,
                        "nodeType": "ExpressionStatement",
                        "src": "8610:21:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 445,
                            "name": "closeTimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 245,
                            "src": "8645:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8658:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8645:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 448,
                        "nodeType": "ExpressionStatement",
                        "src": "8645:14:5"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 450,
                              "name": "now",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -17,
                              "src": "8693:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 449,
                            "name": "CrowdsaleClose",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 316,
                            "src": "8678:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8678:19:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 452,
                        "nodeType": "EmitStatement",
                        "src": "8673:24:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 436,
              "nodeType": "StructuredDocumentation",
              "src": "8452:70:5",
              "text": " If the close timer has elapsed, stop the crowdsale."
            },
            "functionSelector": "1f4425f3",
            "id": 456,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkCloseTimer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8551:2:5"
            },
            "returnParameters": {
              "id": 438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8561:0:5"
            },
            "scope": 724,
            "src": "8527:187:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 476,
              "nodeType": "Block",
              "src": "8854:215:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 465,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 462,
                                "name": "crowdsaleStarted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 237,
                                "src": "8978:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 463,
                                  "name": "openTimerElapsed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 398,
                                  "src": "8998:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                    "typeString": "function () view returns (bool)"
                                  }
                                },
                                "id": 464,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8998:18:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "8978:38:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 466,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8977:40:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "9021:40:5",
                          "subExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 470,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 467,
                                  "name": "crowdsaleEnded",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 239,
                                  "src": "9023:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 468,
                                    "name": "closeTimerElapsed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 414,
                                    "src": "9041:17:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                      "typeString": "function () view returns (bool)"
                                    }
                                  },
                                  "id": 469,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9041:19:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "9023:37:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 471,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9022:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8977:84:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 474,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8976:86:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 461,
                  "id": 475,
                  "nodeType": "Return",
                  "src": "8969:93:5"
                }
              ]
            },
            "documentation": {
              "id": 457,
              "nodeType": "StructuredDocumentation",
              "src": "8724:69:5",
              "text": " Determine if the crowdsale is currently happening."
            },
            "functionSelector": "0118e686",
            "id": 477,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCrowdsaleActive",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8824:2:5"
            },
            "returnParameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 460,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 477,
                  "src": "8848:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 459,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8848:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8847:6:5"
            },
            "scope": 724,
            "src": "8798:271:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 491,
              "nodeType": "Block",
              "src": "9313:70:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 487,
                      "name": "maxCrowdsaleSupplyInWholeTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "9323:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 488,
                      "name": "newMaxInWholeTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 480,
                      "src": "9357:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9323:53:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 490,
                  "nodeType": "ExpressionStatement",
                  "src": "9323:53:5"
                }
              ]
            },
            "documentation": {
              "id": 478,
              "nodeType": "StructuredDocumentation",
              "src": "9141:85:5",
              "text": " Before the crowdsale opens, the max token count can be configured."
            },
            "functionSelector": "6f8b44b0",
            "id": 492,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 483,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 482,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11084,
                  "src": "9286:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "9286:9:5"
              },
              {
                "arguments": null,
                "id": 485,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 484,
                  "name": "onlyBeforeOpened",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 360,
                  "src": "9296:16:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "9296:16:5"
              }
            ],
            "name": "setMaxSupply",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 480,
                  "mutability": "mutable",
                  "name": "newMaxInWholeTokens",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 492,
                  "src": "9253:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9253:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9252:26:5"
            },
            "returnParameters": {
              "id": 486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9313:0:5"
            },
            "scope": 724,
            "src": "9231:152:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 512,
              "nodeType": "Block",
              "src": "9524:96:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 500,
                      "name": "crowdsaleStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 237,
                      "src": "9534:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9553:4:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "9534:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 503,
                  "nodeType": "ExpressionStatement",
                  "src": "9534:23:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 504,
                      "name": "openTimer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 242,
                      "src": "9567:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9579:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9567:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 507,
                  "nodeType": "ExpressionStatement",
                  "src": "9567:13:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 509,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -17,
                        "src": "9609:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 508,
                      "name": "CrowdsaleOpen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 304,
                      "src": "9595:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9595:18:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 511,
                  "nodeType": "EmitStatement",
                  "src": "9590:23:5"
                }
              ]
            },
            "documentation": {
              "id": 493,
              "nodeType": "StructuredDocumentation",
              "src": "9393:67:5",
              "text": " Allow the owner to start the crowdsale manually."
            },
            "functionSelector": "28ef6f40",
            "id": 513,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 496,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 495,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11084,
                  "src": "9497:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "9497:9:5"
              },
              {
                "arguments": null,
                "id": 498,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 497,
                  "name": "onlyBeforeOpened",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 360,
                  "src": "9507:16:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "9507:16:5"
              }
            ],
            "name": "openCrowdsale",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9487:2:5"
            },
            "returnParameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9524:0:5"
            },
            "scope": 724,
            "src": "9465:155:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 531,
              "nodeType": "Block",
              "src": "10104:61:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 523,
                      "name": "openTimer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 242,
                      "src": "10114:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 524,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -17,
                        "src": "10126:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 525,
                          "name": "minutesFromNow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 516,
                          "src": "10132:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10149:9:5",
                          "subdenomination": "minutes",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "1"
                        },
                        "src": "10132:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10126:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10114:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 530,
                  "nodeType": "ExpressionStatement",
                  "src": "10114:44:5"
                }
              ]
            },
            "documentation": {
              "id": 514,
              "nodeType": "StructuredDocumentation",
              "src": "9630:380:5",
              "text": " Let the owner start the timer for the crowdsale start. Without further owner intervention,\n anyone will be able to open the crowdsale when the timer expires.\n Further calls will re-set the timer to count from the time the transaction is processed.\n The timer can be re-set after it has tripped, unless someone has already opened the crowdsale."
            },
            "functionSelector": "79d220ae",
            "id": 532,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 519,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 518,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11084,
                  "src": "10077:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10077:9:5"
              },
              {
                "arguments": null,
                "id": 521,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 520,
                  "name": "onlyBeforeOpened",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 360,
                  "src": "10087:16:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10087:16:5"
              }
            ],
            "name": "setCrowdsaleOpenTimerFor",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 516,
                  "mutability": "mutable",
                  "name": "minutesFromNow",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 532,
                  "src": "10049:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10049:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10048:21:5"
            },
            "returnParameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10104:0:5"
            },
            "scope": 724,
            "src": "10015:150:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 544,
              "nodeType": "Block",
              "src": "10357:30:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 540,
                      "name": "openTimer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 242,
                      "src": "10367:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10379:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10367:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 543,
                  "nodeType": "ExpressionStatement",
                  "src": "10367:13:5"
                }
              ]
            },
            "documentation": {
              "id": 533,
              "nodeType": "StructuredDocumentation",
              "src": "10175:108:5",
              "text": " Let the owner stop the crowdsale open timer, as long as the crowdsale has not yet opened."
            },
            "functionSelector": "6d6e2710",
            "id": 545,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 536,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 535,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11084,
                  "src": "10330:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10330:9:5"
              },
              {
                "arguments": null,
                "id": 538,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 537,
                  "name": "onlyBeforeOpened",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 360,
                  "src": "10340:16:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10340:16:5"
              }
            ],
            "name": "clearCrowdsaleOpenTimer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10320:2:5"
            },
            "returnParameters": {
              "id": 539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10357:0:5"
            },
            "scope": 724,
            "src": "10288:99:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 563,
              "nodeType": "Block",
              "src": "10724:62:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 555,
                      "name": "closeTimer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "10734:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 556,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -17,
                        "src": "10747:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 557,
                          "name": "minutesFromNow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 548,
                          "src": "10753:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10770:9:5",
                          "subdenomination": "minutes",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "1"
                        },
                        "src": "10753:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10747:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10734:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 562,
                  "nodeType": "ExpressionStatement",
                  "src": "10734:45:5"
                }
              ]
            },
            "documentation": {
              "id": 546,
              "nodeType": "StructuredDocumentation",
              "src": "10397:232:5",
              "text": " Let the owner start the timer for the crowdsale end. Counts from when the function is called,\n *not* from the start of the crowdsale.\n It is possible, but a bad idea, to set this before the open timer."
            },
            "functionSelector": "e330a737",
            "id": 564,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 551,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 550,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11084,
                  "src": "10697:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10697:9:5"
              },
              {
                "arguments": null,
                "id": 553,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 552,
                  "name": "onlyBeforeClosed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 333,
                  "src": "10707:16:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10707:16:5"
              }
            ],
            "name": "setCrowdsaleCloseTimerFor",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 548,
                  "mutability": "mutable",
                  "name": "minutesFromNow",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 564,
                  "src": "10669:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10669:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10668:21:5"
            },
            "returnParameters": {
              "id": 554,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10724:0:5"
            },
            "scope": 724,
            "src": "10634:152:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 576,
              "nodeType": "Block",
              "src": "10970:31:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 572,
                      "name": "closeTimer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "10980:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10993:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10980:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "10980:14:5"
                }
              ]
            },
            "documentation": {
              "id": 565,
              "nodeType": "StructuredDocumentation",
              "src": "10796:99:5",
              "text": " Let the owner stop the crowdsale close timer, as long as it has not yet expired."
            },
            "functionSelector": "0d051c52",
            "id": 577,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 568,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 567,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11084,
                  "src": "10943:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10943:9:5"
              },
              {
                "arguments": null,
                "id": 570,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 569,
                  "name": "onlyBeforeClosed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 333,
                  "src": "10953:16:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10953:16:5"
              }
            ],
            "name": "clearCrowdsaleCloseTimer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10933:2:5"
            },
            "returnParameters": {
              "id": 571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10970:0:5"
            },
            "scope": 724,
            "src": "10900:101:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 657,
              "nodeType": "Block",
              "src": "11336:1236:5",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 585,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "11350:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "11350:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11363:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11350:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 593,
                  "nodeType": "IfStatement",
                  "src": "11346:53:5",
                  "trueBody": {
                    "id": 592,
                    "nodeType": "Block",
                    "src": "11366:33:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 589,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "11380:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11380:8:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 591,
                        "nodeType": "ExpressionStatement",
                        "src": "11380:8:5"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    595
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 595,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 657,
                      "src": "11409:11:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 594,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11409:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 601,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 599,
                        "name": "wholeTokensPerEth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "11437:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 596,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11423:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "11423:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11313,
                      "src": "11423:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11423:32:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11409:46:5"
                },
                {
                  "assignments": [
                    603
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 603,
                      "mutability": "mutable",
                      "name": "newTotalSupply",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 657,
                      "src": "11531:22:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 602,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11531:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 608,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 606,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 595,
                        "src": "11572:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 604,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8847,
                        "src": "11556:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11233,
                      "src": "11556:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11556:23:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11531:48:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 609,
                      "name": "newTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 603,
                      "src": "11602:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 612,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 610,
                              "name": "wholeTokensReserved",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 232,
                              "src": "11620:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 611,
                              "name": "maxCrowdsaleSupplyInWholeTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 229,
                              "src": "11642:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11620:53:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 613,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "11619:55:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "id": 616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11677:2:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3138",
                          "id": 615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11683:2:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "src": "11677:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "11619:66:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11602:83:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 623,
                  "nodeType": "IfStatement",
                  "src": "11598:234:5",
                  "trueBody": {
                    "id": 622,
                    "nodeType": "Block",
                    "src": "11687:145:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 619,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "11813:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11813:8:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 621,
                        "nodeType": "ExpressionStatement",
                        "src": "11813:8:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 624,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8847,
                      "src": "12085:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 625,
                      "name": "newTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 603,
                      "src": "12099:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12085:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 627,
                  "nodeType": "ExpressionStatement",
                  "src": "12085:28:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 628,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8722,
                        "src": "12123:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 630,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 629,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 580,
                        "src": "12132:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12123:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 635,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 595,
                          "src": "12169:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 631,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8722,
                            "src": "12145:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 633,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 632,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 580,
                            "src": "12154:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12145:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11233,
                        "src": "12145:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12145:31:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12123:53:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 638,
                  "nodeType": "ExpressionStatement",
                  "src": "12123:53:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 640,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -17,
                        "src": "12247:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 641,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12252:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "12252:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 643,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 580,
                        "src": "12263:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 639,
                      "name": "TokenPurchase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 312,
                      "src": "12233:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12233:40:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 645,
                  "nodeType": "EmitStatement",
                  "src": "12228:45:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "12503:28:5",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 648,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12521:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "12521:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 646,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 227,
                          "src": "12504:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "send",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "12504:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) returns (bool)"
                        }
                      },
                      "id": 650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12504:27:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 656,
                  "nodeType": "IfStatement",
                  "src": "12499:67:5",
                  "trueBody": {
                    "id": 655,
                    "nodeType": "Block",
                    "src": "12533:33:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 652,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "12547:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12547:8:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 654,
                        "nodeType": "ExpressionStatement",
                        "src": "12547:8:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 578,
              "nodeType": "StructuredDocumentation",
              "src": "11063:198:5",
              "text": " Create tokens for the given address, in response to a payment.\n Cannot be called by outside callers; use the fallback function, which will create tokens for whoever pays it."
            },
            "id": 658,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 583,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 582,
                  "name": "onlyDuringCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 382,
                  "src": "11316:19:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "11316:19:5"
              }
            ],
            "name": "createTokens",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 580,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 658,
                  "src": "11288:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 579,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11288:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11287:19:5"
            },
            "returnParameters": {
              "id": 584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11336:0:5"
            },
            "scope": 724,
            "src": "11266:1306:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 678,
              "nodeType": "Block",
              "src": "12715:96:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 666,
                      "name": "crowdsaleEnded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 239,
                      "src": "12725:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12742:4:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "12725:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 669,
                  "nodeType": "ExpressionStatement",
                  "src": "12725:21:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 670,
                      "name": "closeTimer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "12756:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12769:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12756:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 673,
                  "nodeType": "ExpressionStatement",
                  "src": "12756:14:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 675,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -17,
                        "src": "12800:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 674,
                      "name": "CrowdsaleClose",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "12785:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12785:19:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 677,
                  "nodeType": "EmitStatement",
                  "src": "12780:24:5"
                }
              ]
            },
            "documentation": {
              "id": 659,
              "nodeType": "StructuredDocumentation",
              "src": "12582:65:5",
              "text": " Allow the owner to end the crowdsale manually."
            },
            "functionSelector": "983c0a01",
            "id": 679,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 662,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 661,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11084,
                  "src": "12685:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "12685:9:5"
              },
              {
                "arguments": null,
                "id": 664,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 663,
                  "name": "onlyDuringCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 382,
                  "src": "12695:19:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "12695:19:5"
              }
            ],
            "name": "closeCrowdsale",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 660,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12675:2:5"
            },
            "returnParameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12715:0:5"
            },
            "scope": 724,
            "src": "12652:159:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 697,
              "nodeType": "Block",
              "src": "13449:142:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 689,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 225,
                      "src": "13490:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 690,
                      "name": "newDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 682,
                      "src": "13501:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "13490:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 692,
                  "nodeType": "ExpressionStatement",
                  "src": "13490:22:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 694,
                        "name": "newDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 682,
                        "src": "13572:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 693,
                      "name": "DecimalChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 320,
                      "src": "13558:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
                        "typeString": "function (uint8)"
                      }
                    },
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13558:26:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 696,
                  "nodeType": "EmitStatement",
                  "src": "13553:31:5"
                }
              ]
            },
            "documentation": {
              "id": 680,
              "nodeType": "StructuredDocumentation",
              "src": "12889:482:5",
              "text": " When the crowdsale is finished, the contract owner may adjust the decimal places for display purposes.\n This should work like a 10-to-1 split or reverse-split.\n The point of this mechanism is to keep the individual MRV tokens from getting inconveniently valuable or cheap.\n However, it relies on the contract owner taking the time to update the decimal place value.\n Note that this changes the decimals IMMEDIATELY with NO NOTICE to users."
            },
            "functionSelector": "7a1395aa",
            "id": 698,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 685,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 684,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11084,
                  "src": "13423:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "13423:9:5"
              },
              {
                "arguments": null,
                "id": 687,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 686,
                  "name": "onlyAfterClosed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 347,
                  "src": "13433:15:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "13433:15:5"
              }
            ],
            "name": "setDecimals",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 682,
                  "mutability": "mutable",
                  "name": "newDecimals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 698,
                  "src": "13397:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 681,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "13397:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13396:19:5"
            },
            "returnParameters": {
              "id": 688,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13449:0:5"
            },
            "scope": 724,
            "src": "13376:215:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 722,
              "nodeType": "Block",
              "src": "13845:176:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 716,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "13999:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MRVToken_$724",
                                    "typeString": "contract MRVToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MRVToken_$724",
                                    "typeString": "contract MRVToken"
                                  }
                                ],
                                "id": 715,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13991:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 714,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13991:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13991:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "13991:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 709,
                                      "name": "owner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11071,
                                      "src": "13976:5:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 710,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13976:7:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 708,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "13968:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint160_$",
                                    "typeString": "type(uint160)"
                                  },
                                  "typeName": {
                                    "id": 707,
                                    "name": "uint160",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13968:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 711,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13968:16:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              ],
                              "id": 706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13960:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 705,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13960:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 712,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13960:25:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "send",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "13960:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) returns (bool)"
                          }
                        },
                        "id": 719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13960:53:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 704,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "13953:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13953:61:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 721,
                  "nodeType": "ExpressionStatement",
                  "src": "13953:61:5"
                }
              ]
            },
            "documentation": {
              "id": 699,
              "nodeType": "StructuredDocumentation",
              "src": "13601:196:5",
              "text": " If Ether somehow manages to get into this contract, provide a way to get it out again.\n During normal crowdsale operation, ETH is immediately forwarded to the beneficiary."
            },
            "functionSelector": "9f727c27",
            "id": 723,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 702,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 701,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11084,
                  "src": "13835:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "13835:9:5"
              }
            ],
            "name": "reclaimEther",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13823:2:5"
            },
            "returnParameters": {
              "id": 703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13845:0:5"
            },
            "scope": 724,
            "src": "13802:219:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 725,
        "src": "2758:11266:5"
      }
    ],
    "src": "0:14065:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.10+commit.00c0fcaf.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {
        "0xf82aa3c8d92a1044b702b0c9718bd99d353a4a85a215bdb4fe6c6a04b5f541e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "time",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "name": "CrowdsaleOpen",
          "type": "event"
        },
        "0xd240e127ddfc99c27bdd1c45b264d1954a1e2bdb17a4c37e81586fd141288261": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "time",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "indexed": false,
              "name": "etherAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "indexed": false,
              "name": "from",
              "type": "address",
              "internalType": "address"
            }
          ],
          "name": "TokenPurchase",
          "type": "event"
        },
        "0x99424d4740b41446c45fa894e3dda8489b8ef8df8a37f8035f83053ed26485c1": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "time",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "name": "CrowdsaleClose",
          "type": "event"
        },
        "0xed6150ec960548590c920ded6ef554ec9e451dd7b4c85f62fb3760812cd72cf1": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "newDecimals",
              "type": "uint8",
              "internalType": "uint8"
            }
          ],
          "name": "DecimalChange",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xab6cf87a50f17d7f5e1feaf81b6fe9ffbe8ebf84",
      "updated_at": 1498363737182
    },
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x99424d4740b41446c45fa894e3dda8489b8ef8df8a37f8035f83053ed26485c1": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "name": "CrowdsaleClose",
          "type": "event"
        },
        "0xf82aa3c8d92a1044b702b0c9718bd99d353a4a85a215bdb4fe6c6a04b5f541e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "name": "CrowdsaleOpen",
          "type": "event"
        },
        "0xed6150ec960548590c920ded6ef554ec9e451dd7b4c85f62fb3760812cd72cf1": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "newDecimals",
              "type": "uint8"
            }
          ],
          "name": "DecimalChange",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xd240e127ddfc99c27bdd1c45b264d1954a1e2bdb17a4c37e81586fd141288261": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "etherAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "from",
              "type": "address"
            }
          ],
          "name": "TokenPurchase",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xdB15a4FD9E7cd7b4BF5b923C9381ac3A00d3B8eb",
      "transactionHash": "0xb3ccd9c5e3c2c7ef9379d727dcbce0bd1cd8c713e75e107e87d94dec2ff2c462"
    }
  },
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-12-11T02:46:40.786Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "_owner": "address The address which owns the funds.",
          "_spender": "address The address which will spend the funds. return A uint256 specifing the amount of tokens still avaible for the spender."
        }
      },
      "approve(address,uint256)": {
        "details": "Aprove the passed address to spend the specified amount of tokens on behalf of msg.sender.",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "_owner": "The address to query the the balance of.  return An uint256 representing the amount owned by the passed address."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "reclaimContract(address)": {
        "details": "Reclaim ownership of Ownable contracts",
        "params": {
          "contractAddr": "The address of the Ownable to be reclaimed."
        }
      },
      "reclaimToken(address)": {
        "details": "Reclaim all IERC20 compatible tokens",
        "params": {
          "tokenAddr": "address The address of the token contract"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "tokenFallback(address,uint256,bytes)": {
        "details": "Reject all ERC23 compatible tokens"
      },
      "transfer(address,uint256)": {
        "details": "transfer token for a specified address",
        "params": {
          "_to": "The address to transfer to.",
          "_value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another",
        "params": {
          "_from": "address The address which you want to send tokens from",
          "_to": "address The address which you want to transfer to",
          "_value": "uint256 the amout of tokens to be transfered"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "checkCloseTimer()": {
        "notice": "If the close timer has elapsed, stop the crowdsale."
      },
      "checkOpenTimer()": {
        "notice": "If the open timer has elapsed, start the crowdsale. Can be called by people, but also gets called when people try to contribute."
      },
      "clearCrowdsaleCloseTimer()": {
        "notice": "Let the owner stop the crowdsale close timer, as long as it has not yet expired."
      },
      "clearCrowdsaleOpenTimer()": {
        "notice": "Let the owner stop the crowdsale open timer, as long as the crowdsale has not yet opened."
      },
      "closeCrowdsale()": {
        "notice": "Allow the owner to end the crowdsale manually."
      },
      "closeTimerElapsed()": {
        "notice": "Determine if the crowdsale should close by timer."
      },
      "constructor": "Deploy a new MRVToken contract, paying crowdsale proceeds to the given address, and awarding reserved tokens to the other given address.",
      "isCrowdsaleActive()": {
        "notice": "Determine if the crowdsale is currently happening."
      },
      "openCrowdsale()": {
        "notice": "Allow the owner to start the crowdsale manually."
      },
      "openTimerElapsed()": {
        "notice": "Determine if the crowdsale should open by timer."
      },
      "reclaimEther()": {
        "notice": "If Ether somehow manages to get into this contract, provide a way to get it out again. During normal crowdsale operation, ETH is immediately forwarded to the beneficiary."
      },
      "setCrowdsaleCloseTimerFor(uint256)": {
        "notice": "Let the owner start the timer for the crowdsale end. Counts from when the function is called, *not* from the start of the crowdsale. It is possible, but a bad idea, to set this before the open timer."
      },
      "setCrowdsaleOpenTimerFor(uint256)": {
        "notice": "Let the owner start the timer for the crowdsale start. Without further owner intervention, anyone will be able to open the crowdsale when the timer expires. Further calls will re-set the timer to count from the time the transaction is processed. The timer can be re-set after it has tripped, unless someone has already opened the crowdsale."
      },
      "setDecimals(uint8)": {
        "notice": "When the crowdsale is finished, the contract owner may adjust the decimal places for display purposes. This should work like a 10-to-1 split or reverse-split. The point of this mechanism is to keep the individual MRV tokens from getting inconveniently valuable or cheap. However, it relies on the contract owner taking the time to update the decimal place value. Note that this changes the decimals IMMEDIATELY with NO NOTICE to users."
      },
      "setMaxSupply(uint256)": {
        "notice": "Before the crowdsale opens, the max token count can be configured."
      }
    },
    "notice": "!!!WARNING!!! Due to breaking changes in OpenZeppelin, THE CODE OF THIS CONTRACT IS SIGNIFICANTLY DIFFERENT FROM THAT WHICH IS ACTUALLY DEPLOYED ON THE MAINNET in order to allow it to build on current Solidity against current OpenZeppelin. Unless I've missed a good way to ship archival bytecode to represent a contract for testing purposes, blame the OZ devs and the Solidity devs and the Truffle devs not talking to each other about a sensible migration system for projects with existing mainnet code deployed that are under active development. MRV token, distributed by crowdsale. Token and crowdsale functionality are unified in a single contract, to make clear and restrict the conditions under which tokens can be created or destroyed. Derived from OpenZeppelin CrowdsaleToken template. Key Crowdsale Facts:  * MRV tokens will be sold at a rate of 5,000 per ETH. * All MRV token sales are final. No refunds can be issued by the contract. * Unless adjusted later by the crowdsale operator, up to 100 million tokens will be available. * An additional 5,000 tokens are reserved.  * Participate in the crowdsale by sending ETH to this contract, when the crowdsale is open. * Sending more ETH than required to purchase all the remaining tokens will fail. * Timers can be set to allow anyone to open/close the crowdsale at the proper time. The crowdsale   operator reserves the right to set, unset, and reset these timers at any time, for any reason,   and without notice. * The operator of the crowdsale has the ability to manually open it and close it, and reserves   the right to do so at any time, for any reason, and without notice. * The crowdsale cannot be reopened, and no tokens can be created, after the crowdsale closes. * The crowdsale operator reserves the right to adjust the decimal places of the MRV token at   any time after the crowdsale closes, for any reason, and without notice. MRV tokens are   initially divisible to 18 decimal places. * The crowdsale operator reserves the right to not open or close the crowdsale, not set the   open or close timer, and generally refrain from doing things that the contract would otherwise   authorize them to do. * The crowdsale operator reserves the right to claim and keep any ETH or tokens that end up in   the contract's account. During normal crowdsale operation, ETH is not stored in the contract's   account, and is instead sent directly to the beneficiary."
  }
}