{
  "contractName": "MacroverseStarRegistry",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "depositTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialMinDepositInAtomicUnits",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "starSeed",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "StarOwnershipChange",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "depositFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "expectedMrvBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "minDepositInAtomicUnits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contractAddr",
          "type": "address"
        }
      ],
      "name": "reclaimContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reclaimEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenAddress",
      "outputs": [
        {
          "internalType": "contract MRVToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMinimumDepositInAtomicUnits",
          "type": "uint256"
        }
      ],
      "name": "setMinimumDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "starSeed",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "depositInAtomicUnits",
          "type": "uint256"
        }
      ],
      "name": "claimOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "starSeed",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "starSeed",
          "type": "bytes32"
        }
      ],
      "name": "abdicateOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "otherToken",
          "type": "address"
        }
      ],
      "name": "reclaimToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"depositTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialMinDepositInAtomicUnits\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"starSeed\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"StarOwnershipChange\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"starSeed\",\"type\":\"bytes32\"}],\"name\":\"abdicateOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"starSeed\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"depositInAtomicUnits\",\"type\":\"uint256\"}],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"depositFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectedMrvBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minDepositInAtomicUnits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"reclaimContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reclaimEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"otherToken\",\"type\":\"address\"}],\"name\":\"reclaimToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMinimumDepositInAtomicUnits\",\"type\":\"uint256\"}],\"name\":\"setMinimumDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"contract MRVToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"starSeed\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"reclaimContract(address)\":{\"details\":\"Reclaim ownership of Ownable contracts\",\"params\":{\"contractAddr\":\"The address of the Ownable to be reclaimed.\"}},\"reclaimEther()\":{\"details\":\"Transfer all Ether held by the contract to the owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"abdicateOwnership(bytes32)\":{\"notice\":\"Give up ownership of an owned star. The MRV deposit originally paid to acquire ownership of the star will be paid out to the sender of the message.\"},\"claimOwnership(bytes32,uint256)\":{\"notice\":\"Acquire ownership of an unclaimed star. To claim a star, you need to put up a deposit of MRV. You need to call approve() on the MRV token contract to allow this contract to debit the requested deposit from your account. The deposit must be more than the current minimum deposit. YOU and ONLY YOU are responsible for remembering the seeds of stars you own, so you can get your deposits back when you are done with them. You can't easily get a listing from this contract.\"},\"constructor\":\"Deploy a new copy of the Macroverse Star Registry. The given token will be used to pay deposits, and the given minimum deposit size will be required.\",\"reclaimToken(address)\":{\"notice\":\"Allow the owner to collect any non-MRV tokens, or any excess MRV, that ends up in this contract.\"},\"setMinimumDeposit(uint256)\":{\"notice\":\"Allow the owner to set the minimum deposit amount for granting new ownership claims.\"},\"transferOwnership(bytes32,address)\":{\"notice\":\"Transfer ownership of a star from the sender to the given address. You don't need to meet the access control requirements to get rid of your owned stars, or to own stars. But you might not be able to query anything about them.\"}},\"notice\":\"The Macroverse Star Registry keeps track of who currently owns virtual real estate in the Macroverse world, at the scale of star systems and other star-like objects. Ownership is handled by having the first person who wants to own an object claim it, by putting up a deposit in MRV tokens of a certain minimum size. Note that the owner of the contract reserves the right to adjust this minimum size at any time, for any reason, and without notice. Since the size of the deposit to be made is specified by the claimant, trying to claim something when the minimum deposit size has been increased without your knowledge should at worst result in wasted gas. Owners of objects can send them to other addresses, and an owner can abdicate ownership of an object and collect the original MRV deposit used to claim it. Note that the claiming system used here is not protected against front-running. Anyone can see your claim transaction before it is mined, and claim the object you were going for first. However, they would then need to find it among the many billions of objects in the Macroverse universe, because this contract only records ownership by seed. Note that ownership of a star system does not necessarily imply ownership of everything in it. Just as one person can own a condo in another person's building, one person can own a planet in another person's star system. All ownership is recorded using star seeds; no attempt is made to enforce that a given seed actually exists in the Macroverse world. It is possible to purchase (and sell!) nonexistent star systems, or star systems that you don't know where they are. Caveat emptor. The deployer of this contract reserves the right to supersede it with a new version at any time, for any reason, and without notice. The deployer of this contract reserves the right to leave it in place as is indefinitely. The deployer of this contract reserves the right to claim and keep any tokens or ETH or contracts sent to this contract, in excess of the MRV balance that this contract thinks it is supposed to have. TODO: Note that the deployed version of this contract on the mainnet is slightly different! In particular, this version reverts where the deployed version throws, to make newer compilers stop warning whenever you build the Macroverse project.\"}},\"settings\":{\"compilationTarget\":{\"/z/home/anovak/workspace/macroverse/contracts/MacroverseStarRegistry.sol\":\"MacroverseStarRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/z/home/anovak/workspace/macroverse/contracts/HasNoContracts.sol\":{\"keccak256\":\"0x9fc0b6fb78952f6574d76c8326d34cb240078fb6955f6741e0353f47ad52307a\",\"urls\":[\"bzz-raw://f81e0bd89c2e7749ca610ccee4f08057177193a41fd718f1469c195af836596e\",\"dweb:/ipfs/QmT15knS5M1rCR6tVRVgbNzrFC89LNW6iJJMov7TcWSZyF\"]},\"/z/home/anovak/workspace/macroverse/contracts/HasNoEther.sol\":{\"keccak256\":\"0x7bde3b3e8b2976b488151544b9d909251bdb3be358694846a4e4920ef6923337\",\"urls\":[\"bzz-raw://2c53a731b0136a39cad6d9ed48ce89451e40017bc34f75f0d36481194c4fc531\",\"dweb:/ipfs/QmUy9aTDVbo1txDXDtJHdx6G9LskTZ589VPgTAbwGvhcC4\"]},\"/z/home/anovak/workspace/macroverse/contracts/HasNoTokens.sol\":{\"keccak256\":\"0x1ec94caeb2deddc95a10be6c186e1bd42357b982e7568a8d50c3109bcc9a0f5e\",\"urls\":[\"bzz-raw://79fbd7b185a9062bb26a5229a3e022fa5b59d7eae5332e138bb2f222fe971e55\",\"dweb:/ipfs/QmZG8C8tD1P7xKoKU6KYnV91y5bW186vJJ92rhw3TGU11t\"]},\"/z/home/anovak/workspace/macroverse/contracts/MRVToken.sol\":{\"keccak256\":\"0x8efaf54c8d51a95ac9aa2a4fc264a151b8b081b37584eb14b21d5c58c3a619d5\",\"urls\":[\"bzz-raw://5c666e4d91a90967249a952120623e63fd1220b15200a5b944f4622b41c4efe9\",\"dweb:/ipfs/QmZGXs2YirXGVEM5BBzVvix3CgNVZoq6CTmfdmEDfTHzqH\"]},\"/z/home/anovak/workspace/macroverse/contracts/MacroverseStarRegistry.sol\":{\"keccak256\":\"0xce3aea84bc1ef460eba6ebb8c2a493d965b3ad4596d1dbc06733553a18db3d89\",\"urls\":[\"bzz-raw://667aadaaea588a3d9aa502032ab028f51fa36a29bccda43d1998dc928bbb1f4e\",\"dweb:/ipfs/QmZhCqYsxzhfu4q6Rqczu1m8jittd8ogKTgbwK5KspBC5m\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x310e66ba9e43bfd0bc6110c06e4c98e86e8515a85a295031413931fafb347b92\",\"urls\":[\"bzz-raw://8e061529b96bf38743c4ea16b44d53e145b3f16ec0a68151b1a690f348aad944\",\"dweb:/ipfs/QmR2hKcGi5NUNp1bWvjwvdv6J71ySp7ih5Ey3WxWkiRWh8\"]},\"openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa8b9207237f43e1af0feb1423db95cabf05989b89ff0d903b148a6f01856253f\",\"urls\":[\"bzz-raw://94271c7aeba6023ca590bcd32b59328ce78eefb55f0792fc87bd2c9720f45c2c\",\"dweb:/ipfs/QmXbG6dvnSqLvAXUVK9d26Sfi9d2kFtpxpo7mAuQYhKXPN\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9f5f241611b89edba99d342a5e826697c2bf26a567cd51b20e991344511b23b6\",\"urls\":[\"bzz-raw://dc9566acec64b1816d4f003928b3da56affd8dcd3385c7ef645ee1854acdc41b\",\"dweb:/ipfs/QmafEvnB89VjQTAtFqoHSYvgSABPkGgxkYnW4YbpmYDhxS\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x04a62cfe0d39754b6753634c582233889c4f1d5d68fcb139aaaa1ac8b8d7d50a\",\"urls\":[\"bzz-raw://ba3c2d5c4d9ec08208ce2be3f09dad8c2ca63668a351f6e8282f3c1bc6629d55\",\"dweb:/ipfs/QmSumrbcnCwfQ5UHTN7zR72EZ5hfdzofhmXDXgGFwNsXBS\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xcd7d59a57b078b399972308a44ad467d62d95a2924ae358b9acedad1b9bdf6ae\",\"urls\":[\"bzz-raw://c64b13b4abe515fd954cda736943c159e403934c17bcec70dc3b004f5832d369\",\"dweb:/ipfs/QmY5uk3UmEBAzPU36oPB2VAAMxVrcQs74MKnA3VmRFhdrN\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xd1f3a17da013bb360dfcc4d7028b6a60e7d444ad4926bb37a84d8bfa83d12812\",\"urls\":[\"bzz-raw://97dc02aa518fdcef216bd3f4b00a8e555e5513eb4b144e56c60fcfc4768acfff\",\"dweb:/ipfs/QmTQ2Yt1DV64KZffS4jo8XxUzSS4TTeE3oc1oWvkfY6MiN\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610e23380380610e238339818101604052604081101561003357600080fd5b508051602090910151600061004f6001600160e01b036100cd16565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35034156100a457600080fd5b600180546001600160a01b0319166001600160a01b0393909316929092179091556002556100d1565b3390565b610d43806100e06000396000f3fe6080604052600436106100ec5760003560e01c80639ba554391161008a578063dccbaa9911610059578063dccbaa9914610293578063e78ec42e146102bd578063ef5d6bbb146102e7578063f2fde38b14610320576100f6565b80639ba554391461020f5780639bf77fb41461023f5780639d76ea58146102695780639f727c271461027e576100f6565b80634ad2daaf116100c65780634ad2daaf1461018a578063715018a61461019f5780637dd56411146101b45780638da5cb5b146101fa576100f6565b806317ffc320146100fb5780632aed7f3f146101305780633a0a82ad14610163576100f6565b366100f657600080fd5b600080fd5b34801561010757600080fd5b5061012e6004803603602081101561011e57600080fd5b50356001600160a01b0316610353565b005b34801561013c57600080fd5b5061012e6004803603602081101561015357600080fd5b50356001600160a01b03166104ea565b34801561016f57600080fd5b506101786105be565b60408051918252519081900360200190f35b34801561019657600080fd5b506101786105c4565b3480156101ab57600080fd5b5061012e6105ca565b3480156101c057600080fd5b506101de600480360360208110156101d757600080fd5b503561066c565b604080516001600160a01b039092168252519081900360200190f35b34801561020657600080fd5b506101de610687565b34801561021b57600080fd5b5061012e6004803603604081101561023257600080fd5b5080359060200135610696565b34801561024b57600080fd5b506101786004803603602081101561026257600080fd5b50356107bf565b34801561027557600080fd5b506101de6107d1565b34801561028a57600080fd5b5061012e6107e0565b34801561029f57600080fd5b5061012e600480360360208110156102b657600080fd5b503561087b565b3480156102c957600080fd5b5061012e600480360360208110156102e057600080fd5b5035610974565b3480156102f357600080fd5b5061012e6004803603604081101561030a57600080fd5b50803590602001356001600160a01b03166109d1565b34801561032c57600080fd5b5061012e6004803603602081101561034357600080fd5b50356001600160a01b0316610a91565b61035b610b89565b6000546001600160a01b039081169116146103ab576040805162461bcd60e51b81526020600482018190526024820152600080516020610cee833981519152604482015290519081900360640190fd5b604080516370a0823160e01b8152306004820152905182916000916001600160a01b038416916370a08231916024808301926020929190829003018186803b1580156103f657600080fd5b505afa15801561040a573d6000803e3d6000fd5b505050506040513d602081101561042057600080fd5b50516001549091506001600160a01b03838116911614156104525760055461044f90829063ffffffff610b8d16565b90505b816001600160a01b031663a9059cbb610469610687565b836040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156104b957600080fd5b505af11580156104cd573d6000803e3d6000fd5b505050506040513d60208110156104e357600080fd5b5050505050565b6104f2610b89565b6000546001600160a01b03908116911614610542576040805162461bcd60e51b81526020600482018190526024820152600080516020610cee833981519152604482015290519081900360640190fd5b806001600160a01b03811663f2fde38b61055a610687565b6040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b1580156105a257600080fd5b505af11580156105b6573d6000803e3d6000fd5b505050505050565b60025481565b60055481565b6105d2610b89565b6000546001600160a01b03908116911614610622576040805162461bcd60e51b81526020600482018190526024820152600080516020610cee833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6003602052600090815260409020546001600160a01b031681565b6000546001600160a01b031690565b6000828152600360205260409020546001600160a01b0316156106b857600080fd5b6002548110156106c757600080fd5b600082815260036020908152604080832080546001600160a01b0319163317905560049091529020819055600554610705908263ffffffff610bd616565b600555604051339083907f575875f7fca9a5932686f3a3f2153e91772df070936be6bba7edbc61d339e60f90600090a3600154604080516323b872dd60e01b81523360048201523060248201526044810184905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561078f57600080fd5b505af11580156107a3573d6000803e3d6000fd5b505050506040513d60208110156107b957600080fd5b50505050565b60046020526000908152604090205481565b6001546001600160a01b031681565b6107e8610b89565b6000546001600160a01b03908116911614610838576040805162461bcd60e51b81526020600482018190526024820152600080516020610cee833981519152604482015290519081900360640190fd5b610840610687565b6001600160a01b03166108fc479081150290604051600060405180830381858888f19350505050158015610878573d6000803e3d6000fd5b50565b6000818152600360205260409020546001600160a01b0316331461089e57600080fd5b600081815260046020818152604080842080546003845291852080546001600160a01b03198116909155939092529290556005546001600160a01b03909116906108ee908363ffffffff610b8d16565b60055560405160009084907f575875f7fca9a5932686f3a3f2153e91772df070936be6bba7edbc61d339e60f908390a36001546040805163a9059cbb60e01b81526001600160a01b038481166004830152602482018690529151919092169163a9059cbb9160448083019260209291908290030181600087803b1580156104b957600080fd5b61097c610b89565b6000546001600160a01b039081169116146109cc576040805162461bcd60e51b81526020600482018190526024820152600080516020610cee833981519152604482015290519081900360640190fd5b600255565b6000828152600360205260409020546001600160a01b031633146109f457600080fd5b6001600160a01b038116610a0757600080fd5b6001600160a01b038116301415610a1d57600080fd5b6001546001600160a01b0382811691161415610a3857600080fd5b60008281526003602052604080822080546001600160a01b0319166001600160a01b0385169081179091559051909184917f575875f7fca9a5932686f3a3f2153e91772df070936be6bba7edbc61d339e60f9190a35050565b610a99610b89565b6000546001600160a01b03908116911614610ae9576040805162461bcd60e51b81526020600482018190526024820152600080516020610cee833981519152604482015290519081900360640190fd5b6001600160a01b038116610b2e5760405162461bcd60e51b8152600401808060200182810382526026815260200180610cc86026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6000610bcf83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610c30565b9392505050565b600082820183811015610bcf576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008184841115610cbf5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c84578181015183820152602001610c6c565b50505050905090810190601f168015610cb15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a264697066735822122079a6105d3db98c10b8c2e85296b01edc1a3caba119fafdd90b00c7c09eefecd564736f6c634300060a0033",
  "deployedBytecode": "0x6080604052600436106100ec5760003560e01c80639ba554391161008a578063dccbaa9911610059578063dccbaa9914610293578063e78ec42e146102bd578063ef5d6bbb146102e7578063f2fde38b14610320576100f6565b80639ba554391461020f5780639bf77fb41461023f5780639d76ea58146102695780639f727c271461027e576100f6565b80634ad2daaf116100c65780634ad2daaf1461018a578063715018a61461019f5780637dd56411146101b45780638da5cb5b146101fa576100f6565b806317ffc320146100fb5780632aed7f3f146101305780633a0a82ad14610163576100f6565b366100f657600080fd5b600080fd5b34801561010757600080fd5b5061012e6004803603602081101561011e57600080fd5b50356001600160a01b0316610353565b005b34801561013c57600080fd5b5061012e6004803603602081101561015357600080fd5b50356001600160a01b03166104ea565b34801561016f57600080fd5b506101786105be565b60408051918252519081900360200190f35b34801561019657600080fd5b506101786105c4565b3480156101ab57600080fd5b5061012e6105ca565b3480156101c057600080fd5b506101de600480360360208110156101d757600080fd5b503561066c565b604080516001600160a01b039092168252519081900360200190f35b34801561020657600080fd5b506101de610687565b34801561021b57600080fd5b5061012e6004803603604081101561023257600080fd5b5080359060200135610696565b34801561024b57600080fd5b506101786004803603602081101561026257600080fd5b50356107bf565b34801561027557600080fd5b506101de6107d1565b34801561028a57600080fd5b5061012e6107e0565b34801561029f57600080fd5b5061012e600480360360208110156102b657600080fd5b503561087b565b3480156102c957600080fd5b5061012e600480360360208110156102e057600080fd5b5035610974565b3480156102f357600080fd5b5061012e6004803603604081101561030a57600080fd5b50803590602001356001600160a01b03166109d1565b34801561032c57600080fd5b5061012e6004803603602081101561034357600080fd5b50356001600160a01b0316610a91565b61035b610b89565b6000546001600160a01b039081169116146103ab576040805162461bcd60e51b81526020600482018190526024820152600080516020610cee833981519152604482015290519081900360640190fd5b604080516370a0823160e01b8152306004820152905182916000916001600160a01b038416916370a08231916024808301926020929190829003018186803b1580156103f657600080fd5b505afa15801561040a573d6000803e3d6000fd5b505050506040513d602081101561042057600080fd5b50516001549091506001600160a01b03838116911614156104525760055461044f90829063ffffffff610b8d16565b90505b816001600160a01b031663a9059cbb610469610687565b836040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156104b957600080fd5b505af11580156104cd573d6000803e3d6000fd5b505050506040513d60208110156104e357600080fd5b5050505050565b6104f2610b89565b6000546001600160a01b03908116911614610542576040805162461bcd60e51b81526020600482018190526024820152600080516020610cee833981519152604482015290519081900360640190fd5b806001600160a01b03811663f2fde38b61055a610687565b6040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b1580156105a257600080fd5b505af11580156105b6573d6000803e3d6000fd5b505050505050565b60025481565b60055481565b6105d2610b89565b6000546001600160a01b03908116911614610622576040805162461bcd60e51b81526020600482018190526024820152600080516020610cee833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6003602052600090815260409020546001600160a01b031681565b6000546001600160a01b031690565b6000828152600360205260409020546001600160a01b0316156106b857600080fd5b6002548110156106c757600080fd5b600082815260036020908152604080832080546001600160a01b0319163317905560049091529020819055600554610705908263ffffffff610bd616565b600555604051339083907f575875f7fca9a5932686f3a3f2153e91772df070936be6bba7edbc61d339e60f90600090a3600154604080516323b872dd60e01b81523360048201523060248201526044810184905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561078f57600080fd5b505af11580156107a3573d6000803e3d6000fd5b505050506040513d60208110156107b957600080fd5b50505050565b60046020526000908152604090205481565b6001546001600160a01b031681565b6107e8610b89565b6000546001600160a01b03908116911614610838576040805162461bcd60e51b81526020600482018190526024820152600080516020610cee833981519152604482015290519081900360640190fd5b610840610687565b6001600160a01b03166108fc479081150290604051600060405180830381858888f19350505050158015610878573d6000803e3d6000fd5b50565b6000818152600360205260409020546001600160a01b0316331461089e57600080fd5b600081815260046020818152604080842080546003845291852080546001600160a01b03198116909155939092529290556005546001600160a01b03909116906108ee908363ffffffff610b8d16565b60055560405160009084907f575875f7fca9a5932686f3a3f2153e91772df070936be6bba7edbc61d339e60f908390a36001546040805163a9059cbb60e01b81526001600160a01b038481166004830152602482018690529151919092169163a9059cbb9160448083019260209291908290030181600087803b1580156104b957600080fd5b61097c610b89565b6000546001600160a01b039081169116146109cc576040805162461bcd60e51b81526020600482018190526024820152600080516020610cee833981519152604482015290519081900360640190fd5b600255565b6000828152600360205260409020546001600160a01b031633146109f457600080fd5b6001600160a01b038116610a0757600080fd5b6001600160a01b038116301415610a1d57600080fd5b6001546001600160a01b0382811691161415610a3857600080fd5b60008281526003602052604080822080546001600160a01b0319166001600160a01b0385169081179091559051909184917f575875f7fca9a5932686f3a3f2153e91772df070936be6bba7edbc61d339e60f9190a35050565b610a99610b89565b6000546001600160a01b03908116911614610ae9576040805162461bcd60e51b81526020600482018190526024820152600080516020610cee833981519152604482015290519081900360640190fd5b6001600160a01b038116610b2e5760405162461bcd60e51b8152600401808060200182810382526026815260200180610cc86026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6000610bcf83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610c30565b9392505050565b600082820183811015610bcf576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008184841115610cbf5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c84578181015183820152602001610c6c565b50505050905090810190601f168015610cb15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a264697066735822122079a6105d3db98c10b8c2e85296b01edc1a3caba119fafdd90b00c7c09eefecd564736f6c634300060a0033",
  "immutableReferences": {},
  "sourceMap": "2721:6254:13:-:0;;;3985:352;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3985:352:13;;;;;;;891:17:26;911:12;-1:-1:-1;;;;;911:10:26;:12;:::i;:::-;933:6;:18;;-1:-1:-1;;;;;;933:18:26;-1:-1:-1;;;;;933:18:26;;;;;;;966:43;;933:18;;-1:-1:-1;933:18:26;966:43;;933:6;;966:43;-1:-1:-1;1021:9:3;:14;1013:23;;;;;;4159:12:13;:44;;-1:-1:-1;;;;;;4159:44:13;-1:-1:-1;;;;;4159:44:13;;;;;;;;;;;4274:23;:56;2721:6254;;616:104:25;703:10;616:104;:::o;2721:6254:13:-;;;;;;;",
  "deployedSourceMap": "2721:6254:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1158:8:3;;;2721:6254:13;;;;8349:624;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8349:624:13;-1:-1:-1;;;;;8349:624:13;;:::i;:::-;;517:166:2;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;517:166:2;-1:-1:-1;;;;;517:166:2;;:::i;3006:35:13:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3561:30;;;;;;;;;;;;;:::i;1715:145:26:-;;;;;;;;;;;;;:::i;3203:42:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3203:42:13;;:::i;:::-;;;;-1:-1:-1;;;;;3203:42:13;;;;;;;;;;;;;;1092:77:26;;;;;;;;;;;;;:::i;5177:934:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5177:934:13;;;;;;;:::i;3317:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3317:42:13;;:::i;2904:28::-;;;;;;;;;;;;;:::i;1250:214:3:-;;;;;;;;;;;;;:::i;7376:843:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7376:843:13;;:::i;4462:156::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4462:156:13;;:::i;6392:661::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6392:661:13;;;;;;-1:-1:-1;;;;;6392:661:13;;:::i;2009:240:26:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2009:240:26;-1:-1:-1;;;;;2009:240:26;;:::i;8349:624:13:-;1306:12:26;:10;:12::i;:::-;1296:6;;-1:-1:-1;;;;;1296:6:26;;;:22;;;1288:67;;;;;-1:-1:-1;;;1288:67:26;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1288:67:26;;;;;;;;;;;;;;;8535:30:13::1;::::0;;-1:-1:-1;;;8535:30:13;;8559:4:::1;8535:30;::::0;::::1;::::0;;;8442:10;;8420:12:::1;::::0;-1:-1:-1;;;;;8535:15:13;::::1;::::0;::::1;::::0;:30;;;;;::::1;::::0;;;;;;;;:15;:30;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;8535:30:13;8666:12:::1;::::0;8535:30;;-1:-1:-1;;;;;;8640:39:13;;::::1;8666:12:::0;::::1;8640:39;8636:200;;;8806:18;::::0;8788:37:::1;::::0;:13;;:37:::1;:17;:37;:::i;:::-;8772:53;;8636:200;8928:5;-1:-1:-1::0;;;;;8928:14:13::1;;8943:7;:5;:7::i;:::-;8952:13;8928:38;;;;;;;;;;;;;-1:-1:-1::0;;;;;8928:38:13::1;-1:-1:-1::0;;;;;8928:38:13::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;;;;8349:624:13:o;517:166:2:-;1306:12:26;:10;:12::i;:::-;1296:6;;-1:-1:-1;;;;;1296:6:26;;;:22;;;1288:67;;;;;-1:-1:-1;;;1288:67:26;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1288:67:26;;;;;;;;;;;;;;;620:12:2;-1:-1:-1;;;;;639:30:2;::::1;;670:7;:5;:7::i;:::-;639:39;;;;;;;;;;;;;-1:-1:-1::0;;;;;639:39:2::1;-1:-1:-1::0;;;;;639:39:2::1;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1365:1:26;517:166:2::0;:::o;3006:35:13:-;;;;:::o;3561:30::-;;;;:::o;1715:145:26:-;1306:12;:10;:12::i;:::-;1296:6;;-1:-1:-1;;;;;1296:6:26;;;:22;;;1288:67;;;;;-1:-1:-1;;;1288:67:26;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1288:67:26;;;;;;;;;;;;;;;1821:1:::1;1805:6:::0;;1784:40:::1;::::0;-1:-1:-1;;;;;1805:6:26;;::::1;::::0;1784:40:::1;::::0;1821:1;;1784:40:::1;1851:1;1834:19:::0;;-1:-1:-1;;;;;;1834:19:26::1;::::0;;1715:145::o;3203:42:13:-;;;;;;;;;;;;-1:-1:-1;;;;;3203:42:13;;:::o;1092:77:26:-;1130:7;1156:6;-1:-1:-1;;;;;1156:6:26;1092:77;:::o;5177:934:13:-;5356:1;5327:17;;;:7;:17;;;;;;-1:-1:-1;;;;;5327:17:13;:31;5323:45;;5360:8;;;5323:45;5555:23;;5532:20;:46;5528:60;;;5580:8;;;5528:60;5652:17;;;;:7;:17;;;;;;;;:30;;-1:-1:-1;;;;;;5652:30:13;5672:10;5652:30;;;5692:10;:20;;;;;:43;;;5766:18;;:44;;5715:20;5766:44;:22;:44;:::i;:::-;5745:18;:65;5857:41;;5887:10;;5877:8;;5857:41;;;;;5971:12;;:74;;;-1:-1:-1;;;5971:74:13;;5997:10;5971:74;;;;6017:4;5971:74;;;;;;;;;;;;-1:-1:-1;;;;;5971:12:13;;;;:25;;:74;;;;;;;;;;;;;;;:12;;:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;5177:934:13:o;3317:42::-;;;;;;;;;;;;;:::o;2904:28::-;;;-1:-1:-1;;;;;2904:28:13;;:::o;1250:214:3:-;1306:12:26;:10;:12::i;:::-;1296:6;;-1:-1:-1;;;;;1296:6:26;;;:22;;;1288:67;;;;;-1:-1:-1;;;1288:67:26;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1288:67:26;;;;;;;;;;;;;;;1418:7:3::1;:5;:7::i;:::-;-1:-1:-1::0;;;;;1402:34:3::1;:57;1437:21;1402:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1250:214::o:0;7376:843:13:-;7495:17;;;;:7;:17;;;;;;-1:-1:-1;;;;;7495:17:13;7516:10;7495:31;7491:45;;7528:8;;;7491:45;7593:16;7612:20;;;:10;:20;;;;;;;;;;7685:7;:17;;;;;;;-1:-1:-1;;;;;;7748:30:13;;;;;7823:20;;;;:24;;;7922:18;;-1:-1:-1;;;;;7685:17:13;;;;7922:35;;7612:20;7922:35;:22;:35;:::i;:::-;7901:18;:56;8024:41;;8062:1;;8044:8;;8024:41;;8062:1;;8024:41;8112:12;;:44;;;-1:-1:-1;;;8112:44:13;;-1:-1:-1;;;;;8112:44:13;;;;;;;;;;;;;;;:12;;;;;:21;;:44;;;;;;;;;;;;;;:12;;:44;;;;;;;;;;4462:156;1306:12:26;:10;:12::i;:::-;1296:6;;-1:-1:-1;;;;;1296:6:26;;;:22;;;1288:67;;;;;-1:-1:-1;;;1288:67:26;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1288:67:26;;;;;;;;;;;;;;;4555:23:13::1;:56:::0;4462:156::o;6392:661::-;6526:17;;;;:7;:17;;;;;;-1:-1:-1;;;;;6526:17:13;6547:10;6526:31;6522:45;;6559:8;;;6522:45;-1:-1:-1;;;;;6666:22:13;;6662:36;;6690:8;;;6662:36;-1:-1:-1;;;;;6763:25:13;;6783:4;6763:25;6759:39;;;6790:8;;;6759:39;6859:12;;-1:-1:-1;;;;;6839:33:13;;;6859:12;;6839:33;6835:47;;;6874:8;;;6835:47;6932:17;;;;:7;:17;;;;;;:28;;-1:-1:-1;;;;;;6932:28:13;-1:-1:-1;;;;;6932:28:13;;;;;;;;7007:39;;6932:28;;:17;;7007:39;;6932:17;7007:39;6392:661;;:::o;2009:240:26:-;1306:12;:10;:12::i;:::-;1296:6;;-1:-1:-1;;;;;1296:6:26;;;:22;;;1288:67;;;;;-1:-1:-1;;;1288:67:26;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1288:67:26;;;;;;;;;;;;;;;-1:-1:-1;;;;;2097:22:26;::::1;2089:73;;;;-1:-1:-1::0;;;2089:73:26::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2198:6;::::0;;2177:38:::1;::::0;-1:-1:-1;;;;;2177:38:26;;::::1;::::0;2198:6;::::1;::::0;2177:38:::1;::::0;::::1;2225:6;:17:::0;;-1:-1:-1;;;;;;2225:17:26::1;-1:-1:-1::0;;;;;2225:17:26;;;::::1;::::0;;;::::1;::::0;;2009:240::o;616:104:25:-;703:10;616:104;:::o;1347:134:29:-;1405:7;1431:43;1435:1;1438;1431:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1424:50;1347:134;-1:-1:-1;;;1347:134:29:o;900:176::-;958:7;989:5;;;1012:6;;;;1004:46;;;;;-1:-1:-1;;;1004:46:29;;;;;;;;;;;;;;;;;;;;;;;;;;;1772:187;1858:7;1893:12;1885:6;;;;1877:29;;;;-1:-1:-1;;;1877:29:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1928:5:29;;;1772:187::o",
  "source": "pragma solidity ^0.6.10;\n\nimport \"./MRVToken.sol\";\nimport \"openzeppelin-solidity/contracts/access/Ownable.sol\";\nimport \"./HasNoEther.sol\";\nimport \"./HasNoContracts.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\n/**\n * The Macroverse Star Registry keeps track of who currently owns virtual real estate in the\n * Macroverse world, at the scale of star systems and other star-like objects.\n *\n * Ownership is handled by having the first person who wants to own an object claim it, by\n * putting up a deposit in MRV tokens of a certain minimum size. Note that the owner of the\n * contract reserves the right to adjust this minimum size at any time, for any reason, and\n * without notice. Since the size of the deposit to be made is specified by the claimant,\n * trying to claim something when the minimum deposit size has been increased without your\n * knowledge should at worst result in wasted gas.\n *\n * Owners of objects can send them to other addresses, and an owner can abdicate ownership of\n * an object and collect the original MRV deposit used to claim it.\n *\n * Note that the claiming system used here is not protected against front-running. Anyone can\n * see your claim transaction before it is mined, and claim the object you were going for first.\n * However, they would then need to find it among the many billions of objects in the Macroverse\n * universe, because this contract only records ownership by seed.\n *\n * Note that ownership of a star system does not necessarily imply ownership of everything in it.\n * Just as one person can own a condo in another person's building, one person can own a planet in\n * another person's star system.\n *\n * All ownership is recorded using star seeds; no attempt is made to enforce that a given\n * seed actually exists in the Macroverse world. It is possible to purchase (and sell!)\n * nonexistent star systems, or star systems that you don't know where they are. Caveat emptor.\n *\n * The deployer of this contract reserves the right to supersede it with a new version at any time,\n * for any reason, and without notice. The deployer of this contract reserves the right to leave it\n * in place as is indefinitely.\n *\n * The deployer of this contract reserves the right to claim and keep any tokens or ETH or contracts\n * sent to this contract, in excess of the MRV balance that this contract thinks it is supposed to\n * have.\n *\n * TODO: Note that the deployed version of this contract on the mainnet is slightly different!\n * In particular, this version reverts where the deployed version throws, to make newer compilers\n * stop warning whenever you build the Macroverse project.\n */\ncontract MacroverseStarRegistry is Ownable, HasNoEther, HasNoContracts {\n    using SafeMath for *;\n    \n    // This is the token in which star ownership deposits have to be paid.\n    MRVToken public tokenAddress;\n    // This is the minimum ownership deposit in atomic token units.\n    uint public minDepositInAtomicUnits;\n    \n    // This maps from star or other body seed to the address that owns it.\n    // This can be queried without meeting the access control requirements.\n    mapping(bytes32 => address) public ownerOf;\n    \n    // This holds what deposit was paid for each owned item.\n    mapping(bytes32 => uint) public depositFor;\n    \n    // This tracks how much MRV the contract is supposed to have.\n    // If it ends up with extra (because someone incorrectly used transfer() instead of approve()), the owner can remove it.\n    uint public expectedMrvBalance;\n    \n    // This event is fired when ownership of a star system. Giving up ownership transfers to the 0 address.\n    event StarOwnershipChange(bytes32 indexed starSeed, address indexed newOwner);\n    \n    /**\n     * Deploy a new copy of the Macroverse Star Registry.\n     * The given token will be used to pay deposits, and the given minimum\n     * deposit size will be required.\n     */\n    constructor(address payable depositTokenAddress, uint initialMinDepositInAtomicUnits) public {\n        // We can only use one token for the lifetime of the contract.\n        tokenAddress = MRVToken(depositTokenAddress);\n        // But the minimum deposit for new claims can change\n        minDepositInAtomicUnits = initialMinDepositInAtomicUnits;\n    }\n    \n    /**\n     * Allow the owner to set the minimum deposit amount for granting new\n     * ownership claims.\n     */\n    function setMinimumDeposit(uint newMinimumDepositInAtomicUnits) external onlyOwner {\n        minDepositInAtomicUnits = newMinimumDepositInAtomicUnits;\n    }\n    \n    /**\n     * Acquire ownership of an unclaimed star.\n     * To claim a star, you need to put up a deposit of MRV. You need to call\n     * approve() on the MRV token contract to allow this contract to debit the\n     * requested deposit from your account. The deposit must be more than the\n     * current minimum deposit.\n     *\n     * YOU and ONLY YOU are responsible for remembering the seeds of stars you\n     * own, so you can get your deposits back when you are done with them. You\n     * can't easily get a listing from this contract.\n     */\n    function claimOwnership(bytes32 starSeed, uint depositInAtomicUnits) external {\n        // You can't claim things that are already owned.\n        if (ownerOf[starSeed] != address(0)) revert();\n        \n        // You can claim things that don't exist, if you really want to.\n        \n        // You have to put up at least the minimum deposit\n        if (depositInAtomicUnits < minDepositInAtomicUnits) revert();\n        \n        // Go ahead and do the state changes\n        ownerOf[starSeed] = msg.sender;\n        depositFor[starSeed] = depositInAtomicUnits;\n        expectedMrvBalance = expectedMrvBalance.add(depositInAtomicUnits);\n        \n        // Announce it\n        emit StarOwnershipChange(starSeed, msg.sender);\n        \n        // After state changes, try to take the money\n        tokenAddress.transferFrom(msg.sender, address(this), depositInAtomicUnits);\n        // The MRV token will throw if transferFrom fails.\n    }\n    \n    /**\n     * Transfer ownership of a star from the sender to the given address.\n     * You don't need to meet the access control requirements to get rid of\n     * your owned stars, or to own stars. But you might not be able to\n     * query anything about them.\n     */\n    function transferOwnership(bytes32 starSeed, address newOwner) external {\n        // You can't send things you don't own.\n        if (ownerOf[starSeed] != msg.sender) revert();\n        \n        // Don't try to burn star ownership; use abdicateOwnership instead.\n        if (newOwner == address(0)) revert();\n        // Don't send stars to the contract either\n        if (newOwner == address(this)) revert();\n        // Or to the token\n        if (newOwner == address(tokenAddress)) revert();\n        \n        // Transfer owenership\n        ownerOf[starSeed] = newOwner;\n        \n        // Announce it\n        emit StarOwnershipChange(starSeed, newOwner);\n    }\n    \n    // In a future version, we might want an ERC20-style authorization system, to let a contract move your things for you.\n    \n    /**\n     * Give up ownership of an owned star.\n     * The MRV deposit originally paid to acquire ownership of the star will\n     * be paid out to the sender of the message.\n     */\n    function abdicateOwnership(bytes32 starSeed) external {\n        // You can't give up things you don't own.\n        if (ownerOf[starSeed] != msg.sender) revert();\n        \n        // How much should we return?\n        uint depositSize = depositFor[starSeed];\n        // And to whom?\n        address oldOwner = ownerOf[starSeed];\n        \n        // Clear ownership\n        ownerOf[starSeed] = address(0);\n        // Clear the deposit value\n        depositFor[starSeed] = 0;\n        \n        // Update expected balance\n        expectedMrvBalance = expectedMrvBalance.sub(depositSize);\n\n        // Announce lack of ownership of the thing\n        emit StarOwnershipChange(starSeed, address(0));\n        \n        // Pay back deposit\n        tokenAddress.transfer(oldOwner, depositSize);\n        // We know MRVToken throws on a failed transfer\n    }\n    \n    /**\n     * Allow the owner to collect any non-MRV tokens, or any excess MRV, that ends up in this contract.\n     */\n    function reclaimToken(address otherToken) external onlyOwner {\n        IERC20 other = IERC20(otherToken);\n        \n        // We will send our whole balance\n        uint excessBalance = other.balanceOf(address(this));\n        \n        // Unless we're talking about the MRV token\n        if (address(other) == address(tokenAddress)) {\n            // In which case we send only any balance that we shouldn't have\n            excessBalance = excessBalance.sub(expectedMrvBalance);\n        }\n        \n        // Make the transfer. If it doesn't work, we can try again later.\n        other.transfer(owner(), excessBalance);\n    }\n}\n\n// This code is part of Macroverse and is licensed: UNLICENSED\n",
  "sourcePath": "/z/home/anovak/workspace/macroverse/contracts/MacroverseStarRegistry.sol",
  "ast": {
    "absolutePath": "/z/home/anovak/workspace/macroverse/contracts/MacroverseStarRegistry.sol",
    "exportedSymbols": {
      "MacroverseStarRegistry": [
        4958
      ]
    },
    "id": 4959,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4647,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:13"
      },
      {
        "absolutePath": "/z/home/anovak/workspace/macroverse/contracts/MRVToken.sol",
        "file": "./MRVToken.sol",
        "id": 4648,
        "nodeType": "ImportDirective",
        "scope": 4959,
        "sourceUnit": 737,
        "src": "26:24:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "id": 4649,
        "nodeType": "ImportDirective",
        "scope": 4959,
        "sourceUnit": 10804,
        "src": "51:60:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/z/home/anovak/workspace/macroverse/contracts/HasNoEther.sol",
        "file": "./HasNoEther.sol",
        "id": 4650,
        "nodeType": "ImportDirective",
        "scope": 4959,
        "sourceUnit": 148,
        "src": "112:26:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/z/home/anovak/workspace/macroverse/contracts/HasNoContracts.sol",
        "file": "./HasNoContracts.sol",
        "id": 4651,
        "nodeType": "ImportDirective",
        "scope": 4959,
        "sourceUnit": 98,
        "src": "139:30:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 4652,
        "nodeType": "ImportDirective",
        "scope": 4959,
        "sourceUnit": 11654,
        "src": "170:64:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 4653,
        "nodeType": "ImportDirective",
        "scope": 4959,
        "sourceUnit": 11069,
        "src": "235:59:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4655,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10803,
              "src": "2756:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$10803",
                "typeString": "contract Ownable"
              }
            },
            "id": 4656,
            "nodeType": "InheritanceSpecifier",
            "src": "2756:7:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4657,
              "name": "HasNoEther",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 147,
              "src": "2765:10:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HasNoEther_$147",
                "typeString": "contract HasNoEther"
              }
            },
            "id": 4658,
            "nodeType": "InheritanceSpecifier",
            "src": "2765:10:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4659,
              "name": "HasNoContracts",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 97,
              "src": "2777:14:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HasNoContracts_$97",
                "typeString": "contract HasNoContracts"
              }
            },
            "id": 4660,
            "nodeType": "InheritanceSpecifier",
            "src": "2777:14:13"
          }
        ],
        "contractDependencies": [
          97,
          147,
          10694,
          10803
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 4654,
          "nodeType": "StructuredDocumentation",
          "src": "296:2424:13",
          "text": " The Macroverse Star Registry keeps track of who currently owns virtual real estate in the\n Macroverse world, at the scale of star systems and other star-like objects.\n Ownership is handled by having the first person who wants to own an object claim it, by\n putting up a deposit in MRV tokens of a certain minimum size. Note that the owner of the\n contract reserves the right to adjust this minimum size at any time, for any reason, and\n without notice. Since the size of the deposit to be made is specified by the claimant,\n trying to claim something when the minimum deposit size has been increased without your\n knowledge should at worst result in wasted gas.\n Owners of objects can send them to other addresses, and an owner can abdicate ownership of\n an object and collect the original MRV deposit used to claim it.\n Note that the claiming system used here is not protected against front-running. Anyone can\n see your claim transaction before it is mined, and claim the object you were going for first.\n However, they would then need to find it among the many billions of objects in the Macroverse\n universe, because this contract only records ownership by seed.\n Note that ownership of a star system does not necessarily imply ownership of everything in it.\n Just as one person can own a condo in another person's building, one person can own a planet in\n another person's star system.\n All ownership is recorded using star seeds; no attempt is made to enforce that a given\n seed actually exists in the Macroverse world. It is possible to purchase (and sell!)\n nonexistent star systems, or star systems that you don't know where they are. Caveat emptor.\n The deployer of this contract reserves the right to supersede it with a new version at any time,\n for any reason, and without notice. The deployer of this contract reserves the right to leave it\n in place as is indefinitely.\n The deployer of this contract reserves the right to claim and keep any tokens or ETH or contracts\n sent to this contract, in excess of the MRV balance that this contract thinks it is supposed to\n have.\n TODO: Note that the deployed version of this contract on the mainnet is slightly different!\n In particular, this version reverts where the deployed version throws, to make newer compilers\n stop warning whenever you build the Macroverse project."
        },
        "fullyImplemented": true,
        "id": 4958,
        "linearizedBaseContracts": [
          4958,
          97,
          147,
          10803,
          10694
        ],
        "name": "MacroverseStarRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4662,
            "libraryName": {
              "contractScope": null,
              "id": 4661,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11068,
              "src": "2804:8:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$11068",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "2798:21:13",
            "typeName": null
          },
          {
            "constant": false,
            "functionSelector": "9d76ea58",
            "id": 4664,
            "mutability": "mutable",
            "name": "tokenAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4958,
            "src": "2904:28:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MRVToken_$736",
              "typeString": "contract MRVToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 4663,
              "name": "MRVToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 736,
              "src": "2904:8:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MRVToken_$736",
                "typeString": "contract MRVToken"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3a0a82ad",
            "id": 4666,
            "mutability": "mutable",
            "name": "minDepositInAtomicUnits",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4958,
            "src": "3006:35:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4665,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "3006:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7dd56411",
            "id": 4670,
            "mutability": "mutable",
            "name": "ownerOf",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4958,
            "src": "3203:42:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
              "typeString": "mapping(bytes32 => address)"
            },
            "typeName": {
              "id": 4669,
              "keyType": {
                "id": 4667,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "3211:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "3203:27:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                "typeString": "mapping(bytes32 => address)"
              },
              "valueType": {
                "id": 4668,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3222:7:13",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9bf77fb4",
            "id": 4674,
            "mutability": "mutable",
            "name": "depositFor",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4958,
            "src": "3317:42:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 4673,
              "keyType": {
                "id": 4671,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "3325:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "3317:24:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 4672,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3336:4:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4ad2daaf",
            "id": 4676,
            "mutability": "mutable",
            "name": "expectedMrvBalance",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4958,
            "src": "3561:30:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4675,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "3561:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 4682,
            "name": "StarOwnershipChange",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4678,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "starSeed",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4682,
                  "src": "3736:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4677,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3736:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4680,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4682,
                  "src": "3762:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4679,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3762:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3735:52:13"
            },
            "src": "3710:78:13"
          },
          {
            "body": {
              "id": 4700,
              "nodeType": "Block",
              "src": "4078:259:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4690,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4664,
                      "src": "4159:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MRVToken_$736",
                        "typeString": "contract MRVToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4692,
                          "name": "depositTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4685,
                          "src": "4183:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 4691,
                        "name": "MRVToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 736,
                        "src": "4174:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MRVToken_$736_$",
                          "typeString": "type(contract MRVToken)"
                        }
                      },
                      "id": 4693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4174:29:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MRVToken_$736",
                        "typeString": "contract MRVToken"
                      }
                    },
                    "src": "4159:44:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MRVToken_$736",
                      "typeString": "contract MRVToken"
                    }
                  },
                  "id": 4695,
                  "nodeType": "ExpressionStatement",
                  "src": "4159:44:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4696,
                      "name": "minDepositInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4666,
                      "src": "4274:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4697,
                      "name": "initialMinDepositInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4687,
                      "src": "4300:30:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4274:56:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4699,
                  "nodeType": "ExpressionStatement",
                  "src": "4274:56:13"
                }
              ]
            },
            "documentation": {
              "id": 4683,
              "nodeType": "StructuredDocumentation",
              "src": "3798:182:13",
              "text": " Deploy a new copy of the Macroverse Star Registry.\n The given token will be used to pay deposits, and the given minimum\n deposit size will be required."
            },
            "id": 4701,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4685,
                  "mutability": "mutable",
                  "name": "depositTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4701,
                  "src": "3997:35:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 4684,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3997:15:13",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4687,
                  "mutability": "mutable",
                  "name": "initialMinDepositInAtomicUnits",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4701,
                  "src": "4034:35:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4686,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4034:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3996:74:13"
            },
            "returnParameters": {
              "id": 4689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4078:0:13"
            },
            "scope": 4958,
            "src": "3985:352:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4713,
              "nodeType": "Block",
              "src": "4545:73:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4709,
                      "name": "minDepositInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4666,
                      "src": "4555:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4710,
                      "name": "newMinimumDepositInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4704,
                      "src": "4581:30:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4555:56:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4712,
                  "nodeType": "ExpressionStatement",
                  "src": "4555:56:13"
                }
              ]
            },
            "documentation": {
              "id": 4702,
              "nodeType": "StructuredDocumentation",
              "src": "4347:110:13",
              "text": " Allow the owner to set the minimum deposit amount for granting new\n ownership claims."
            },
            "functionSelector": "e78ec42e",
            "id": 4714,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4707,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4706,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10752,
                  "src": "4535:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4535:9:13"
              }
            ],
            "name": "setMinimumDeposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4704,
                  "mutability": "mutable",
                  "name": "newMinimumDepositInAtomicUnits",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4714,
                  "src": "4489:35:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4703,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4489:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4488:37:13"
            },
            "returnParameters": {
              "id": 4708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4545:0:13"
            },
            "scope": 4958,
            "src": "4462:156:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4779,
              "nodeType": "Block",
              "src": "5255:856:13",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4722,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4670,
                        "src": "5327:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 4724,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4723,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4717,
                        "src": "5335:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5327:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 4727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5356:1:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5348:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4725,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5348:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 4728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5348:10:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5327:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4733,
                  "nodeType": "IfStatement",
                  "src": "5323:45:13",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4730,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "5360:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5360:8:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4732,
                    "nodeType": "ExpressionStatement",
                    "src": "5360:8:13"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4734,
                      "name": "depositInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4719,
                      "src": "5532:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 4735,
                      "name": "minDepositInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4666,
                      "src": "5555:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5532:46:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4740,
                  "nodeType": "IfStatement",
                  "src": "5528:60:13",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4737,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "5580:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5580:8:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4739,
                    "nodeType": "ExpressionStatement",
                    "src": "5580:8:13"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4741,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4670,
                        "src": "5652:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 4743,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4742,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4717,
                        "src": "5660:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5652:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4744,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5672:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5672:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5652:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4747,
                  "nodeType": "ExpressionStatement",
                  "src": "5652:30:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4748,
                        "name": "depositFor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4674,
                        "src": "5692:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 4750,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4749,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4717,
                        "src": "5703:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5692:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4751,
                      "name": "depositInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4719,
                      "src": "5715:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5692:43:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4753,
                  "nodeType": "ExpressionStatement",
                  "src": "5692:43:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4754,
                      "name": "expectedMrvBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4676,
                      "src": "5745:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4757,
                          "name": "depositInAtomicUnits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4719,
                          "src": "5789:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4755,
                          "name": "expectedMrvBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4676,
                          "src": "5766:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10901,
                        "src": "5766:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5766:44:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5745:65:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4760,
                  "nodeType": "ExpressionStatement",
                  "src": "5745:65:13"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4762,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4717,
                        "src": "5877:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4763,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5887:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5887:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 4761,
                      "name": "StarOwnershipChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4682,
                      "src": "5857:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5857:41:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4766,
                  "nodeType": "EmitStatement",
                  "src": "5852:46:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4770,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5997:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5997:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4774,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6017:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MacroverseStarRegistry_$4958",
                              "typeString": "contract MacroverseStarRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MacroverseStarRegistry_$4958",
                              "typeString": "contract MacroverseStarRegistry"
                            }
                          ],
                          "id": 4773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6009:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4772,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6009:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 4775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6009:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4776,
                        "name": "depositInAtomicUnits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4719,
                        "src": "6024:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4767,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4664,
                        "src": "5971:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MRVToken_$736",
                          "typeString": "contract MRVToken"
                        }
                      },
                      "id": 4769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11273,
                      "src": "5971:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5971:74:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4778,
                  "nodeType": "ExpressionStatement",
                  "src": "5971:74:13"
                }
              ]
            },
            "documentation": {
              "id": 4715,
              "nodeType": "StructuredDocumentation",
              "src": "4628:544:13",
              "text": " Acquire ownership of an unclaimed star.\n To claim a star, you need to put up a deposit of MRV. You need to call\n approve() on the MRV token contract to allow this contract to debit the\n requested deposit from your account. The deposit must be more than the\n current minimum deposit.\n YOU and ONLY YOU are responsible for remembering the seeds of stars you\n own, so you can get your deposits back when you are done with them. You\n can't easily get a listing from this contract."
            },
            "functionSelector": "9ba55439",
            "id": 4780,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimOwnership",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4717,
                  "mutability": "mutable",
                  "name": "starSeed",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4780,
                  "src": "5201:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4716,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5201:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4719,
                  "mutability": "mutable",
                  "name": "depositInAtomicUnits",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4780,
                  "src": "5219:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4718,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5219:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5200:45:13"
            },
            "returnParameters": {
              "id": 4721,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5255:0:13"
            },
            "scope": 4958,
            "src": "5177:934:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4839,
              "nodeType": "Block",
              "src": "6464:589:13",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4788,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4670,
                        "src": "6526:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 4790,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4789,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4783,
                        "src": "6534:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6526:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4791,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6547:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6547:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6526:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4797,
                  "nodeType": "IfStatement",
                  "src": "6522:45:13",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4794,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "6559:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6559:8:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4796,
                    "nodeType": "ExpressionStatement",
                    "src": "6559:8:13"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4798,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4785,
                      "src": "6666:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 4801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6686:1:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6678:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4799,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6678:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 4802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6678:10:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6666:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4807,
                  "nodeType": "IfStatement",
                  "src": "6662:36:13",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4804,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "6690:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6690:8:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4806,
                    "nodeType": "ExpressionStatement",
                    "src": "6690:8:13"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4808,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4785,
                      "src": "6763:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4811,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "6783:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MacroverseStarRegistry_$4958",
                            "typeString": "contract MacroverseStarRegistry"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MacroverseStarRegistry_$4958",
                            "typeString": "contract MacroverseStarRegistry"
                          }
                        ],
                        "id": 4810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6775:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4809,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6775:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 4812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6775:13:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6763:25:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4817,
                  "nodeType": "IfStatement",
                  "src": "6759:39:13",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4814,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "6790:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6790:8:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4816,
                    "nodeType": "ExpressionStatement",
                    "src": "6790:8:13"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4818,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4785,
                      "src": "6839:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4821,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4664,
                          "src": "6859:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MRVToken_$736",
                            "typeString": "contract MRVToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MRVToken_$736",
                            "typeString": "contract MRVToken"
                          }
                        ],
                        "id": 4820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6851:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4819,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6851:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 4822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6851:21:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6839:33:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4827,
                  "nodeType": "IfStatement",
                  "src": "6835:47:13",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4824,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "6874:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6874:8:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4826,
                    "nodeType": "ExpressionStatement",
                    "src": "6874:8:13"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4828,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4670,
                        "src": "6932:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 4830,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4829,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4783,
                        "src": "6940:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6932:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4831,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4785,
                      "src": "6952:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6932:28:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4833,
                  "nodeType": "ExpressionStatement",
                  "src": "6932:28:13"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4835,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4783,
                        "src": "7027:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4836,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4785,
                        "src": "7037:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4834,
                      "name": "StarOwnershipChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4682,
                      "src": "7007:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7007:39:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4838,
                  "nodeType": "EmitStatement",
                  "src": "7002:44:13"
                }
              ]
            },
            "documentation": {
              "id": 4781,
              "nodeType": "StructuredDocumentation",
              "src": "6121:266:13",
              "text": " Transfer ownership of a star from the sender to the given address.\n You don't need to meet the access control requirements to get rid of\n your owned stars, or to own stars. But you might not be able to\n query anything about them."
            },
            "functionSelector": "ef5d6bbb",
            "id": 4840,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4783,
                  "mutability": "mutable",
                  "name": "starSeed",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4840,
                  "src": "6419:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4782,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6419:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4785,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4840,
                  "src": "6437:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6437:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6418:36:13"
            },
            "returnParameters": {
              "id": 4787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6464:0:13"
            },
            "scope": 4958,
            "src": "6392:661:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4905,
              "nodeType": "Block",
              "src": "7430:789:13",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4846,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4670,
                        "src": "7495:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 4848,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4847,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4843,
                        "src": "7503:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7495:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4849,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "7516:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7516:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "7495:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4855,
                  "nodeType": "IfStatement",
                  "src": "7491:45:13",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4852,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "7528:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7528:8:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4854,
                    "nodeType": "ExpressionStatement",
                    "src": "7528:8:13"
                  }
                },
                {
                  "assignments": [
                    4857
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4857,
                      "mutability": "mutable",
                      "name": "depositSize",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4905,
                      "src": "7593:16:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4856,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7593:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4861,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4858,
                      "name": "depositFor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4674,
                      "src": "7612:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 4860,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4859,
                      "name": "starSeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4843,
                      "src": "7623:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7612:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7593:39:13"
                },
                {
                  "assignments": [
                    4863
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4863,
                      "mutability": "mutable",
                      "name": "oldOwner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4905,
                      "src": "7666:16:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4862,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7666:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4867,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4864,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4670,
                      "src": "7685:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                        "typeString": "mapping(bytes32 => address)"
                      }
                    },
                    "id": 4866,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4865,
                      "name": "starSeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4843,
                      "src": "7693:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7685:17:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7666:36:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4868,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4670,
                        "src": "7748:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 4870,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4869,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4843,
                        "src": "7756:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7748:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 4873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7776:1:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7768:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4871,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7768:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 4874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7768:10:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "7748:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4876,
                  "nodeType": "ExpressionStatement",
                  "src": "7748:30:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4877,
                        "name": "depositFor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4674,
                        "src": "7823:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 4879,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4878,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4843,
                        "src": "7834:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7823:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7846:1:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7823:24:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4882,
                  "nodeType": "ExpressionStatement",
                  "src": "7823:24:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4883,
                      "name": "expectedMrvBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4676,
                      "src": "7901:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4886,
                          "name": "depositSize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4857,
                          "src": "7945:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4884,
                          "name": "expectedMrvBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4676,
                          "src": "7922:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10918,
                        "src": "7922:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7922:35:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7901:56:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4889,
                  "nodeType": "ExpressionStatement",
                  "src": "7901:56:13"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4891,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4843,
                        "src": "8044:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 4894,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8062:1:13",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8054:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4892,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8054:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 4895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8054:10:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 4890,
                      "name": "StarOwnershipChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4682,
                      "src": "8024:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8024:41:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4897,
                  "nodeType": "EmitStatement",
                  "src": "8019:46:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4901,
                        "name": "oldOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4863,
                        "src": "8134:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4902,
                        "name": "depositSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4857,
                        "src": "8144:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4898,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4664,
                        "src": "8112:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MRVToken_$736",
                          "typeString": "contract MRVToken"
                        }
                      },
                      "id": 4900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11196,
                      "src": "8112:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8112:44:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4904,
                  "nodeType": "ExpressionStatement",
                  "src": "8112:44:13"
                }
              ]
            },
            "documentation": {
              "id": 4841,
              "nodeType": "StructuredDocumentation",
              "src": "7191:180:13",
              "text": " Give up ownership of an owned star.\n The MRV deposit originally paid to acquire ownership of the star will\n be paid out to the sender of the message."
            },
            "functionSelector": "dccbaa99",
            "id": 4906,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "abdicateOwnership",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4843,
                  "mutability": "mutable",
                  "name": "starSeed",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4906,
                  "src": "7403:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4842,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7403:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7402:18:13"
            },
            "returnParameters": {
              "id": 4845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7430:0:13"
            },
            "scope": 4958,
            "src": "7376:843:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4956,
              "nodeType": "Block",
              "src": "8410:563:13",
              "statements": [
                {
                  "assignments": [
                    4915
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4915,
                      "mutability": "mutable",
                      "name": "other",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4956,
                      "src": "8420:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$11653",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4914,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 11653,
                        "src": "8420:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11653",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4919,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4917,
                        "name": "otherToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4909,
                        "src": "8442:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4916,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11653,
                      "src": "8435:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$11653_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 4918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8435:18:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$11653",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8420:33:13"
                },
                {
                  "assignments": [
                    4921
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4921,
                      "mutability": "mutable",
                      "name": "excessBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4956,
                      "src": "8514:18:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4920,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8514:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4929,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4926,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8559:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MacroverseStarRegistry_$4958",
                              "typeString": "contract MacroverseStarRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MacroverseStarRegistry_$4958",
                              "typeString": "contract MacroverseStarRegistry"
                            }
                          ],
                          "id": 4925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8551:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4924,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8551:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 4927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8551:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4922,
                        "name": "other",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4915,
                        "src": "8535:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11653",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11592,
                      "src": "8535:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8535:30:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8514:51:13"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4932,
                          "name": "other",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4915,
                          "src": "8648:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$11653",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$11653",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 4931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8640:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4930,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8640:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 4933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8640:14:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4936,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4664,
                          "src": "8666:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MRVToken_$736",
                            "typeString": "contract MRVToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MRVToken_$736",
                            "typeString": "contract MRVToken"
                          }
                        ],
                        "id": 4935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8658:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4934,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8658:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 4937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8658:21:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "8640:39:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4947,
                  "nodeType": "IfStatement",
                  "src": "8636:200:13",
                  "trueBody": {
                    "id": 4946,
                    "nodeType": "Block",
                    "src": "8681:155:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 4939,
                            "name": "excessBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4921,
                            "src": "8772:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4942,
                                "name": "expectedMrvBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4676,
                                "src": "8806:18:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 4940,
                                "name": "excessBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4921,
                                "src": "8788:13:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10918,
                              "src": "8788:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4943,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8788:37:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8772:53:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4945,
                        "nodeType": "ExpressionStatement",
                        "src": "8772:53:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4951,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10739,
                          "src": "8943:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8943:7:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4953,
                        "name": "excessBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4921,
                        "src": "8952:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4948,
                        "name": "other",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4915,
                        "src": "8928:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11653",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11602,
                      "src": "8928:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8928:38:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4955,
                  "nodeType": "ExpressionStatement",
                  "src": "8928:38:13"
                }
              ]
            },
            "documentation": {
              "id": 4907,
              "nodeType": "StructuredDocumentation",
              "src": "8229:115:13",
              "text": " Allow the owner to collect any non-MRV tokens, or any excess MRV, that ends up in this contract."
            },
            "functionSelector": "17ffc320",
            "id": 4957,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4912,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4911,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10752,
                  "src": "8400:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8400:9:13"
              }
            ],
            "name": "reclaimToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4909,
                  "mutability": "mutable",
                  "name": "otherToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4957,
                  "src": "8371:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4908,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8371:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8370:20:13"
            },
            "returnParameters": {
              "id": 4913,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8410:0:13"
            },
            "scope": 4958,
            "src": "8349:624:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4959,
        "src": "2721:6254:13"
      }
    ],
    "src": "0:9040:13"
  },
  "legacyAST": {
    "absolutePath": "/z/home/anovak/workspace/macroverse/contracts/MacroverseStarRegistry.sol",
    "exportedSymbols": {
      "MacroverseStarRegistry": [
        4958
      ]
    },
    "id": 4959,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4647,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:13"
      },
      {
        "absolutePath": "/z/home/anovak/workspace/macroverse/contracts/MRVToken.sol",
        "file": "./MRVToken.sol",
        "id": 4648,
        "nodeType": "ImportDirective",
        "scope": 4959,
        "sourceUnit": 737,
        "src": "26:24:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "id": 4649,
        "nodeType": "ImportDirective",
        "scope": 4959,
        "sourceUnit": 10804,
        "src": "51:60:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/z/home/anovak/workspace/macroverse/contracts/HasNoEther.sol",
        "file": "./HasNoEther.sol",
        "id": 4650,
        "nodeType": "ImportDirective",
        "scope": 4959,
        "sourceUnit": 148,
        "src": "112:26:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/z/home/anovak/workspace/macroverse/contracts/HasNoContracts.sol",
        "file": "./HasNoContracts.sol",
        "id": 4651,
        "nodeType": "ImportDirective",
        "scope": 4959,
        "sourceUnit": 98,
        "src": "139:30:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 4652,
        "nodeType": "ImportDirective",
        "scope": 4959,
        "sourceUnit": 11654,
        "src": "170:64:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 4653,
        "nodeType": "ImportDirective",
        "scope": 4959,
        "sourceUnit": 11069,
        "src": "235:59:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4655,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10803,
              "src": "2756:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$10803",
                "typeString": "contract Ownable"
              }
            },
            "id": 4656,
            "nodeType": "InheritanceSpecifier",
            "src": "2756:7:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4657,
              "name": "HasNoEther",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 147,
              "src": "2765:10:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HasNoEther_$147",
                "typeString": "contract HasNoEther"
              }
            },
            "id": 4658,
            "nodeType": "InheritanceSpecifier",
            "src": "2765:10:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4659,
              "name": "HasNoContracts",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 97,
              "src": "2777:14:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HasNoContracts_$97",
                "typeString": "contract HasNoContracts"
              }
            },
            "id": 4660,
            "nodeType": "InheritanceSpecifier",
            "src": "2777:14:13"
          }
        ],
        "contractDependencies": [
          97,
          147,
          10694,
          10803
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 4654,
          "nodeType": "StructuredDocumentation",
          "src": "296:2424:13",
          "text": " The Macroverse Star Registry keeps track of who currently owns virtual real estate in the\n Macroverse world, at the scale of star systems and other star-like objects.\n Ownership is handled by having the first person who wants to own an object claim it, by\n putting up a deposit in MRV tokens of a certain minimum size. Note that the owner of the\n contract reserves the right to adjust this minimum size at any time, for any reason, and\n without notice. Since the size of the deposit to be made is specified by the claimant,\n trying to claim something when the minimum deposit size has been increased without your\n knowledge should at worst result in wasted gas.\n Owners of objects can send them to other addresses, and an owner can abdicate ownership of\n an object and collect the original MRV deposit used to claim it.\n Note that the claiming system used here is not protected against front-running. Anyone can\n see your claim transaction before it is mined, and claim the object you were going for first.\n However, they would then need to find it among the many billions of objects in the Macroverse\n universe, because this contract only records ownership by seed.\n Note that ownership of a star system does not necessarily imply ownership of everything in it.\n Just as one person can own a condo in another person's building, one person can own a planet in\n another person's star system.\n All ownership is recorded using star seeds; no attempt is made to enforce that a given\n seed actually exists in the Macroverse world. It is possible to purchase (and sell!)\n nonexistent star systems, or star systems that you don't know where they are. Caveat emptor.\n The deployer of this contract reserves the right to supersede it with a new version at any time,\n for any reason, and without notice. The deployer of this contract reserves the right to leave it\n in place as is indefinitely.\n The deployer of this contract reserves the right to claim and keep any tokens or ETH or contracts\n sent to this contract, in excess of the MRV balance that this contract thinks it is supposed to\n have.\n TODO: Note that the deployed version of this contract on the mainnet is slightly different!\n In particular, this version reverts where the deployed version throws, to make newer compilers\n stop warning whenever you build the Macroverse project."
        },
        "fullyImplemented": true,
        "id": 4958,
        "linearizedBaseContracts": [
          4958,
          97,
          147,
          10803,
          10694
        ],
        "name": "MacroverseStarRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4662,
            "libraryName": {
              "contractScope": null,
              "id": 4661,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11068,
              "src": "2804:8:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$11068",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "2798:21:13",
            "typeName": null
          },
          {
            "constant": false,
            "functionSelector": "9d76ea58",
            "id": 4664,
            "mutability": "mutable",
            "name": "tokenAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4958,
            "src": "2904:28:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MRVToken_$736",
              "typeString": "contract MRVToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 4663,
              "name": "MRVToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 736,
              "src": "2904:8:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MRVToken_$736",
                "typeString": "contract MRVToken"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3a0a82ad",
            "id": 4666,
            "mutability": "mutable",
            "name": "minDepositInAtomicUnits",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4958,
            "src": "3006:35:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4665,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "3006:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7dd56411",
            "id": 4670,
            "mutability": "mutable",
            "name": "ownerOf",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4958,
            "src": "3203:42:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
              "typeString": "mapping(bytes32 => address)"
            },
            "typeName": {
              "id": 4669,
              "keyType": {
                "id": 4667,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "3211:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "3203:27:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                "typeString": "mapping(bytes32 => address)"
              },
              "valueType": {
                "id": 4668,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3222:7:13",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9bf77fb4",
            "id": 4674,
            "mutability": "mutable",
            "name": "depositFor",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4958,
            "src": "3317:42:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 4673,
              "keyType": {
                "id": 4671,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "3325:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "3317:24:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 4672,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3336:4:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4ad2daaf",
            "id": 4676,
            "mutability": "mutable",
            "name": "expectedMrvBalance",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4958,
            "src": "3561:30:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4675,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "3561:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 4682,
            "name": "StarOwnershipChange",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4678,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "starSeed",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4682,
                  "src": "3736:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4677,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3736:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4680,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4682,
                  "src": "3762:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4679,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3762:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3735:52:13"
            },
            "src": "3710:78:13"
          },
          {
            "body": {
              "id": 4700,
              "nodeType": "Block",
              "src": "4078:259:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4690,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4664,
                      "src": "4159:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MRVToken_$736",
                        "typeString": "contract MRVToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4692,
                          "name": "depositTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4685,
                          "src": "4183:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 4691,
                        "name": "MRVToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 736,
                        "src": "4174:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MRVToken_$736_$",
                          "typeString": "type(contract MRVToken)"
                        }
                      },
                      "id": 4693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4174:29:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MRVToken_$736",
                        "typeString": "contract MRVToken"
                      }
                    },
                    "src": "4159:44:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MRVToken_$736",
                      "typeString": "contract MRVToken"
                    }
                  },
                  "id": 4695,
                  "nodeType": "ExpressionStatement",
                  "src": "4159:44:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4696,
                      "name": "minDepositInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4666,
                      "src": "4274:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4697,
                      "name": "initialMinDepositInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4687,
                      "src": "4300:30:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4274:56:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4699,
                  "nodeType": "ExpressionStatement",
                  "src": "4274:56:13"
                }
              ]
            },
            "documentation": {
              "id": 4683,
              "nodeType": "StructuredDocumentation",
              "src": "3798:182:13",
              "text": " Deploy a new copy of the Macroverse Star Registry.\n The given token will be used to pay deposits, and the given minimum\n deposit size will be required."
            },
            "id": 4701,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4685,
                  "mutability": "mutable",
                  "name": "depositTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4701,
                  "src": "3997:35:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 4684,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3997:15:13",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4687,
                  "mutability": "mutable",
                  "name": "initialMinDepositInAtomicUnits",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4701,
                  "src": "4034:35:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4686,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4034:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3996:74:13"
            },
            "returnParameters": {
              "id": 4689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4078:0:13"
            },
            "scope": 4958,
            "src": "3985:352:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4713,
              "nodeType": "Block",
              "src": "4545:73:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4709,
                      "name": "minDepositInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4666,
                      "src": "4555:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4710,
                      "name": "newMinimumDepositInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4704,
                      "src": "4581:30:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4555:56:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4712,
                  "nodeType": "ExpressionStatement",
                  "src": "4555:56:13"
                }
              ]
            },
            "documentation": {
              "id": 4702,
              "nodeType": "StructuredDocumentation",
              "src": "4347:110:13",
              "text": " Allow the owner to set the minimum deposit amount for granting new\n ownership claims."
            },
            "functionSelector": "e78ec42e",
            "id": 4714,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4707,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4706,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10752,
                  "src": "4535:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4535:9:13"
              }
            ],
            "name": "setMinimumDeposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4704,
                  "mutability": "mutable",
                  "name": "newMinimumDepositInAtomicUnits",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4714,
                  "src": "4489:35:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4703,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4489:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4488:37:13"
            },
            "returnParameters": {
              "id": 4708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4545:0:13"
            },
            "scope": 4958,
            "src": "4462:156:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4779,
              "nodeType": "Block",
              "src": "5255:856:13",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4722,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4670,
                        "src": "5327:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 4724,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4723,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4717,
                        "src": "5335:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5327:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 4727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5356:1:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5348:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4725,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5348:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 4728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5348:10:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5327:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4733,
                  "nodeType": "IfStatement",
                  "src": "5323:45:13",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4730,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "5360:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5360:8:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4732,
                    "nodeType": "ExpressionStatement",
                    "src": "5360:8:13"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4734,
                      "name": "depositInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4719,
                      "src": "5532:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 4735,
                      "name": "minDepositInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4666,
                      "src": "5555:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5532:46:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4740,
                  "nodeType": "IfStatement",
                  "src": "5528:60:13",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4737,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "5580:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5580:8:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4739,
                    "nodeType": "ExpressionStatement",
                    "src": "5580:8:13"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4741,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4670,
                        "src": "5652:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 4743,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4742,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4717,
                        "src": "5660:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5652:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4744,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5672:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5672:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5652:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4747,
                  "nodeType": "ExpressionStatement",
                  "src": "5652:30:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4748,
                        "name": "depositFor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4674,
                        "src": "5692:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 4750,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4749,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4717,
                        "src": "5703:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5692:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4751,
                      "name": "depositInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4719,
                      "src": "5715:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5692:43:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4753,
                  "nodeType": "ExpressionStatement",
                  "src": "5692:43:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4754,
                      "name": "expectedMrvBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4676,
                      "src": "5745:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4757,
                          "name": "depositInAtomicUnits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4719,
                          "src": "5789:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4755,
                          "name": "expectedMrvBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4676,
                          "src": "5766:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10901,
                        "src": "5766:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5766:44:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5745:65:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4760,
                  "nodeType": "ExpressionStatement",
                  "src": "5745:65:13"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4762,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4717,
                        "src": "5877:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4763,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5887:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5887:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 4761,
                      "name": "StarOwnershipChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4682,
                      "src": "5857:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5857:41:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4766,
                  "nodeType": "EmitStatement",
                  "src": "5852:46:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4770,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5997:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5997:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4774,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6017:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MacroverseStarRegistry_$4958",
                              "typeString": "contract MacroverseStarRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MacroverseStarRegistry_$4958",
                              "typeString": "contract MacroverseStarRegistry"
                            }
                          ],
                          "id": 4773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6009:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4772,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6009:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 4775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6009:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4776,
                        "name": "depositInAtomicUnits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4719,
                        "src": "6024:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4767,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4664,
                        "src": "5971:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MRVToken_$736",
                          "typeString": "contract MRVToken"
                        }
                      },
                      "id": 4769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11273,
                      "src": "5971:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5971:74:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4778,
                  "nodeType": "ExpressionStatement",
                  "src": "5971:74:13"
                }
              ]
            },
            "documentation": {
              "id": 4715,
              "nodeType": "StructuredDocumentation",
              "src": "4628:544:13",
              "text": " Acquire ownership of an unclaimed star.\n To claim a star, you need to put up a deposit of MRV. You need to call\n approve() on the MRV token contract to allow this contract to debit the\n requested deposit from your account. The deposit must be more than the\n current minimum deposit.\n YOU and ONLY YOU are responsible for remembering the seeds of stars you\n own, so you can get your deposits back when you are done with them. You\n can't easily get a listing from this contract."
            },
            "functionSelector": "9ba55439",
            "id": 4780,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimOwnership",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4717,
                  "mutability": "mutable",
                  "name": "starSeed",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4780,
                  "src": "5201:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4716,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5201:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4719,
                  "mutability": "mutable",
                  "name": "depositInAtomicUnits",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4780,
                  "src": "5219:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4718,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5219:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5200:45:13"
            },
            "returnParameters": {
              "id": 4721,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5255:0:13"
            },
            "scope": 4958,
            "src": "5177:934:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4839,
              "nodeType": "Block",
              "src": "6464:589:13",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4788,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4670,
                        "src": "6526:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 4790,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4789,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4783,
                        "src": "6534:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6526:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4791,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6547:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6547:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6526:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4797,
                  "nodeType": "IfStatement",
                  "src": "6522:45:13",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4794,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "6559:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6559:8:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4796,
                    "nodeType": "ExpressionStatement",
                    "src": "6559:8:13"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4798,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4785,
                      "src": "6666:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 4801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6686:1:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6678:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4799,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6678:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 4802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6678:10:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6666:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4807,
                  "nodeType": "IfStatement",
                  "src": "6662:36:13",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4804,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "6690:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6690:8:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4806,
                    "nodeType": "ExpressionStatement",
                    "src": "6690:8:13"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4808,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4785,
                      "src": "6763:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4811,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "6783:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MacroverseStarRegistry_$4958",
                            "typeString": "contract MacroverseStarRegistry"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MacroverseStarRegistry_$4958",
                            "typeString": "contract MacroverseStarRegistry"
                          }
                        ],
                        "id": 4810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6775:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4809,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6775:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 4812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6775:13:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6763:25:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4817,
                  "nodeType": "IfStatement",
                  "src": "6759:39:13",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4814,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "6790:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6790:8:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4816,
                    "nodeType": "ExpressionStatement",
                    "src": "6790:8:13"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4818,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4785,
                      "src": "6839:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4821,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4664,
                          "src": "6859:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MRVToken_$736",
                            "typeString": "contract MRVToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MRVToken_$736",
                            "typeString": "contract MRVToken"
                          }
                        ],
                        "id": 4820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6851:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4819,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6851:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 4822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6851:21:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6839:33:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4827,
                  "nodeType": "IfStatement",
                  "src": "6835:47:13",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4824,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "6874:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6874:8:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4826,
                    "nodeType": "ExpressionStatement",
                    "src": "6874:8:13"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4828,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4670,
                        "src": "6932:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 4830,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4829,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4783,
                        "src": "6940:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6932:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4831,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4785,
                      "src": "6952:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6932:28:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4833,
                  "nodeType": "ExpressionStatement",
                  "src": "6932:28:13"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4835,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4783,
                        "src": "7027:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4836,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4785,
                        "src": "7037:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4834,
                      "name": "StarOwnershipChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4682,
                      "src": "7007:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7007:39:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4838,
                  "nodeType": "EmitStatement",
                  "src": "7002:44:13"
                }
              ]
            },
            "documentation": {
              "id": 4781,
              "nodeType": "StructuredDocumentation",
              "src": "6121:266:13",
              "text": " Transfer ownership of a star from the sender to the given address.\n You don't need to meet the access control requirements to get rid of\n your owned stars, or to own stars. But you might not be able to\n query anything about them."
            },
            "functionSelector": "ef5d6bbb",
            "id": 4840,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4783,
                  "mutability": "mutable",
                  "name": "starSeed",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4840,
                  "src": "6419:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4782,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6419:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4785,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4840,
                  "src": "6437:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6437:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6418:36:13"
            },
            "returnParameters": {
              "id": 4787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6464:0:13"
            },
            "scope": 4958,
            "src": "6392:661:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4905,
              "nodeType": "Block",
              "src": "7430:789:13",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4846,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4670,
                        "src": "7495:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 4848,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4847,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4843,
                        "src": "7503:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7495:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4849,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "7516:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7516:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "7495:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4855,
                  "nodeType": "IfStatement",
                  "src": "7491:45:13",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4852,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "7528:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7528:8:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4854,
                    "nodeType": "ExpressionStatement",
                    "src": "7528:8:13"
                  }
                },
                {
                  "assignments": [
                    4857
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4857,
                      "mutability": "mutable",
                      "name": "depositSize",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4905,
                      "src": "7593:16:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4856,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7593:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4861,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4858,
                      "name": "depositFor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4674,
                      "src": "7612:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 4860,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4859,
                      "name": "starSeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4843,
                      "src": "7623:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7612:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7593:39:13"
                },
                {
                  "assignments": [
                    4863
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4863,
                      "mutability": "mutable",
                      "name": "oldOwner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4905,
                      "src": "7666:16:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4862,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7666:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4867,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4864,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4670,
                      "src": "7685:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                        "typeString": "mapping(bytes32 => address)"
                      }
                    },
                    "id": 4866,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4865,
                      "name": "starSeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4843,
                      "src": "7693:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7685:17:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7666:36:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4868,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4670,
                        "src": "7748:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 4870,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4869,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4843,
                        "src": "7756:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7748:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 4873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7776:1:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7768:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4871,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7768:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 4874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7768:10:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "7748:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4876,
                  "nodeType": "ExpressionStatement",
                  "src": "7748:30:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4877,
                        "name": "depositFor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4674,
                        "src": "7823:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 4879,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4878,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4843,
                        "src": "7834:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7823:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7846:1:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7823:24:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4882,
                  "nodeType": "ExpressionStatement",
                  "src": "7823:24:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4883,
                      "name": "expectedMrvBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4676,
                      "src": "7901:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4886,
                          "name": "depositSize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4857,
                          "src": "7945:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4884,
                          "name": "expectedMrvBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4676,
                          "src": "7922:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10918,
                        "src": "7922:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7922:35:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7901:56:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4889,
                  "nodeType": "ExpressionStatement",
                  "src": "7901:56:13"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4891,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4843,
                        "src": "8044:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 4894,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8062:1:13",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8054:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4892,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8054:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 4895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8054:10:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 4890,
                      "name": "StarOwnershipChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4682,
                      "src": "8024:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8024:41:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4897,
                  "nodeType": "EmitStatement",
                  "src": "8019:46:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4901,
                        "name": "oldOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4863,
                        "src": "8134:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4902,
                        "name": "depositSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4857,
                        "src": "8144:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4898,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4664,
                        "src": "8112:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MRVToken_$736",
                          "typeString": "contract MRVToken"
                        }
                      },
                      "id": 4900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11196,
                      "src": "8112:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8112:44:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4904,
                  "nodeType": "ExpressionStatement",
                  "src": "8112:44:13"
                }
              ]
            },
            "documentation": {
              "id": 4841,
              "nodeType": "StructuredDocumentation",
              "src": "7191:180:13",
              "text": " Give up ownership of an owned star.\n The MRV deposit originally paid to acquire ownership of the star will\n be paid out to the sender of the message."
            },
            "functionSelector": "dccbaa99",
            "id": 4906,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "abdicateOwnership",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4843,
                  "mutability": "mutable",
                  "name": "starSeed",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4906,
                  "src": "7403:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4842,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7403:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7402:18:13"
            },
            "returnParameters": {
              "id": 4845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7430:0:13"
            },
            "scope": 4958,
            "src": "7376:843:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4956,
              "nodeType": "Block",
              "src": "8410:563:13",
              "statements": [
                {
                  "assignments": [
                    4915
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4915,
                      "mutability": "mutable",
                      "name": "other",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4956,
                      "src": "8420:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$11653",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4914,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 11653,
                        "src": "8420:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11653",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4919,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4917,
                        "name": "otherToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4909,
                        "src": "8442:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4916,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11653,
                      "src": "8435:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$11653_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 4918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8435:18:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$11653",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8420:33:13"
                },
                {
                  "assignments": [
                    4921
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4921,
                      "mutability": "mutable",
                      "name": "excessBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4956,
                      "src": "8514:18:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4920,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8514:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4929,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4926,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8559:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MacroverseStarRegistry_$4958",
                              "typeString": "contract MacroverseStarRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MacroverseStarRegistry_$4958",
                              "typeString": "contract MacroverseStarRegistry"
                            }
                          ],
                          "id": 4925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8551:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4924,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8551:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 4927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8551:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4922,
                        "name": "other",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4915,
                        "src": "8535:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11653",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11592,
                      "src": "8535:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8535:30:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8514:51:13"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4932,
                          "name": "other",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4915,
                          "src": "8648:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$11653",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$11653",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 4931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8640:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4930,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8640:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 4933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8640:14:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4936,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4664,
                          "src": "8666:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MRVToken_$736",
                            "typeString": "contract MRVToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MRVToken_$736",
                            "typeString": "contract MRVToken"
                          }
                        ],
                        "id": 4935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8658:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4934,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8658:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 4937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8658:21:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "8640:39:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4947,
                  "nodeType": "IfStatement",
                  "src": "8636:200:13",
                  "trueBody": {
                    "id": 4946,
                    "nodeType": "Block",
                    "src": "8681:155:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 4939,
                            "name": "excessBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4921,
                            "src": "8772:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4942,
                                "name": "expectedMrvBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4676,
                                "src": "8806:18:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 4940,
                                "name": "excessBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4921,
                                "src": "8788:13:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10918,
                              "src": "8788:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4943,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8788:37:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8772:53:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4945,
                        "nodeType": "ExpressionStatement",
                        "src": "8772:53:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4951,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10739,
                          "src": "8943:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8943:7:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4953,
                        "name": "excessBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4921,
                        "src": "8952:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4948,
                        "name": "other",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4915,
                        "src": "8928:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11653",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11602,
                      "src": "8928:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8928:38:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4955,
                  "nodeType": "ExpressionStatement",
                  "src": "8928:38:13"
                }
              ]
            },
            "documentation": {
              "id": 4907,
              "nodeType": "StructuredDocumentation",
              "src": "8229:115:13",
              "text": " Allow the owner to collect any non-MRV tokens, or any excess MRV, that ends up in this contract."
            },
            "functionSelector": "17ffc320",
            "id": 4957,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4912,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4911,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10752,
                  "src": "8400:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8400:9:13"
              }
            ],
            "name": "reclaimToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4909,
                  "mutability": "mutable",
                  "name": "otherToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4957,
                  "src": "8371:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4908,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8371:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8370:20:13"
            },
            "returnParameters": {
              "id": 4913,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8410:0:13"
            },
            "scope": 4958,
            "src": "8349:624:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4959,
        "src": "2721:6254:13"
      }
    ],
    "src": "0:9040:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.10+commit.00c0fcaf.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {
        "0x575875f7fca9a5932686f3a3f2153e91772df070936be6bba7edbc61d339e60f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "starSeed",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address",
              "internalType": "address"
            }
          ],
          "name": "StarOwnershipChange",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x6c00556f471cbe518007d62bc4aced6d8e537c9d",
      "updated_at": 1498363737179
    },
    "4": {
      "events": {
        "0x575875f7fca9a5932686f3a3f2153e91772df070936be6bba7edbc61d339e60f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "starSeed",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address",
              "internalType": "address"
            }
          ],
          "name": "StarOwnershipChange",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address",
              "internalType": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xd6a6a7001f23C953D7492d36D48d30673E3577fA",
      "transactionHash": "0x5f165fdc937aafe6b300374e1ea4975cdc0869cc4f8fa45f2b33774b896f4ba8"
    },
    "5777": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x575875f7fca9a5932686f3a3f2153e91772df070936be6bba7edbc61d339e60f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "starSeed",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "StarOwnershipChange",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x4772Aa766ae34c0977F4EEFeDa0B2c6066047cf6",
      "transactionHash": "0xed701b390ad435b0eac4aaabec734c4d6afca3f3b9202a272aa9827685ee6203"
    }
  },
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-09-22T04:13:30.925Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "reclaimContract(address)": {
        "details": "Reclaim ownership of Ownable contracts",
        "params": {
          "contractAddr": "The address of the Ownable to be reclaimed."
        }
      },
      "reclaimEther()": {
        "details": "Transfer all Ether held by the contract to the owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "abdicateOwnership(bytes32)": {
        "notice": "Give up ownership of an owned star. The MRV deposit originally paid to acquire ownership of the star will be paid out to the sender of the message."
      },
      "claimOwnership(bytes32,uint256)": {
        "notice": "Acquire ownership of an unclaimed star. To claim a star, you need to put up a deposit of MRV. You need to call approve() on the MRV token contract to allow this contract to debit the requested deposit from your account. The deposit must be more than the current minimum deposit. YOU and ONLY YOU are responsible for remembering the seeds of stars you own, so you can get your deposits back when you are done with them. You can't easily get a listing from this contract."
      },
      "constructor": "Deploy a new copy of the Macroverse Star Registry. The given token will be used to pay deposits, and the given minimum deposit size will be required.",
      "reclaimToken(address)": {
        "notice": "Allow the owner to collect any non-MRV tokens, or any excess MRV, that ends up in this contract."
      },
      "setMinimumDeposit(uint256)": {
        "notice": "Allow the owner to set the minimum deposit amount for granting new ownership claims."
      },
      "transferOwnership(bytes32,address)": {
        "notice": "Transfer ownership of a star from the sender to the given address. You don't need to meet the access control requirements to get rid of your owned stars, or to own stars. But you might not be able to query anything about them."
      }
    },
    "notice": "The Macroverse Star Registry keeps track of who currently owns virtual real estate in the Macroverse world, at the scale of star systems and other star-like objects. Ownership is handled by having the first person who wants to own an object claim it, by putting up a deposit in MRV tokens of a certain minimum size. Note that the owner of the contract reserves the right to adjust this minimum size at any time, for any reason, and without notice. Since the size of the deposit to be made is specified by the claimant, trying to claim something when the minimum deposit size has been increased without your knowledge should at worst result in wasted gas. Owners of objects can send them to other addresses, and an owner can abdicate ownership of an object and collect the original MRV deposit used to claim it. Note that the claiming system used here is not protected against front-running. Anyone can see your claim transaction before it is mined, and claim the object you were going for first. However, they would then need to find it among the many billions of objects in the Macroverse universe, because this contract only records ownership by seed. Note that ownership of a star system does not necessarily imply ownership of everything in it. Just as one person can own a condo in another person's building, one person can own a planet in another person's star system. All ownership is recorded using star seeds; no attempt is made to enforce that a given seed actually exists in the Macroverse world. It is possible to purchase (and sell!) nonexistent star systems, or star systems that you don't know where they are. Caveat emptor. The deployer of this contract reserves the right to supersede it with a new version at any time, for any reason, and without notice. The deployer of this contract reserves the right to leave it in place as is indefinitely. The deployer of this contract reserves the right to claim and keep any tokens or ETH or contracts sent to this contract, in excess of the MRV balance that this contract thinks it is supposed to have. TODO: Note that the deployed version of this contract on the mainnet is slightly different! In particular, this version reverts where the deployed version throws, to make newer compilers stop warning whenever you build the Macroverse project."
  }
}