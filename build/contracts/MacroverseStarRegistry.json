{
  "contractName": "MacroverseStarRegistry",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "contractAddr",
          "type": "address"
        }
      ],
      "name": "reclaimContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minDepositInAtomicUnits",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "expectedMrvBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "depositFor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "reclaimEther",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "depositTokenAddress",
          "type": "address"
        },
        {
          "name": "initialMinDepositInAtomicUnits",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "starSeed",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "StarOwnershipChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newMinimumDepositInAtomicUnits",
          "type": "uint256"
        }
      ],
      "name": "setMinimumDeposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "starSeed",
          "type": "bytes32"
        },
        {
          "name": "depositInAtomicUnits",
          "type": "uint256"
        }
      ],
      "name": "claimOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "starSeed",
          "type": "bytes32"
        },
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "starSeed",
          "type": "bytes32"
        }
      ],
      "name": "abdicateOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "otherToken",
          "type": "address"
        }
      ],
      "name": "reclaimToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"otherToken\",\"type\":\"address\"}],\"name\":\"reclaimToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"reclaimContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minDepositInAtomicUnits\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"expectedMrvBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"starSeed\",\"type\":\"bytes32\"},{\"name\":\"depositInAtomicUnits\",\"type\":\"uint256\"}],\"name\":\"claimOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"depositFor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reclaimEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"starSeed\",\"type\":\"bytes32\"}],\"name\":\"abdicateOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newMinimumDepositInAtomicUnits\",\"type\":\"uint256\"}],\"name\":\"setMinimumDeposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"starSeed\",\"type\":\"bytes32\"},{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"depositTokenAddress\",\"type\":\"address\"},{\"name\":\"initialMinDepositInAtomicUnits\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"starSeed\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"StarOwnershipChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"reclaimContract(address)\":{\"details\":\"Reclaim ownership of Ownable contracts\",\"params\":{\"contractAddr\":\"The address of the Ownable to be reclaimed.\"}},\"reclaimEther()\":{\"details\":\"Transfer all Ether held by the contract to the owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"abdicateOwnership(bytes32)\":{\"notice\":\"Give up ownership of an owned star. The MRV deposit originally paid to acquire ownership of the star will be paid out to the sender of the message.\"},\"claimOwnership(bytes32,uint256)\":{\"notice\":\"Acquire ownership of an unclaimed star. To claim a star, you need to put up a deposit of MRV. You need to call approve() on the MRV token contract to allow this contract to debit the requested deposit from your account. The deposit must be more than the current minimum deposit.     * YOU and ONLY YOU are responsible for remembering the seeds of stars you own, so you can get your deposits back when you are done with them. You can't easily get a listing from this contract.\"},\"constructor\":\"Deploy a new copy of the Macroverse Star Registry. The given token will be used to pay deposits, and the given minimum deposit size will be required.\",\"reclaimToken(address)\":{\"notice\":\"Allow the owner to collect any non-MRV tokens, or any excess MRV, that ends up in this contract.\"},\"setMinimumDeposit(uint256)\":{\"notice\":\"Allow the owner to set the minimum deposit amount for granting new ownership claims.\"},\"transferOwnership(bytes32,address)\":{\"notice\":\"Transfer ownership of a star from the sender to the given address. You don't need to meet the access control requirements to get rid of your owned stars, or to own stars. But you might not be able to query anything about them.\"}},\"notice\":\"The Macroverse Star Registry keeps track of who currently owns virtual real estate in the Macroverse world, at the scale of star systems and other star-like objects. * Ownership is handled by having the first person who wants to own an object claim it, by putting up a deposit in MRV tokens of a certain minimum size. Note that the owner of the contract reserves the right to adjust this minimum size at any time, for any reason, and without notice. Since the size of the deposit to be made is specified by the claimant, trying to claim something when the minimum deposit size has been increased without your knowledge should at worst result in wasted gas. * Owners of objects can send them to other addresses, and an owner can abdicate ownership of an object and collect the original MRV deposit used to claim it. * Note that the claiming system used here is not protected against front-running. Anyone can see your claim transaction before it is mined, and claim the object you were going for first. However, they would then need to find it among the many billions of objects in the Macroverse universe, because this contract only records ownership by seed. * Note that ownership of a star system does not necessarily imply ownership of everything in it. Just as one person can own a condo in another person's building, one person can own a planet in another person's star system. * All ownership is recorded using star seeds; no attempt is made to enforce that a given seed actually exists in the Macroverse world. It is possible to purchase (and sell!) nonexistent star systems, or star systems that you don't know where they are. Caveat emptor. * The deployer of this contract reserves the right to supersede it with a new version at any time, for any reason, and without notice. The deployer of this contract reserves the right to leave it in place as is indefinitely. * The deployer of this contract reserves the right to claim and keep any tokens or ETH or contracts sent to this contract, in excess of the MRV balance that this contract thinks it is supposed to have. * TODO: Note that the deployed version of this contract on the mainnet is slightly different! In particular, this version reverts where the deployed version throws, to make newer compilers stop warning whenever you build the Macroverse project.\"}},\"settings\":{\"compilationTarget\":{\"/Users/anovak/Documents/Workspace/macroverse/contracts/MacroverseStarRegistry.sol\":\"MacroverseStarRegistry\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/anovak/Documents/Workspace/macroverse/contracts/HasNoContracts.sol\":{\"keccak256\":\"0x78de034c0e6f5f332a7d9d2114c74762f1210e2e41996b7fb156491270a2afee\",\"urls\":[\"bzzr://2a31bb7d78455f8efa065120172a659e97e9878c201f266f17c5fa5ed8444662\"]},\"/Users/anovak/Documents/Workspace/macroverse/contracts/HasNoEther.sol\":{\"keccak256\":\"0x4f526a038c289199802c58f2762a7898fde57b7c6d052fc04634e8877c03acbe\",\"urls\":[\"bzzr://9e0679829a80dbb1af3468578e31bcf394bf7ea738e633a84e18e8390bab6c39\"]},\"/Users/anovak/Documents/Workspace/macroverse/contracts/HasNoTokens.sol\":{\"keccak256\":\"0x0c2eee7d9dd43a89930012a933e3bbbec14e42742e9df2a311bb965d22d05924\",\"urls\":[\"bzzr://589e07a81127ddc2e64eca4752018dc5a6a3ac3cb5c18e3a64e431981ca36971\"]},\"/Users/anovak/Documents/Workspace/macroverse/contracts/MRVToken.sol\":{\"keccak256\":\"0xd9d2f72e148657f64220ae6aeba45850d0766e58c192b99fd6e317dafcd6483f\",\"urls\":[\"bzzr://74f8cb299f4ef6ac549742ef826edad873d17dd8f5a4d4bddd40288002d8e6b5\"]},\"/Users/anovak/Documents/Workspace/macroverse/contracts/MacroverseStarRegistry.sol\":{\"keccak256\":\"0x445c6b0dee7b4b31a4c7a94ca67cc001ca0014c70797fbd89a5bb3495f90a593\",\"urls\":[\"bzzr://486dbf656bd00ec23fe1ba33f6aa5e472cb8817b90bec1a11bae7352b2c93da8\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xecd8ab29d9a5771c3964d0cd1788c4a5098a0081b20fb275da850a22b1c59806\",\"urls\":[\"bzzr://4950def18270142a78d503ef6b7b13bdb053f2f050cee50c883cd7cab2bb02d7\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x65a4078c03875c25413a068ce9cfdd7e68a90f8786612d1189c89341e6e3b802\",\"urls\":[\"bzzr://fefcc5ec4e313a66c9fd38375983b5973c528e7e19b6d37c2f1ac6745295e6e2\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzzr://cf2d583b8dce38d0617fdcd65f2fd9f126fe17b7f683b5a515ea9d2762d8b062\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516040806117838339810180604052604081101561003057600080fd5b81019080805190602001909291908051906020019092919050505061005961017060201b60201c565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000341461012157600080fd5b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806002819055505050610178565b600033905090565b6115fc806101876000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80639ba5543911610097578063dccbaa9911610066578063dccbaa9914610378578063e78ec42e146103a6578063ef5d6bbb146103d4578063f2fde38b1461042257610100565b80639ba55439146102aa5780639bf77fb4146102e25780639d76ea58146103245780639f727c271461036e57610100565b8063715018a6116100d3578063715018a6146101c65780637dd56411146101d05780638da5cb5b1461023e5780638f32d59b1461028857610100565b806317ffc320146101025780632aed7f3f146101465780633a0a82ad1461018a5780634ad2daaf146101a8575b005b6101446004803603602081101561011857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610466565b005b6101886004803603602081101561015c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106de565b005b6101926107ff565b6040518082815260200191505060405180910390f35b6101b0610805565b6040518082815260200191505060405180910390f35b6101ce61080b565b005b6101fc600480360360208110156101e657600080fd5b8101908080359060200190929190505050610944565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610246610977565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102906109a0565b604051808215151515815260200191505060405180910390f35b6102e0600480360360408110156102c057600080fd5b8101908080359060200190929190803590602001909291905050506109fe565b005b61030e600480360360208110156102f857600080fd5b8101908080359060200190929190505050610c5f565b6040518082815260200191505060405180910390f35b61032c610c77565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610376610c9d565b005b6103a46004803603602081101561038e57600080fd5b8101908080359060200190929190505050610d7e565b005b6103d2600480360360208110156103bc57600080fd5b8101908080359060200190929190505050610fef565b005b610420600480360360408110156103ea57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611073565b005b6104646004803603602081101561043857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611246565b005b61046e6109a0565b6104e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600081905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561056457600080fd5b505afa158015610578573d6000803e3d6000fd5b505050506040513d602081101561058e57600080fd5b81019080805190602001909291905050509050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561060f5761060c600554826112cc90919063ffffffff16565b90505b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610633610977565b836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561069d57600080fd5b505af11580156106b1573d6000803e3d6000fd5b505050506040513d60208110156106c757600080fd5b810190808051906020019092919050505050505050565b6106e66109a0565b610758576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008190508073ffffffffffffffffffffffffffffffffffffffff1663f2fde38b610781610977565b6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156107e357600080fd5b505af11580156107f7573d6000803e3d6000fd5b505050505050565b60025481565b60055481565b6108136109a0565b610885576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166109e2611316565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b600073ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a6a57600080fd5b600254811015610a7957600080fd5b336003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806004600084815260200190815260200160002081905550610af88160055461131e90919063ffffffff16565b6005819055503373ffffffffffffffffffffffffffffffffffffffff16827f575875f7fca9a5932686f3a3f2153e91772df070936be6bba7edbc61d339e60f60405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015610c1f57600080fd5b505af1158015610c33573d6000803e3d6000fd5b505050506040513d6020811015610c4957600080fd5b8101908080519060200190929190505050505050565b60046020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610ca56109a0565b610d17576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610d1f610977565b73ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610d7b573d6000803e3d6000fd5b50565b3373ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610de957600080fd5b60006004600083815260200190815260200160002054905060006003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006003600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006004600085815260200190815260200160002081905550610eba826005546112cc90919063ffffffff16565b600581905550600073ffffffffffffffffffffffffffffffffffffffff16837f575875f7fca9a5932686f3a3f2153e91772df070936be6bba7edbc61d339e60f60405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610fae57600080fd5b505af1158015610fc2573d6000803e3d6000fd5b505050506040513d6020811015610fd857600080fd5b810190808051906020019092919050505050505050565b610ff76109a0565b611069576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b8060028190555050565b3373ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146110de57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561111857600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561115157600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156111ac57600080fd5b806003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16827f575875f7fca9a5932686f3a3f2153e91772df070936be6bba7edbc61d339e60f60405160405180910390a35050565b61124e6109a0565b6112c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6112c9816113a6565b50565b600061130e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506114ea565b905092915050565b600033905090565b60008082840190508381101561139c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561142c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806115ab6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000838311158290611597576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561155c578082015181840152602081019050611541565b50505050905090810190601f1680156115895780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a165627a7a723058200e0d78484dbb5f0cd35491108a8798e826930824277aa7110fc313a8acd12d7f0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80639ba5543911610097578063dccbaa9911610066578063dccbaa9914610378578063e78ec42e146103a6578063ef5d6bbb146103d4578063f2fde38b1461042257610100565b80639ba55439146102aa5780639bf77fb4146102e25780639d76ea58146103245780639f727c271461036e57610100565b8063715018a6116100d3578063715018a6146101c65780637dd56411146101d05780638da5cb5b1461023e5780638f32d59b1461028857610100565b806317ffc320146101025780632aed7f3f146101465780633a0a82ad1461018a5780634ad2daaf146101a8575b005b6101446004803603602081101561011857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610466565b005b6101886004803603602081101561015c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106de565b005b6101926107ff565b6040518082815260200191505060405180910390f35b6101b0610805565b6040518082815260200191505060405180910390f35b6101ce61080b565b005b6101fc600480360360208110156101e657600080fd5b8101908080359060200190929190505050610944565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610246610977565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102906109a0565b604051808215151515815260200191505060405180910390f35b6102e0600480360360408110156102c057600080fd5b8101908080359060200190929190803590602001909291905050506109fe565b005b61030e600480360360208110156102f857600080fd5b8101908080359060200190929190505050610c5f565b6040518082815260200191505060405180910390f35b61032c610c77565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610376610c9d565b005b6103a46004803603602081101561038e57600080fd5b8101908080359060200190929190505050610d7e565b005b6103d2600480360360208110156103bc57600080fd5b8101908080359060200190929190505050610fef565b005b610420600480360360408110156103ea57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611073565b005b6104646004803603602081101561043857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611246565b005b61046e6109a0565b6104e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600081905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561056457600080fd5b505afa158015610578573d6000803e3d6000fd5b505050506040513d602081101561058e57600080fd5b81019080805190602001909291905050509050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561060f5761060c600554826112cc90919063ffffffff16565b90505b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610633610977565b836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561069d57600080fd5b505af11580156106b1573d6000803e3d6000fd5b505050506040513d60208110156106c757600080fd5b810190808051906020019092919050505050505050565b6106e66109a0565b610758576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008190508073ffffffffffffffffffffffffffffffffffffffff1663f2fde38b610781610977565b6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156107e357600080fd5b505af11580156107f7573d6000803e3d6000fd5b505050505050565b60025481565b60055481565b6108136109a0565b610885576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166109e2611316565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b600073ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a6a57600080fd5b600254811015610a7957600080fd5b336003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806004600084815260200190815260200160002081905550610af88160055461131e90919063ffffffff16565b6005819055503373ffffffffffffffffffffffffffffffffffffffff16827f575875f7fca9a5932686f3a3f2153e91772df070936be6bba7edbc61d339e60f60405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015610c1f57600080fd5b505af1158015610c33573d6000803e3d6000fd5b505050506040513d6020811015610c4957600080fd5b8101908080519060200190929190505050505050565b60046020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610ca56109a0565b610d17576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610d1f610977565b73ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610d7b573d6000803e3d6000fd5b50565b3373ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610de957600080fd5b60006004600083815260200190815260200160002054905060006003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006003600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006004600085815260200190815260200160002081905550610eba826005546112cc90919063ffffffff16565b600581905550600073ffffffffffffffffffffffffffffffffffffffff16837f575875f7fca9a5932686f3a3f2153e91772df070936be6bba7edbc61d339e60f60405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610fae57600080fd5b505af1158015610fc2573d6000803e3d6000fd5b505050506040513d6020811015610fd857600080fd5b810190808051906020019092919050505050505050565b610ff76109a0565b611069576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b8060028190555050565b3373ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146110de57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561111857600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561115157600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156111ac57600080fd5b806003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16827f575875f7fca9a5932686f3a3f2153e91772df070936be6bba7edbc61d339e60f60405160405180910390a35050565b61124e6109a0565b6112c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6112c9816113a6565b50565b600061130e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506114ea565b905092915050565b600033905090565b60008082840190508381101561139c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561142c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806115ab6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000838311158290611597576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561155c578082015181840152602081019050611541565b50505050905090810190601f1680156115895780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a165627a7a723058200e0d78484dbb5f0cd35491108a8798e826930824277aa7110fc313a8acd12d7f0029",
  "sourceMap": "2723:6254:13:-;;;3987:352;8:9:-1;5:2;;;30:1;27;20:12;5:2;3987:352:13;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3987:352:13;;;;;;;;;;;;;;;;;;;;;;;;;707:12:30;:10;;;:12;;:::i;:::-;698:6;;:21;;;;;;;;;;;;;;;;;;767:6;;;;;;;;;;;734:40;;763:1;734:40;;;;;;;;;;;;1007:1:3;994:9;:14;986:23;;;;;;4185:19:13;4161:12;;:44;;;;;;;;;;;;;;;;;;4302:30;4276:23;:56;;;;3987:352;;2723:6254;;788:96:25;833:15;867:10;860:17;;788:96;:::o;2723:6254:13:-;;;;;;;",
  "deployedSourceMap": "2723:6254:13:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2723:6254:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8351:624;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8351:624:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;519:166:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;519:166:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;3008:35:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3563:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1642:137:30;;;:::i;:::-;;3205:42:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3205:42:13;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;857:77:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1208:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5179:934:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5179:934:13;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3319:42;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3319:42:13;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2906:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1223:214:3;;;:::i;:::-;;7378:843:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7378:843:13;;;;;;;;;;;;;;;;;:::i;:::-;;4464:156;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4464:156:13;;;;;;;;;;;;;;;;;:::i;:::-;;6394:661;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6394:661:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1928:107:30;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1928:107:30;;;;;;;;;;;;;;;;;;;:::i;:::-;;8351:624:13;1061:9:30;:7;:9::i;:::-;1053:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8422:12:13;8444:10;8422:33;;8516:18;8537:5;:15;;;8561:4;8537:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8537:30:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8537:30:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8537:30:13;;;;;;;;;;;;;;;;8516:51;;8668:12;;;;;;;;;;;8642:39;;8650:5;8642:39;;;8638:200;;;8790:37;8808:18;;8790:13;:17;;:37;;;;:::i;:::-;8774:53;;8638:200;8930:5;:14;;;8945:7;:5;:7::i;:::-;8954:13;8930:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8930:38:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8930:38:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8930:38:13;;;;;;;;;;;;;;;;;1117:1:30;;8351:624:13;:::o;519:166:2:-;1061:9:30;:7;:9::i;:::-;1053:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;591:20:2;622:12;591:44;;641:12;:30;;;672:7;:5;:7::i;:::-;641:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;641:39:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;641:39:2;;;;1117:1:30;519:166:2;:::o;3008:35:13:-;;;;:::o;3563:30::-;;;;:::o;1642:137:30:-;1061:9;:7;:9::i;:::-;1053:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1740:1;1703:40;;1724:6;;;;;;;;;;;1703:40;;;;;;;;;;;;1770:1;1753:6;;:19;;;;;;;;;;;;;;;;;;1642:137::o;3205:42:13:-;;;;;;;;;;;;;;;;;;;;;;:::o;857:77:30:-;895:7;921:6;;;;;;;;;;;914:13;;857:77;:::o;1208:92::-;1248:4;1287:6;;;;;;;;;;;1271:22;;:12;:10;:12::i;:::-;:22;;;1264:29;;1208:92;:::o;5179:934:13:-;5358:1;5329:31;;:7;:17;5337:8;5329:17;;;;;;;;;;;;;;;;;;;;;:31;;;5325:45;;5362:8;;;5325:45;5557:23;;5534:20;:46;5530:60;;;5582:8;;;5530:60;5674:10;5654:7;:17;5662:8;5654:17;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;5717:20;5694:10;:20;5705:8;5694:20;;;;;;;;;;;:43;;;;5768:44;5791:20;5768:18;;:22;;:44;;;;:::i;:::-;5747:18;:65;;;;5889:10;5859:41;;5879:8;5859:41;;;;;;;;;;5973:12;;;;;;;;;;;:25;;;5999:10;6019:4;6026:20;5973:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5973:74:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5973:74:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5973:74:13;;;;;;;;;;;;;;;;;5179:934;;:::o;3319:42::-;;;;;;;;;;;;;;;;;:::o;2906:28::-;;;;;;;;;;;;;:::o;1223:214:3:-;1061:9:30;:7;:9::i;:::-;1053:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1391:7:3;:5;:7::i;:::-;1375:34;;:57;1418:4;1410:21;;;1375:57;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1375:57:3;1223:214::o;7378:843:13:-;7518:10;7497:31;;:7;:17;7505:8;7497:17;;;;;;;;;;;;;;;;;;;;;:31;;;7493:45;;7530:8;;;7493:45;7595:16;7614:10;:20;7625:8;7614:20;;;;;;;;;;;;7595:39;;7668:16;7687:7;:17;7695:8;7687:17;;;;;;;;;;;;;;;;;;;;;7668:36;;7778:1;7750:7;:17;7758:8;7750:17;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;7848:1;7825:10;:20;7836:8;7825:20;;;;;;;;;;;:24;;;;7924:35;7947:11;7924:18;;:22;;:35;;;;:::i;:::-;7903:18;:56;;;;8064:1;8026:41;;8046:8;8026:41;;;;;;;;;;8114:12;;;;;;;;;;;:21;;;8136:8;8146:11;8114:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8114:44:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8114:44:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8114:44:13;;;;;;;;;;;;;;;;;7378:843;;;:::o;4464:156::-;1061:9:30;:7;:9::i;:::-;1053:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4583:30:13;4557:23;:56;;;;4464:156;:::o;6394:661::-;6549:10;6528:31;;:7;:17;6536:8;6528:17;;;;;;;;;;;;;;;;;;;;;:31;;;6524:45;;6561:8;;;6524:45;6688:1;6668:22;;:8;:22;;;6664:36;;;6692:8;;;6664:36;6785:4;6765:25;;:8;:25;;;6761:39;;;6792:8;;;6761:39;6861:12;;;;;;;;;;;6841:33;;:8;:33;;;6837:47;;;6876:8;;;6837:47;6954:8;6934:7;:17;6942:8;6934:17;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;7039:8;7009:39;;7029:8;7009:39;;;;;;;;;;6394:661;;:::o;1928:107:30:-;1061:9;:7;:9::i;:::-;1053:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2000:28;2019:8;2000:18;:28::i;:::-;1928:107;:::o;1274:134:29:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;788:96:25:-;833:15;867:10;860:17;;788:96;:::o;834:176:29:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;2136:225:30:-;2229:1;2209:22;;:8;:22;;;;2201:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2318:8;2289:38;;2310:6;;;;;;;;;;;2289:38;;;;;;;;;;;;2346:8;2337:6;;:17;;;;;;;;;;;;;;;;;;2136:225;:::o;1732:187:29:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o",
  "source": "pragma solidity ^0.5.2;\n\nimport \"./MRVToken.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"./HasNoEther.sol\";\nimport \"./HasNoContracts.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\n/**\n * The Macroverse Star Registry keeps track of who currently owns virtual real estate in the\n * Macroverse world, at the scale of star systems and other star-like objects.\n *\n * Ownership is handled by having the first person who wants to own an object claim it, by\n * putting up a deposit in MRV tokens of a certain minimum size. Note that the owner of the\n * contract reserves the right to adjust this minimum size at any time, for any reason, and\n * without notice. Since the size of the deposit to be made is specified by the claimant,\n * trying to claim something when the minimum deposit size has been increased without your\n * knowledge should at worst result in wasted gas.\n *\n * Owners of objects can send them to other addresses, and an owner can abdicate ownership of\n * an object and collect the original MRV deposit used to claim it.\n *\n * Note that the claiming system used here is not protected against front-running. Anyone can\n * see your claim transaction before it is mined, and claim the object you were going for first.\n * However, they would then need to find it among the many billions of objects in the Macroverse\n * universe, because this contract only records ownership by seed.\n *\n * Note that ownership of a star system does not necessarily imply ownership of everything in it.\n * Just as one person can own a condo in another person's building, one person can own a planet in\n * another person's star system.\n *\n * All ownership is recorded using star seeds; no attempt is made to enforce that a given\n * seed actually exists in the Macroverse world. It is possible to purchase (and sell!)\n * nonexistent star systems, or star systems that you don't know where they are. Caveat emptor.\n *\n * The deployer of this contract reserves the right to supersede it with a new version at any time,\n * for any reason, and without notice. The deployer of this contract reserves the right to leave it\n * in place as is indefinitely.\n *\n * The deployer of this contract reserves the right to claim and keep any tokens or ETH or contracts\n * sent to this contract, in excess of the MRV balance that this contract thinks it is supposed to\n * have.\n *\n * TODO: Note that the deployed version of this contract on the mainnet is slightly different!\n * In particular, this version reverts where the deployed version throws, to make newer compilers\n * stop warning whenever you build the Macroverse project.\n */\ncontract MacroverseStarRegistry is Ownable, HasNoEther, HasNoContracts {\n    using SafeMath for *;\n    \n    // This is the token in which star ownership deposits have to be paid.\n    MRVToken public tokenAddress;\n    // This is the minimum ownership deposit in atomic token units.\n    uint public minDepositInAtomicUnits;\n    \n    // This maps from star or other body seed to the address that owns it.\n    // This can be queried without meeting the access control requirements.\n    mapping(bytes32 => address) public ownerOf;\n    \n    // This holds what deposit was paid for each owned item.\n    mapping(bytes32 => uint) public depositFor;\n    \n    // This tracks how much MRV the contract is supposed to have.\n    // If it ends up with extra (because someone incorrectly used transfer() instead of approve()), the owner can remove it.\n    uint public expectedMrvBalance;\n    \n    // This event is fired when ownership of a star system. Giving up ownership transfers to the 0 address.\n    event StarOwnershipChange(bytes32 indexed starSeed, address indexed newOwner);\n    \n    /**\n     * Deploy a new copy of the Macroverse Star Registry.\n     * The given token will be used to pay deposits, and the given minimum\n     * deposit size will be required.\n     */\n    constructor(address payable depositTokenAddress, uint initialMinDepositInAtomicUnits) public {\n        // We can only use one token for the lifetime of the contract.\n        tokenAddress = MRVToken(depositTokenAddress);\n        // But the minimum deposit for new claims can change\n        minDepositInAtomicUnits = initialMinDepositInAtomicUnits;\n    }\n    \n    /**\n     * Allow the owner to set the minimum deposit amount for granting new\n     * ownership claims.\n     */\n    function setMinimumDeposit(uint newMinimumDepositInAtomicUnits) external onlyOwner {\n        minDepositInAtomicUnits = newMinimumDepositInAtomicUnits;\n    }\n    \n    /**\n     * Acquire ownership of an unclaimed star.\n     * To claim a star, you need to put up a deposit of MRV. You need to call\n     * approve() on the MRV token contract to allow this contract to debit the\n     * requested deposit from your account. The deposit must be more than the\n     * current minimum deposit.\n     *\n     * YOU and ONLY YOU are responsible for remembering the seeds of stars you\n     * own, so you can get your deposits back when you are done with them. You\n     * can't easily get a listing from this contract.\n     */\n    function claimOwnership(bytes32 starSeed, uint depositInAtomicUnits) external {\n        // You can't claim things that are already owned.\n        if (ownerOf[starSeed] != address(0)) revert();\n        \n        // You can claim things that don't exist, if you really want to.\n        \n        // You have to put up at least the minimum deposit\n        if (depositInAtomicUnits < minDepositInAtomicUnits) revert();\n        \n        // Go ahead and do the state changes\n        ownerOf[starSeed] = msg.sender;\n        depositFor[starSeed] = depositInAtomicUnits;\n        expectedMrvBalance = expectedMrvBalance.add(depositInAtomicUnits);\n        \n        // Announce it\n        emit StarOwnershipChange(starSeed, msg.sender);\n        \n        // After state changes, try to take the money\n        tokenAddress.transferFrom(msg.sender, address(this), depositInAtomicUnits);\n        // The MRV token will throw if transferFrom fails.\n    }\n    \n    /**\n     * Transfer ownership of a star from the sender to the given address.\n     * You don't need to meet the access control requirements to get rid of\n     * your owned stars, or to own stars. But you might not be able to\n     * query anything about them.\n     */\n    function transferOwnership(bytes32 starSeed, address newOwner) external {\n        // You can't send things you don't own.\n        if (ownerOf[starSeed] != msg.sender) revert();\n        \n        // Don't try to burn star ownership; use abdicateOwnership instead.\n        if (newOwner == address(0)) revert();\n        // Don't send stars to the contract either\n        if (newOwner == address(this)) revert();\n        // Or to the token\n        if (newOwner == address(tokenAddress)) revert();\n        \n        // Transfer owenership\n        ownerOf[starSeed] = newOwner;\n        \n        // Announce it\n        emit StarOwnershipChange(starSeed, newOwner);\n    }\n    \n    // In a future version, we might want an ERC20-style authorization system, to let a contract move your things for you.\n    \n    /**\n     * Give up ownership of an owned star.\n     * The MRV deposit originally paid to acquire ownership of the star will\n     * be paid out to the sender of the message.\n     */\n    function abdicateOwnership(bytes32 starSeed) external {\n        // You can't give up things you don't own.\n        if (ownerOf[starSeed] != msg.sender) revert();\n        \n        // How much should we return?\n        uint depositSize = depositFor[starSeed];\n        // And to whom?\n        address oldOwner = ownerOf[starSeed];\n        \n        // Clear ownership\n        ownerOf[starSeed] = address(0);\n        // Clear the deposit value\n        depositFor[starSeed] = 0;\n        \n        // Update expected balance\n        expectedMrvBalance = expectedMrvBalance.sub(depositSize);\n\n        // Announce lack of ownership of the thing\n        emit StarOwnershipChange(starSeed, address(0));\n        \n        // Pay back deposit\n        tokenAddress.transfer(oldOwner, depositSize);\n        // We know MRVToken throws on a failed transfer\n    }\n    \n    /**\n     * Allow the owner to collect any non-MRV tokens, or any excess MRV, that ends up in this contract.\n     */\n    function reclaimToken(address otherToken) external onlyOwner {\n        IERC20 other = IERC20(otherToken);\n        \n        // We will send our whole balance\n        uint excessBalance = other.balanceOf(address(this));\n        \n        // Unless we're talking about the MRV token\n        if (address(other) == address(tokenAddress)) {\n            // In which case we send only any balance that we shouldn't have\n            excessBalance = excessBalance.sub(expectedMrvBalance);\n        }\n        \n        // Make the transfer. If it doesn't work, we can try again later.\n        other.transfer(owner(), excessBalance);\n    }\n}\n",
  "sourcePath": "/Users/anovak/Documents/Workspace/macroverse/contracts/MacroverseStarRegistry.sol",
  "ast": {
    "absolutePath": "/Users/anovak/Documents/Workspace/macroverse/contracts/MacroverseStarRegistry.sol",
    "exportedSymbols": {
      "MacroverseStarRegistry": [
        4723
      ]
    },
    "id": 4724,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4429,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:13"
      },
      {
        "absolutePath": "/Users/anovak/Documents/Workspace/macroverse/contracts/MRVToken.sol",
        "file": "./MRVToken.sol",
        "id": 4430,
        "nodeType": "ImportDirective",
        "scope": 4724,
        "sourceUnit": 690,
        "src": "25:24:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 4431,
        "nodeType": "ImportDirective",
        "scope": 4724,
        "sourceUnit": 10581,
        "src": "50:63:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/anovak/Documents/Workspace/macroverse/contracts/HasNoEther.sol",
        "file": "./HasNoEther.sol",
        "id": 4432,
        "nodeType": "ImportDirective",
        "scope": 4724,
        "sourceUnit": 130,
        "src": "114:26:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/anovak/Documents/Workspace/macroverse/contracts/HasNoContracts.sol",
        "file": "./HasNoContracts.sol",
        "id": 4433,
        "nodeType": "ImportDirective",
        "scope": 4724,
        "sourceUnit": 90,
        "src": "141:30:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 4434,
        "nodeType": "ImportDirective",
        "scope": 4724,
        "sourceUnit": 11055,
        "src": "172:64:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 4435,
        "nodeType": "ImportDirective",
        "scope": 4724,
        "sourceUnit": 10467,
        "src": "237:59:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4436,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10580,
              "src": "2758:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$10580",
                "typeString": "contract Ownable"
              }
            },
            "id": 4437,
            "nodeType": "InheritanceSpecifier",
            "src": "2758:7:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4438,
              "name": "HasNoEther",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 129,
              "src": "2767:10:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HasNoEther_$129",
                "typeString": "contract HasNoEther"
              }
            },
            "id": 4439,
            "nodeType": "InheritanceSpecifier",
            "src": "2767:10:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4440,
              "name": "HasNoContracts",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 89,
              "src": "2779:14:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HasNoContracts_$89",
                "typeString": "contract HasNoContracts"
              }
            },
            "id": 4441,
            "nodeType": "InheritanceSpecifier",
            "src": "2779:14:13"
          }
        ],
        "contractDependencies": [
          89,
          129,
          10168,
          10580
        ],
        "contractKind": "contract",
        "documentation": "The Macroverse Star Registry keeps track of who currently owns virtual real estate in the\nMacroverse world, at the scale of star systems and other star-like objects.\n * Ownership is handled by having the first person who wants to own an object claim it, by\nputting up a deposit in MRV tokens of a certain minimum size. Note that the owner of the\ncontract reserves the right to adjust this minimum size at any time, for any reason, and\nwithout notice. Since the size of the deposit to be made is specified by the claimant,\ntrying to claim something when the minimum deposit size has been increased without your\nknowledge should at worst result in wasted gas.\n * Owners of objects can send them to other addresses, and an owner can abdicate ownership of\nan object and collect the original MRV deposit used to claim it.\n * Note that the claiming system used here is not protected against front-running. Anyone can\nsee your claim transaction before it is mined, and claim the object you were going for first.\nHowever, they would then need to find it among the many billions of objects in the Macroverse\nuniverse, because this contract only records ownership by seed.\n * Note that ownership of a star system does not necessarily imply ownership of everything in it.\nJust as one person can own a condo in another person's building, one person can own a planet in\nanother person's star system.\n * All ownership is recorded using star seeds; no attempt is made to enforce that a given\nseed actually exists in the Macroverse world. It is possible to purchase (and sell!)\nnonexistent star systems, or star systems that you don't know where they are. Caveat emptor.\n * The deployer of this contract reserves the right to supersede it with a new version at any time,\nfor any reason, and without notice. The deployer of this contract reserves the right to leave it\nin place as is indefinitely.\n * The deployer of this contract reserves the right to claim and keep any tokens or ETH or contracts\nsent to this contract, in excess of the MRV balance that this contract thinks it is supposed to\nhave.\n * TODO: Note that the deployed version of this contract on the mainnet is slightly different!\nIn particular, this version reverts where the deployed version throws, to make newer compilers\nstop warning whenever you build the Macroverse project.",
        "fullyImplemented": true,
        "id": 4723,
        "linearizedBaseContracts": [
          4723,
          89,
          129,
          10580,
          10168
        ],
        "name": "MacroverseStarRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4443,
            "libraryName": {
              "contractScope": null,
              "id": 4442,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10466,
              "src": "2806:8:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$10466",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "2800:21:13",
            "typeName": null
          },
          {
            "constant": false,
            "id": 4445,
            "name": "tokenAddress",
            "nodeType": "VariableDeclaration",
            "scope": 4723,
            "src": "2906:28:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MRVToken_$689",
              "typeString": "contract MRVToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 4444,
              "name": "MRVToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 689,
              "src": "2906:8:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MRVToken_$689",
                "typeString": "contract MRVToken"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4447,
            "name": "minDepositInAtomicUnits",
            "nodeType": "VariableDeclaration",
            "scope": 4723,
            "src": "3008:35:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4446,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "3008:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4451,
            "name": "ownerOf",
            "nodeType": "VariableDeclaration",
            "scope": 4723,
            "src": "3205:42:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
              "typeString": "mapping(bytes32 => address)"
            },
            "typeName": {
              "id": 4450,
              "keyType": {
                "id": 4448,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "3213:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "3205:27:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                "typeString": "mapping(bytes32 => address)"
              },
              "valueType": {
                "id": 4449,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3224:7:13",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4455,
            "name": "depositFor",
            "nodeType": "VariableDeclaration",
            "scope": 4723,
            "src": "3319:42:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 4454,
              "keyType": {
                "id": 4452,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "3327:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "3319:24:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 4453,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3338:4:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4457,
            "name": "expectedMrvBalance",
            "nodeType": "VariableDeclaration",
            "scope": 4723,
            "src": "3563:30:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4456,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "3563:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 4463,
            "name": "StarOwnershipChange",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4459,
                  "indexed": true,
                  "name": "starSeed",
                  "nodeType": "VariableDeclaration",
                  "scope": 4463,
                  "src": "3738:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4458,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3738:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4461,
                  "indexed": true,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 4463,
                  "src": "3764:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3764:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3737:52:13"
            },
            "src": "3712:78:13"
          },
          {
            "body": {
              "id": 4480,
              "nodeType": "Block",
              "src": "4080:259:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4470,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4445,
                      "src": "4161:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MRVToken_$689",
                        "typeString": "contract MRVToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4472,
                          "name": "depositTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4465,
                          "src": "4185:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 4471,
                        "name": "MRVToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 689,
                        "src": "4176:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MRVToken_$689_$",
                          "typeString": "type(contract MRVToken)"
                        }
                      },
                      "id": 4473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4176:29:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MRVToken_$689",
                        "typeString": "contract MRVToken"
                      }
                    },
                    "src": "4161:44:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MRVToken_$689",
                      "typeString": "contract MRVToken"
                    }
                  },
                  "id": 4475,
                  "nodeType": "ExpressionStatement",
                  "src": "4161:44:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4476,
                      "name": "minDepositInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4447,
                      "src": "4276:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4477,
                      "name": "initialMinDepositInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4467,
                      "src": "4302:30:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4276:56:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4479,
                  "nodeType": "ExpressionStatement",
                  "src": "4276:56:13"
                }
              ]
            },
            "documentation": "Deploy a new copy of the Macroverse Star Registry.\nThe given token will be used to pay deposits, and the given minimum\ndeposit size will be required.",
            "id": 4481,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4465,
                  "name": "depositTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4481,
                  "src": "3999:35:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 4464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3999:15:13",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4467,
                  "name": "initialMinDepositInAtomicUnits",
                  "nodeType": "VariableDeclaration",
                  "scope": 4481,
                  "src": "4036:35:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4466,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4036:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3998:74:13"
            },
            "returnParameters": {
              "id": 4469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4080:0:13"
            },
            "scope": 4723,
            "src": "3987:352:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4492,
              "nodeType": "Block",
              "src": "4547:73:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4488,
                      "name": "minDepositInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4447,
                      "src": "4557:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4489,
                      "name": "newMinimumDepositInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4483,
                      "src": "4583:30:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4557:56:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4491,
                  "nodeType": "ExpressionStatement",
                  "src": "4557:56:13"
                }
              ]
            },
            "documentation": "Allow the owner to set the minimum deposit amount for granting new\nownership claims.",
            "id": 4493,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4486,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4485,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10513,
                  "src": "4537:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4537:9:13"
              }
            ],
            "name": "setMinimumDeposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4483,
                  "name": "newMinimumDepositInAtomicUnits",
                  "nodeType": "VariableDeclaration",
                  "scope": 4493,
                  "src": "4491:35:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4482,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4491:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4490:37:13"
            },
            "returnParameters": {
              "id": 4487,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4547:0:13"
            },
            "scope": 4723,
            "src": "4464:156:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4555,
              "nodeType": "Block",
              "src": "5257:856:13",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4500,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4451,
                        "src": "5329:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 4502,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4501,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4495,
                        "src": "5337:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5329:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 4504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5358:1:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5350:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 4505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5350:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5329:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4510,
                  "nodeType": "IfStatement",
                  "src": "5325:45:13",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4507,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          12451,
                          12452
                        ],
                        "referencedDeclaration": 12451,
                        "src": "5362:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5362:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4509,
                    "nodeType": "ExpressionStatement",
                    "src": "5362:8:13"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4511,
                      "name": "depositInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4497,
                      "src": "5534:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 4512,
                      "name": "minDepositInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4447,
                      "src": "5557:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5534:46:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4517,
                  "nodeType": "IfStatement",
                  "src": "5530:60:13",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4514,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          12451,
                          12452
                        ],
                        "referencedDeclaration": 12451,
                        "src": "5582:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5582:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4516,
                    "nodeType": "ExpressionStatement",
                    "src": "5582:8:13"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4518,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4451,
                        "src": "5654:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 4520,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4519,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4495,
                        "src": "5662:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5654:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4521,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12446,
                        "src": "5674:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5674:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5654:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4524,
                  "nodeType": "ExpressionStatement",
                  "src": "5654:30:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4525,
                        "name": "depositFor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4455,
                        "src": "5694:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 4527,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4526,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4495,
                        "src": "5705:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5694:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4528,
                      "name": "depositInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4497,
                      "src": "5717:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5694:43:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4530,
                  "nodeType": "ExpressionStatement",
                  "src": "5694:43:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4531,
                      "name": "expectedMrvBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4457,
                      "src": "5747:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4534,
                          "name": "depositInAtomicUnits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4497,
                          "src": "5791:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4532,
                          "name": "expectedMrvBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4457,
                          "src": "5768:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10306,
                        "src": "5768:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5768:44:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5747:65:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4537,
                  "nodeType": "ExpressionStatement",
                  "src": "5747:65:13"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4539,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4495,
                        "src": "5879:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4540,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12446,
                          "src": "5889:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5889:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 4538,
                      "name": "StarOwnershipChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4463,
                      "src": "5859:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5859:41:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4543,
                  "nodeType": "EmitStatement",
                  "src": "5854:46:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4547,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12446,
                          "src": "5999:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5999:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4550,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12530,
                            "src": "6019:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MacroverseStarRegistry_$4723",
                              "typeString": "contract MacroverseStarRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MacroverseStarRegistry_$4723",
                              "typeString": "contract MacroverseStarRegistry"
                            }
                          ],
                          "id": 4549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6011:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 4551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6011:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4552,
                        "name": "depositInAtomicUnits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4497,
                        "src": "6026:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4544,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4445,
                        "src": "5973:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MRVToken_$689",
                          "typeString": "contract MRVToken"
                        }
                      },
                      "id": 4546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10714,
                      "src": "5973:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5973:74:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4554,
                  "nodeType": "ExpressionStatement",
                  "src": "5973:74:13"
                }
              ]
            },
            "documentation": "Acquire ownership of an unclaimed star.\nTo claim a star, you need to put up a deposit of MRV. You need to call\napprove() on the MRV token contract to allow this contract to debit the\nrequested deposit from your account. The deposit must be more than the\ncurrent minimum deposit.\n     * YOU and ONLY YOU are responsible for remembering the seeds of stars you\nown, so you can get your deposits back when you are done with them. You\ncan't easily get a listing from this contract.",
            "id": 4556,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4495,
                  "name": "starSeed",
                  "nodeType": "VariableDeclaration",
                  "scope": 4556,
                  "src": "5203:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4494,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5203:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4497,
                  "name": "depositInAtomicUnits",
                  "nodeType": "VariableDeclaration",
                  "scope": 4556,
                  "src": "5221:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4496,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5221:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5202:45:13"
            },
            "returnParameters": {
              "id": 4499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5257:0:13"
            },
            "scope": 4723,
            "src": "5179:934:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4611,
              "nodeType": "Block",
              "src": "6466:589:13",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4563,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4451,
                        "src": "6528:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 4565,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4564,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4558,
                        "src": "6536:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6528:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4566,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12446,
                        "src": "6549:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6549:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6528:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4572,
                  "nodeType": "IfStatement",
                  "src": "6524:45:13",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4569,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          12451,
                          12452
                        ],
                        "referencedDeclaration": 12451,
                        "src": "6561:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6561:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4571,
                    "nodeType": "ExpressionStatement",
                    "src": "6561:8:13"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4573,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4560,
                      "src": "6668:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 4575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6688:1:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6680:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 4576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6680:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6668:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4581,
                  "nodeType": "IfStatement",
                  "src": "6664:36:13",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4578,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          12451,
                          12452
                        ],
                        "referencedDeclaration": 12451,
                        "src": "6692:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6692:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4580,
                    "nodeType": "ExpressionStatement",
                    "src": "6692:8:13"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4582,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4560,
                      "src": "6765:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4584,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12530,
                          "src": "6785:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MacroverseStarRegistry_$4723",
                            "typeString": "contract MacroverseStarRegistry"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MacroverseStarRegistry_$4723",
                            "typeString": "contract MacroverseStarRegistry"
                          }
                        ],
                        "id": 4583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6777:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 4585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6777:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6765:25:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4590,
                  "nodeType": "IfStatement",
                  "src": "6761:39:13",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4587,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          12451,
                          12452
                        ],
                        "referencedDeclaration": 12451,
                        "src": "6792:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6792:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4589,
                    "nodeType": "ExpressionStatement",
                    "src": "6792:8:13"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4591,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4560,
                      "src": "6841:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4593,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4445,
                          "src": "6861:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MRVToken_$689",
                            "typeString": "contract MRVToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MRVToken_$689",
                            "typeString": "contract MRVToken"
                          }
                        ],
                        "id": 4592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6853:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 4594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6853:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6841:33:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4599,
                  "nodeType": "IfStatement",
                  "src": "6837:47:13",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4596,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          12451,
                          12452
                        ],
                        "referencedDeclaration": 12451,
                        "src": "6876:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6876:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4598,
                    "nodeType": "ExpressionStatement",
                    "src": "6876:8:13"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4600,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4451,
                        "src": "6934:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 4602,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4601,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4558,
                        "src": "6942:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6934:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4603,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4560,
                      "src": "6954:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6934:28:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4605,
                  "nodeType": "ExpressionStatement",
                  "src": "6934:28:13"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4607,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4558,
                        "src": "7029:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4608,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4560,
                        "src": "7039:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4606,
                      "name": "StarOwnershipChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4463,
                      "src": "7009:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7009:39:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4610,
                  "nodeType": "EmitStatement",
                  "src": "7004:44:13"
                }
              ]
            },
            "documentation": "Transfer ownership of a star from the sender to the given address.\nYou don't need to meet the access control requirements to get rid of\nyour owned stars, or to own stars. But you might not be able to\nquery anything about them.",
            "id": 4612,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4558,
                  "name": "starSeed",
                  "nodeType": "VariableDeclaration",
                  "scope": 4612,
                  "src": "6421:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4557,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6421:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4560,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 4612,
                  "src": "6439:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6439:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6420:36:13"
            },
            "returnParameters": {
              "id": 4562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6466:0:13"
            },
            "scope": 4723,
            "src": "6394:661:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4674,
              "nodeType": "Block",
              "src": "7432:789:13",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4617,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4451,
                        "src": "7497:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 4619,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4618,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4614,
                        "src": "7505:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7497:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4620,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12446,
                        "src": "7518:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7518:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "7497:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4626,
                  "nodeType": "IfStatement",
                  "src": "7493:45:13",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4623,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          12451,
                          12452
                        ],
                        "referencedDeclaration": 12451,
                        "src": "7530:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7530:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4625,
                    "nodeType": "ExpressionStatement",
                    "src": "7530:8:13"
                  }
                },
                {
                  "assignments": [
                    4628
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4628,
                      "name": "depositSize",
                      "nodeType": "VariableDeclaration",
                      "scope": 4674,
                      "src": "7595:16:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4627,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7595:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4632,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4629,
                      "name": "depositFor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4455,
                      "src": "7614:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 4631,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4630,
                      "name": "starSeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4614,
                      "src": "7625:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7614:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7595:39:13"
                },
                {
                  "assignments": [
                    4634
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4634,
                      "name": "oldOwner",
                      "nodeType": "VariableDeclaration",
                      "scope": 4674,
                      "src": "7668:16:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4633,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7668:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4638,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4635,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4451,
                      "src": "7687:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                        "typeString": "mapping(bytes32 => address)"
                      }
                    },
                    "id": 4637,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4636,
                      "name": "starSeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4614,
                      "src": "7695:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7687:17:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7668:36:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4639,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4451,
                        "src": "7750:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 4641,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4640,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4614,
                        "src": "7758:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7750:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 4643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7778:1:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7770:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 4644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7770:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "7750:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4646,
                  "nodeType": "ExpressionStatement",
                  "src": "7750:30:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4647,
                        "name": "depositFor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4455,
                        "src": "7825:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 4649,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4648,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4614,
                        "src": "7836:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7825:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7848:1:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7825:24:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4652,
                  "nodeType": "ExpressionStatement",
                  "src": "7825:24:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4653,
                      "name": "expectedMrvBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4457,
                      "src": "7903:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4656,
                          "name": "depositSize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4628,
                          "src": "7947:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4654,
                          "name": "expectedMrvBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4457,
                          "src": "7924:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10322,
                        "src": "7924:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7924:35:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7903:56:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4659,
                  "nodeType": "ExpressionStatement",
                  "src": "7903:56:13"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4661,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4614,
                        "src": "8046:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 4663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8064:1:13",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8056:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 4664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8056:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 4660,
                      "name": "StarOwnershipChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4463,
                      "src": "8026:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8026:41:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4666,
                  "nodeType": "EmitStatement",
                  "src": "8021:46:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4670,
                        "name": "oldOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4634,
                        "src": "8136:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4671,
                        "name": "depositSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4628,
                        "src": "8146:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4667,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4445,
                        "src": "8114:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MRVToken_$689",
                          "typeString": "contract MRVToken"
                        }
                      },
                      "id": 4669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10643,
                      "src": "8114:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8114:44:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4673,
                  "nodeType": "ExpressionStatement",
                  "src": "8114:44:13"
                }
              ]
            },
            "documentation": "Give up ownership of an owned star.\nThe MRV deposit originally paid to acquire ownership of the star will\nbe paid out to the sender of the message.",
            "id": 4675,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "abdicateOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4614,
                  "name": "starSeed",
                  "nodeType": "VariableDeclaration",
                  "scope": 4675,
                  "src": "7405:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4613,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7405:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7404:18:13"
            },
            "returnParameters": {
              "id": 4616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7432:0:13"
            },
            "scope": 4723,
            "src": "7378:843:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4721,
              "nodeType": "Block",
              "src": "8412:563:13",
              "statements": [
                {
                  "assignments": [
                    4683
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4683,
                      "name": "other",
                      "nodeType": "VariableDeclaration",
                      "scope": 4721,
                      "src": "8422:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$11054",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4682,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 11054,
                        "src": "8422:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11054",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4687,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4685,
                        "name": "otherToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4677,
                        "src": "8444:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4684,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11054,
                      "src": "8437:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$11054_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 4686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8437:18:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$11054",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8422:33:13"
                },
                {
                  "assignments": [
                    4689
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4689,
                      "name": "excessBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 4721,
                      "src": "8516:18:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4688,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8516:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4696,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4693,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12530,
                            "src": "8561:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MacroverseStarRegistry_$4723",
                              "typeString": "contract MacroverseStarRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MacroverseStarRegistry_$4723",
                              "typeString": "contract MacroverseStarRegistry"
                            }
                          ],
                          "id": 4692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8553:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 4694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8553:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4690,
                        "name": "other",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4683,
                        "src": "8537:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11054",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10999,
                      "src": "8537:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8537:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8516:51:13"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4698,
                          "name": "other",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4683,
                          "src": "8650:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$11054",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$11054",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 4697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8642:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 4699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8642:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4701,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4445,
                          "src": "8668:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MRVToken_$689",
                            "typeString": "contract MRVToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MRVToken_$689",
                            "typeString": "contract MRVToken"
                          }
                        ],
                        "id": 4700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8660:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 4702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8660:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "8642:39:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4712,
                  "nodeType": "IfStatement",
                  "src": "8638:200:13",
                  "trueBody": {
                    "id": 4711,
                    "nodeType": "Block",
                    "src": "8683:155:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 4704,
                            "name": "excessBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4689,
                            "src": "8774:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4707,
                                "name": "expectedMrvBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4457,
                                "src": "8808:18:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 4705,
                                "name": "excessBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4689,
                                "src": "8790:13:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10322,
                              "src": "8790:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8790:37:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8774:53:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4710,
                        "nodeType": "ExpressionStatement",
                        "src": "8774:53:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4716,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10503,
                          "src": "8945:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8945:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4718,
                        "name": "excessBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4689,
                        "src": "8954:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4713,
                        "name": "other",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4683,
                        "src": "8930:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11054",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11008,
                      "src": "8930:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8930:38:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4720,
                  "nodeType": "ExpressionStatement",
                  "src": "8930:38:13"
                }
              ]
            },
            "documentation": "Allow the owner to collect any non-MRV tokens, or any excess MRV, that ends up in this contract.",
            "id": 4722,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4680,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4679,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10513,
                  "src": "8402:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8402:9:13"
              }
            ],
            "name": "reclaimToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4677,
                  "name": "otherToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 4722,
                  "src": "8373:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8373:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8372:20:13"
            },
            "returnParameters": {
              "id": 4681,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8412:0:13"
            },
            "scope": 4723,
            "src": "8351:624:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 4724,
        "src": "2723:6254:13"
      }
    ],
    "src": "0:8978:13"
  },
  "legacyAST": {
    "absolutePath": "/Users/anovak/Documents/Workspace/macroverse/contracts/MacroverseStarRegistry.sol",
    "exportedSymbols": {
      "MacroverseStarRegistry": [
        4723
      ]
    },
    "id": 4724,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4429,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:13"
      },
      {
        "absolutePath": "/Users/anovak/Documents/Workspace/macroverse/contracts/MRVToken.sol",
        "file": "./MRVToken.sol",
        "id": 4430,
        "nodeType": "ImportDirective",
        "scope": 4724,
        "sourceUnit": 690,
        "src": "25:24:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 4431,
        "nodeType": "ImportDirective",
        "scope": 4724,
        "sourceUnit": 10581,
        "src": "50:63:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/anovak/Documents/Workspace/macroverse/contracts/HasNoEther.sol",
        "file": "./HasNoEther.sol",
        "id": 4432,
        "nodeType": "ImportDirective",
        "scope": 4724,
        "sourceUnit": 130,
        "src": "114:26:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/anovak/Documents/Workspace/macroverse/contracts/HasNoContracts.sol",
        "file": "./HasNoContracts.sol",
        "id": 4433,
        "nodeType": "ImportDirective",
        "scope": 4724,
        "sourceUnit": 90,
        "src": "141:30:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 4434,
        "nodeType": "ImportDirective",
        "scope": 4724,
        "sourceUnit": 11055,
        "src": "172:64:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 4435,
        "nodeType": "ImportDirective",
        "scope": 4724,
        "sourceUnit": 10467,
        "src": "237:59:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4436,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10580,
              "src": "2758:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$10580",
                "typeString": "contract Ownable"
              }
            },
            "id": 4437,
            "nodeType": "InheritanceSpecifier",
            "src": "2758:7:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4438,
              "name": "HasNoEther",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 129,
              "src": "2767:10:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HasNoEther_$129",
                "typeString": "contract HasNoEther"
              }
            },
            "id": 4439,
            "nodeType": "InheritanceSpecifier",
            "src": "2767:10:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4440,
              "name": "HasNoContracts",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 89,
              "src": "2779:14:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HasNoContracts_$89",
                "typeString": "contract HasNoContracts"
              }
            },
            "id": 4441,
            "nodeType": "InheritanceSpecifier",
            "src": "2779:14:13"
          }
        ],
        "contractDependencies": [
          89,
          129,
          10168,
          10580
        ],
        "contractKind": "contract",
        "documentation": "The Macroverse Star Registry keeps track of who currently owns virtual real estate in the\nMacroverse world, at the scale of star systems and other star-like objects.\n * Ownership is handled by having the first person who wants to own an object claim it, by\nputting up a deposit in MRV tokens of a certain minimum size. Note that the owner of the\ncontract reserves the right to adjust this minimum size at any time, for any reason, and\nwithout notice. Since the size of the deposit to be made is specified by the claimant,\ntrying to claim something when the minimum deposit size has been increased without your\nknowledge should at worst result in wasted gas.\n * Owners of objects can send them to other addresses, and an owner can abdicate ownership of\nan object and collect the original MRV deposit used to claim it.\n * Note that the claiming system used here is not protected against front-running. Anyone can\nsee your claim transaction before it is mined, and claim the object you were going for first.\nHowever, they would then need to find it among the many billions of objects in the Macroverse\nuniverse, because this contract only records ownership by seed.\n * Note that ownership of a star system does not necessarily imply ownership of everything in it.\nJust as one person can own a condo in another person's building, one person can own a planet in\nanother person's star system.\n * All ownership is recorded using star seeds; no attempt is made to enforce that a given\nseed actually exists in the Macroverse world. It is possible to purchase (and sell!)\nnonexistent star systems, or star systems that you don't know where they are. Caveat emptor.\n * The deployer of this contract reserves the right to supersede it with a new version at any time,\nfor any reason, and without notice. The deployer of this contract reserves the right to leave it\nin place as is indefinitely.\n * The deployer of this contract reserves the right to claim and keep any tokens or ETH or contracts\nsent to this contract, in excess of the MRV balance that this contract thinks it is supposed to\nhave.\n * TODO: Note that the deployed version of this contract on the mainnet is slightly different!\nIn particular, this version reverts where the deployed version throws, to make newer compilers\nstop warning whenever you build the Macroverse project.",
        "fullyImplemented": true,
        "id": 4723,
        "linearizedBaseContracts": [
          4723,
          89,
          129,
          10580,
          10168
        ],
        "name": "MacroverseStarRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4443,
            "libraryName": {
              "contractScope": null,
              "id": 4442,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10466,
              "src": "2806:8:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$10466",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "2800:21:13",
            "typeName": null
          },
          {
            "constant": false,
            "id": 4445,
            "name": "tokenAddress",
            "nodeType": "VariableDeclaration",
            "scope": 4723,
            "src": "2906:28:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MRVToken_$689",
              "typeString": "contract MRVToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 4444,
              "name": "MRVToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 689,
              "src": "2906:8:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MRVToken_$689",
                "typeString": "contract MRVToken"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4447,
            "name": "minDepositInAtomicUnits",
            "nodeType": "VariableDeclaration",
            "scope": 4723,
            "src": "3008:35:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4446,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "3008:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4451,
            "name": "ownerOf",
            "nodeType": "VariableDeclaration",
            "scope": 4723,
            "src": "3205:42:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
              "typeString": "mapping(bytes32 => address)"
            },
            "typeName": {
              "id": 4450,
              "keyType": {
                "id": 4448,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "3213:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "3205:27:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                "typeString": "mapping(bytes32 => address)"
              },
              "valueType": {
                "id": 4449,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3224:7:13",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4455,
            "name": "depositFor",
            "nodeType": "VariableDeclaration",
            "scope": 4723,
            "src": "3319:42:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 4454,
              "keyType": {
                "id": 4452,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "3327:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "3319:24:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 4453,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3338:4:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4457,
            "name": "expectedMrvBalance",
            "nodeType": "VariableDeclaration",
            "scope": 4723,
            "src": "3563:30:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4456,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "3563:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 4463,
            "name": "StarOwnershipChange",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4459,
                  "indexed": true,
                  "name": "starSeed",
                  "nodeType": "VariableDeclaration",
                  "scope": 4463,
                  "src": "3738:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4458,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3738:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4461,
                  "indexed": true,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 4463,
                  "src": "3764:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3764:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3737:52:13"
            },
            "src": "3712:78:13"
          },
          {
            "body": {
              "id": 4480,
              "nodeType": "Block",
              "src": "4080:259:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4470,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4445,
                      "src": "4161:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MRVToken_$689",
                        "typeString": "contract MRVToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4472,
                          "name": "depositTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4465,
                          "src": "4185:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 4471,
                        "name": "MRVToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 689,
                        "src": "4176:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MRVToken_$689_$",
                          "typeString": "type(contract MRVToken)"
                        }
                      },
                      "id": 4473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4176:29:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MRVToken_$689",
                        "typeString": "contract MRVToken"
                      }
                    },
                    "src": "4161:44:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MRVToken_$689",
                      "typeString": "contract MRVToken"
                    }
                  },
                  "id": 4475,
                  "nodeType": "ExpressionStatement",
                  "src": "4161:44:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4476,
                      "name": "minDepositInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4447,
                      "src": "4276:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4477,
                      "name": "initialMinDepositInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4467,
                      "src": "4302:30:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4276:56:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4479,
                  "nodeType": "ExpressionStatement",
                  "src": "4276:56:13"
                }
              ]
            },
            "documentation": "Deploy a new copy of the Macroverse Star Registry.\nThe given token will be used to pay deposits, and the given minimum\ndeposit size will be required.",
            "id": 4481,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4465,
                  "name": "depositTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4481,
                  "src": "3999:35:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 4464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3999:15:13",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4467,
                  "name": "initialMinDepositInAtomicUnits",
                  "nodeType": "VariableDeclaration",
                  "scope": 4481,
                  "src": "4036:35:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4466,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4036:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3998:74:13"
            },
            "returnParameters": {
              "id": 4469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4080:0:13"
            },
            "scope": 4723,
            "src": "3987:352:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4492,
              "nodeType": "Block",
              "src": "4547:73:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4488,
                      "name": "minDepositInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4447,
                      "src": "4557:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4489,
                      "name": "newMinimumDepositInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4483,
                      "src": "4583:30:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4557:56:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4491,
                  "nodeType": "ExpressionStatement",
                  "src": "4557:56:13"
                }
              ]
            },
            "documentation": "Allow the owner to set the minimum deposit amount for granting new\nownership claims.",
            "id": 4493,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4486,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4485,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10513,
                  "src": "4537:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4537:9:13"
              }
            ],
            "name": "setMinimumDeposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4483,
                  "name": "newMinimumDepositInAtomicUnits",
                  "nodeType": "VariableDeclaration",
                  "scope": 4493,
                  "src": "4491:35:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4482,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4491:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4490:37:13"
            },
            "returnParameters": {
              "id": 4487,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4547:0:13"
            },
            "scope": 4723,
            "src": "4464:156:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4555,
              "nodeType": "Block",
              "src": "5257:856:13",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4500,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4451,
                        "src": "5329:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 4502,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4501,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4495,
                        "src": "5337:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5329:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 4504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5358:1:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5350:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 4505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5350:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5329:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4510,
                  "nodeType": "IfStatement",
                  "src": "5325:45:13",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4507,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          12451,
                          12452
                        ],
                        "referencedDeclaration": 12451,
                        "src": "5362:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5362:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4509,
                    "nodeType": "ExpressionStatement",
                    "src": "5362:8:13"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4511,
                      "name": "depositInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4497,
                      "src": "5534:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 4512,
                      "name": "minDepositInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4447,
                      "src": "5557:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5534:46:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4517,
                  "nodeType": "IfStatement",
                  "src": "5530:60:13",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4514,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          12451,
                          12452
                        ],
                        "referencedDeclaration": 12451,
                        "src": "5582:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5582:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4516,
                    "nodeType": "ExpressionStatement",
                    "src": "5582:8:13"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4518,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4451,
                        "src": "5654:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 4520,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4519,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4495,
                        "src": "5662:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5654:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4521,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12446,
                        "src": "5674:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5674:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5654:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4524,
                  "nodeType": "ExpressionStatement",
                  "src": "5654:30:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4525,
                        "name": "depositFor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4455,
                        "src": "5694:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 4527,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4526,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4495,
                        "src": "5705:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5694:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4528,
                      "name": "depositInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4497,
                      "src": "5717:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5694:43:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4530,
                  "nodeType": "ExpressionStatement",
                  "src": "5694:43:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4531,
                      "name": "expectedMrvBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4457,
                      "src": "5747:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4534,
                          "name": "depositInAtomicUnits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4497,
                          "src": "5791:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4532,
                          "name": "expectedMrvBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4457,
                          "src": "5768:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10306,
                        "src": "5768:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5768:44:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5747:65:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4537,
                  "nodeType": "ExpressionStatement",
                  "src": "5747:65:13"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4539,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4495,
                        "src": "5879:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4540,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12446,
                          "src": "5889:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5889:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 4538,
                      "name": "StarOwnershipChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4463,
                      "src": "5859:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5859:41:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4543,
                  "nodeType": "EmitStatement",
                  "src": "5854:46:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4547,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12446,
                          "src": "5999:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5999:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4550,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12530,
                            "src": "6019:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MacroverseStarRegistry_$4723",
                              "typeString": "contract MacroverseStarRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MacroverseStarRegistry_$4723",
                              "typeString": "contract MacroverseStarRegistry"
                            }
                          ],
                          "id": 4549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6011:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 4551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6011:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4552,
                        "name": "depositInAtomicUnits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4497,
                        "src": "6026:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4544,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4445,
                        "src": "5973:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MRVToken_$689",
                          "typeString": "contract MRVToken"
                        }
                      },
                      "id": 4546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10714,
                      "src": "5973:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5973:74:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4554,
                  "nodeType": "ExpressionStatement",
                  "src": "5973:74:13"
                }
              ]
            },
            "documentation": "Acquire ownership of an unclaimed star.\nTo claim a star, you need to put up a deposit of MRV. You need to call\napprove() on the MRV token contract to allow this contract to debit the\nrequested deposit from your account. The deposit must be more than the\ncurrent minimum deposit.\n     * YOU and ONLY YOU are responsible for remembering the seeds of stars you\nown, so you can get your deposits back when you are done with them. You\ncan't easily get a listing from this contract.",
            "id": 4556,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4495,
                  "name": "starSeed",
                  "nodeType": "VariableDeclaration",
                  "scope": 4556,
                  "src": "5203:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4494,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5203:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4497,
                  "name": "depositInAtomicUnits",
                  "nodeType": "VariableDeclaration",
                  "scope": 4556,
                  "src": "5221:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4496,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5221:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5202:45:13"
            },
            "returnParameters": {
              "id": 4499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5257:0:13"
            },
            "scope": 4723,
            "src": "5179:934:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4611,
              "nodeType": "Block",
              "src": "6466:589:13",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4563,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4451,
                        "src": "6528:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 4565,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4564,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4558,
                        "src": "6536:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6528:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4566,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12446,
                        "src": "6549:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6549:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6528:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4572,
                  "nodeType": "IfStatement",
                  "src": "6524:45:13",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4569,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          12451,
                          12452
                        ],
                        "referencedDeclaration": 12451,
                        "src": "6561:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6561:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4571,
                    "nodeType": "ExpressionStatement",
                    "src": "6561:8:13"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4573,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4560,
                      "src": "6668:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 4575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6688:1:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6680:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 4576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6680:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6668:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4581,
                  "nodeType": "IfStatement",
                  "src": "6664:36:13",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4578,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          12451,
                          12452
                        ],
                        "referencedDeclaration": 12451,
                        "src": "6692:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6692:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4580,
                    "nodeType": "ExpressionStatement",
                    "src": "6692:8:13"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4582,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4560,
                      "src": "6765:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4584,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12530,
                          "src": "6785:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MacroverseStarRegistry_$4723",
                            "typeString": "contract MacroverseStarRegistry"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MacroverseStarRegistry_$4723",
                            "typeString": "contract MacroverseStarRegistry"
                          }
                        ],
                        "id": 4583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6777:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 4585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6777:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6765:25:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4590,
                  "nodeType": "IfStatement",
                  "src": "6761:39:13",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4587,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          12451,
                          12452
                        ],
                        "referencedDeclaration": 12451,
                        "src": "6792:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6792:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4589,
                    "nodeType": "ExpressionStatement",
                    "src": "6792:8:13"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4591,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4560,
                      "src": "6841:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4593,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4445,
                          "src": "6861:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MRVToken_$689",
                            "typeString": "contract MRVToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MRVToken_$689",
                            "typeString": "contract MRVToken"
                          }
                        ],
                        "id": 4592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6853:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 4594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6853:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6841:33:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4599,
                  "nodeType": "IfStatement",
                  "src": "6837:47:13",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4596,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          12451,
                          12452
                        ],
                        "referencedDeclaration": 12451,
                        "src": "6876:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6876:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4598,
                    "nodeType": "ExpressionStatement",
                    "src": "6876:8:13"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4600,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4451,
                        "src": "6934:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 4602,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4601,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4558,
                        "src": "6942:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6934:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4603,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4560,
                      "src": "6954:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6934:28:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4605,
                  "nodeType": "ExpressionStatement",
                  "src": "6934:28:13"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4607,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4558,
                        "src": "7029:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4608,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4560,
                        "src": "7039:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4606,
                      "name": "StarOwnershipChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4463,
                      "src": "7009:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7009:39:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4610,
                  "nodeType": "EmitStatement",
                  "src": "7004:44:13"
                }
              ]
            },
            "documentation": "Transfer ownership of a star from the sender to the given address.\nYou don't need to meet the access control requirements to get rid of\nyour owned stars, or to own stars. But you might not be able to\nquery anything about them.",
            "id": 4612,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4558,
                  "name": "starSeed",
                  "nodeType": "VariableDeclaration",
                  "scope": 4612,
                  "src": "6421:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4557,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6421:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4560,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 4612,
                  "src": "6439:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6439:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6420:36:13"
            },
            "returnParameters": {
              "id": 4562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6466:0:13"
            },
            "scope": 4723,
            "src": "6394:661:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4674,
              "nodeType": "Block",
              "src": "7432:789:13",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4617,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4451,
                        "src": "7497:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 4619,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4618,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4614,
                        "src": "7505:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7497:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4620,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12446,
                        "src": "7518:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7518:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "7497:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4626,
                  "nodeType": "IfStatement",
                  "src": "7493:45:13",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4623,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          12451,
                          12452
                        ],
                        "referencedDeclaration": 12451,
                        "src": "7530:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 4624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7530:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 4625,
                    "nodeType": "ExpressionStatement",
                    "src": "7530:8:13"
                  }
                },
                {
                  "assignments": [
                    4628
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4628,
                      "name": "depositSize",
                      "nodeType": "VariableDeclaration",
                      "scope": 4674,
                      "src": "7595:16:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4627,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7595:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4632,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4629,
                      "name": "depositFor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4455,
                      "src": "7614:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 4631,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4630,
                      "name": "starSeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4614,
                      "src": "7625:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7614:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7595:39:13"
                },
                {
                  "assignments": [
                    4634
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4634,
                      "name": "oldOwner",
                      "nodeType": "VariableDeclaration",
                      "scope": 4674,
                      "src": "7668:16:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4633,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7668:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4638,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4635,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4451,
                      "src": "7687:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                        "typeString": "mapping(bytes32 => address)"
                      }
                    },
                    "id": 4637,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4636,
                      "name": "starSeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4614,
                      "src": "7695:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7687:17:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7668:36:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4639,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4451,
                        "src": "7750:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 4641,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4640,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4614,
                        "src": "7758:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7750:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 4643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7778:1:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7770:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 4644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7770:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "7750:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4646,
                  "nodeType": "ExpressionStatement",
                  "src": "7750:30:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4647,
                        "name": "depositFor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4455,
                        "src": "7825:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 4649,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4648,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4614,
                        "src": "7836:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7825:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7848:1:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7825:24:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4652,
                  "nodeType": "ExpressionStatement",
                  "src": "7825:24:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4653,
                      "name": "expectedMrvBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4457,
                      "src": "7903:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4656,
                          "name": "depositSize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4628,
                          "src": "7947:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4654,
                          "name": "expectedMrvBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4457,
                          "src": "7924:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10322,
                        "src": "7924:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7924:35:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7903:56:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4659,
                  "nodeType": "ExpressionStatement",
                  "src": "7903:56:13"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4661,
                        "name": "starSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4614,
                        "src": "8046:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 4663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8064:1:13",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8056:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 4664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8056:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 4660,
                      "name": "StarOwnershipChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4463,
                      "src": "8026:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8026:41:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4666,
                  "nodeType": "EmitStatement",
                  "src": "8021:46:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4670,
                        "name": "oldOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4634,
                        "src": "8136:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4671,
                        "name": "depositSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4628,
                        "src": "8146:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4667,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4445,
                        "src": "8114:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MRVToken_$689",
                          "typeString": "contract MRVToken"
                        }
                      },
                      "id": 4669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10643,
                      "src": "8114:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8114:44:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4673,
                  "nodeType": "ExpressionStatement",
                  "src": "8114:44:13"
                }
              ]
            },
            "documentation": "Give up ownership of an owned star.\nThe MRV deposit originally paid to acquire ownership of the star will\nbe paid out to the sender of the message.",
            "id": 4675,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "abdicateOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4614,
                  "name": "starSeed",
                  "nodeType": "VariableDeclaration",
                  "scope": 4675,
                  "src": "7405:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4613,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7405:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7404:18:13"
            },
            "returnParameters": {
              "id": 4616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7432:0:13"
            },
            "scope": 4723,
            "src": "7378:843:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4721,
              "nodeType": "Block",
              "src": "8412:563:13",
              "statements": [
                {
                  "assignments": [
                    4683
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4683,
                      "name": "other",
                      "nodeType": "VariableDeclaration",
                      "scope": 4721,
                      "src": "8422:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$11054",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4682,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 11054,
                        "src": "8422:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11054",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4687,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4685,
                        "name": "otherToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4677,
                        "src": "8444:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4684,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11054,
                      "src": "8437:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$11054_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 4686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8437:18:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$11054",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8422:33:13"
                },
                {
                  "assignments": [
                    4689
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4689,
                      "name": "excessBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 4721,
                      "src": "8516:18:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4688,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8516:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4696,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4693,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12530,
                            "src": "8561:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MacroverseStarRegistry_$4723",
                              "typeString": "contract MacroverseStarRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MacroverseStarRegistry_$4723",
                              "typeString": "contract MacroverseStarRegistry"
                            }
                          ],
                          "id": 4692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8553:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 4694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8553:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4690,
                        "name": "other",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4683,
                        "src": "8537:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11054",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10999,
                      "src": "8537:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8537:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8516:51:13"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4698,
                          "name": "other",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4683,
                          "src": "8650:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$11054",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$11054",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 4697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8642:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 4699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8642:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4701,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4445,
                          "src": "8668:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MRVToken_$689",
                            "typeString": "contract MRVToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MRVToken_$689",
                            "typeString": "contract MRVToken"
                          }
                        ],
                        "id": 4700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8660:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 4702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8660:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "8642:39:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4712,
                  "nodeType": "IfStatement",
                  "src": "8638:200:13",
                  "trueBody": {
                    "id": 4711,
                    "nodeType": "Block",
                    "src": "8683:155:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 4704,
                            "name": "excessBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4689,
                            "src": "8774:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4707,
                                "name": "expectedMrvBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4457,
                                "src": "8808:18:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 4705,
                                "name": "excessBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4689,
                                "src": "8790:13:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10322,
                              "src": "8790:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8790:37:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8774:53:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4710,
                        "nodeType": "ExpressionStatement",
                        "src": "8774:53:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4716,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10503,
                          "src": "8945:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8945:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4718,
                        "name": "excessBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4689,
                        "src": "8954:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4713,
                        "name": "other",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4683,
                        "src": "8930:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11054",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11008,
                      "src": "8930:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8930:38:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4720,
                  "nodeType": "ExpressionStatement",
                  "src": "8930:38:13"
                }
              ]
            },
            "documentation": "Allow the owner to collect any non-MRV tokens, or any excess MRV, that ends up in this contract.",
            "id": 4722,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4680,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4679,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10513,
                  "src": "8402:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8402:9:13"
              }
            ],
            "name": "reclaimToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4677,
                  "name": "otherToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 4722,
                  "src": "8373:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8373:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8372:20:13"
            },
            "returnParameters": {
              "id": 4681,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8412:0:13"
            },
            "scope": 4723,
            "src": "8351:624:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 4724,
        "src": "2723:6254:13"
      }
    ],
    "src": "0:8978:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {
        "0x575875f7fca9a5932686f3a3f2153e91772df070936be6bba7edbc61d339e60f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "starSeed",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "StarOwnershipChange",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x6c00556f471cbe518007d62bc4aced6d8e537c9d",
      "updated_at": 1498363737179
    },
    "4": {
      "events": {
        "0x575875f7fca9a5932686f3a3f2153e91772df070936be6bba7edbc61d339e60f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "starSeed",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "StarOwnershipChange",
          "type": "event",
          "signature": "0x575875f7fca9a5932686f3a3f2153e91772df070936be6bba7edbc61d339e60f"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        }
      },
      "links": {},
      "address": "0xbD2cb42e3D44a503A55525B8e88D9844884A2a5b",
      "transactionHash": "0x4254f8b6e4ca273c44a8af8d2f41ec0ec54554c0ef0097cdc362d91727dd5b85"
    }
  },
  "schemaVersion": "3.0.16",
  "updatedAt": "2020-01-10T05:19:56.664Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "reclaimContract(address)": {
        "details": "Reclaim ownership of Ownable contracts",
        "params": {
          "contractAddr": "The address of the Ownable to be reclaimed."
        }
      },
      "reclaimEther()": {
        "details": "Transfer all Ether held by the contract to the owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "abdicateOwnership(bytes32)": {
        "notice": "Give up ownership of an owned star. The MRV deposit originally paid to acquire ownership of the star will be paid out to the sender of the message."
      },
      "claimOwnership(bytes32,uint256)": {
        "notice": "Acquire ownership of an unclaimed star. To claim a star, you need to put up a deposit of MRV. You need to call approve() on the MRV token contract to allow this contract to debit the requested deposit from your account. The deposit must be more than the current minimum deposit.     * YOU and ONLY YOU are responsible for remembering the seeds of stars you own, so you can get your deposits back when you are done with them. You can't easily get a listing from this contract."
      },
      "constructor": "Deploy a new copy of the Macroverse Star Registry. The given token will be used to pay deposits, and the given minimum deposit size will be required.",
      "reclaimToken(address)": {
        "notice": "Allow the owner to collect any non-MRV tokens, or any excess MRV, that ends up in this contract."
      },
      "setMinimumDeposit(uint256)": {
        "notice": "Allow the owner to set the minimum deposit amount for granting new ownership claims."
      },
      "transferOwnership(bytes32,address)": {
        "notice": "Transfer ownership of a star from the sender to the given address. You don't need to meet the access control requirements to get rid of your owned stars, or to own stars. But you might not be able to query anything about them."
      }
    },
    "notice": "The Macroverse Star Registry keeps track of who currently owns virtual real estate in the Macroverse world, at the scale of star systems and other star-like objects. * Ownership is handled by having the first person who wants to own an object claim it, by putting up a deposit in MRV tokens of a certain minimum size. Note that the owner of the contract reserves the right to adjust this minimum size at any time, for any reason, and without notice. Since the size of the deposit to be made is specified by the claimant, trying to claim something when the minimum deposit size has been increased without your knowledge should at worst result in wasted gas. * Owners of objects can send them to other addresses, and an owner can abdicate ownership of an object and collect the original MRV deposit used to claim it. * Note that the claiming system used here is not protected against front-running. Anyone can see your claim transaction before it is mined, and claim the object you were going for first. However, they would then need to find it among the many billions of objects in the Macroverse universe, because this contract only records ownership by seed. * Note that ownership of a star system does not necessarily imply ownership of everything in it. Just as one person can own a condo in another person's building, one person can own a planet in another person's star system. * All ownership is recorded using star seeds; no attempt is made to enforce that a given seed actually exists in the Macroverse world. It is possible to purchase (and sell!) nonexistent star systems, or star systems that you don't know where they are. Caveat emptor. * The deployer of this contract reserves the right to supersede it with a new version at any time, for any reason, and without notice. The deployer of this contract reserves the right to leave it in place as is indefinitely. * The deployer of this contract reserves the right to claim and keep any tokens or ETH or contracts sent to this contract, in excess of the MRV balance that this contract thinks it is supposed to have. * TODO: Note that the deployed version of this contract on the mainnet is slightly different! In particular, this version reverts where the deployed version throws, to make newer compilers stop warning whenever you build the Macroverse project."
  }
}