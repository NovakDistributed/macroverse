{
  "contractName": "MinimumBalanceAccessControl",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minBalanceInAtomicUnits_",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "allowQuery",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.14+commit.01f1aaa4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minBalanceInAtomicUnits_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"}],\"name\":\"allowQuery\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"allowQuery(address,address)\":{\"notice\":\"Allow all queries resulting from a transaction initiated from an origin address with at least the required minimum balance. This means that any contract you use can make queries on your behalf, but that no contract with the minimum balance can proxy queries for others.\"},\"constructor\":\"Make a new MinimumBalanceAccessControl that requires the specified minimum balance of the specified token.\"},\"notice\":\"Represents an access control strategy where any end user (origin) with a minimum balance in an ERC20 token is allowed.\"}},\"settings\":{\"compilationTarget\":{\"/z/home/anovak/workspace/macroverse/contracts/MinimumBalanceAccessControl.sol\":\"MinimumBalanceAccessControl\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/z/home/anovak/workspace/macroverse/contracts/AccessControl.sol\":{\"keccak256\":\"0xb73144156419d9a5318081c9ae9d65b13da5e5e706a96c17c24c2173a6b31ecc\",\"urls\":[\"bzz-raw://9a300f85ad1673f454fdf492f29c50e3b0f1f12f178b5d3ce45f6a6724025395\",\"dweb:/ipfs/QmTPzViBHUXQ9TvWyWoNPKsRqfgbDpv8YfFproneZ8HcBw\"]},\"/z/home/anovak/workspace/macroverse/contracts/MinimumBalanceAccessControl.sol\":{\"keccak256\":\"0x3ff2d60985423935dfe871570533ce6ad445de87d0765ea94b061cb718731c0f\",\"urls\":[\"bzz-raw://9db947a5155d270f9ceea05799a41dfdf395da0c46d6e715cb838e9deabdf376\",\"dweb:/ipfs/Qmf2Hrciw6ngZD3hm43cPVaJrNNzWurEnYMKUxLQ9UxMNJ\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161027e38038061027e8339818101604052604081101561003357600080fd5b810190808051906020019092919080519060200190929190505050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060018190555050506101d8806100a66000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80634af5fb0f14610030575b600080fd5b6100926004803603604081101561004657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506100ac565b604051808215151515815260200191505060405180910390f35b60006001546000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561014f57600080fd5b505afa158015610163573d6000803e3d6000fd5b505050506040513d602081101561017957600080fd5b810190808051906020019092919050505010610198576001905061019d565b600090505b9291505056fea265627a7a7231582043e98b4b78ba7b4c5850b67c2d0d6e2d81f9e7b99e2722d33ce2b3c1c44955bd64736f6c634300050e0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80634af5fb0f14610030575b600080fd5b6100926004803603604081101561004657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506100ac565b604051808215151515815260200191505060405180910390f35b60006001546000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561014f57600080fd5b505afa158015610163573d6000803e3d6000fd5b505050506040513d602081101561017957600080fd5b810190808051906020019092919050505010610198576001905061019d565b600090505b9291505056fea265627a7a7231582043e98b4b78ba7b4c5850b67c2d0d6e2d81f9e7b99e2722d33ce2b3c1c44955bd64736f6c634300050e0032",
  "sourceMap": "253:964:19:-;;;490:186;8:9:-1;5:2;;;30:1;27;20:12;5:2;490:186:19;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;490:186:19;;;;;;;;;;;;;;;;;;;;;;;;;595:13;573:12;;:36;;;;;;;;;;;;;;;;;;645:24;619:23;:50;;;;490:186;;253:964;;;;;;",
  "deployedSourceMap": "253:964:19:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;253:964:19;;;;;;;;;;;;;;;;;;;993:222;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;993:222:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1072:4;1126:23;;1092:12;;;;;;;;;;;:22;;;1115:6;1092:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1092:30:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1092:30:19;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1092:30:19;;;;;;;;;;;;;;;;:57;1088:99;;1172:4;1165:11;;;;1088:99;1203:5;1196:12;;993:222;;;;;:::o",
  "source": "pragma solidity ^0.5.2;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\n\nimport \"./AccessControl.sol\";\n\n\n/**\n * Represents an access control strategy where any end user (origin) with a minimum balance in an ERC20 token is allowed.\n */\ncontract MinimumBalanceAccessControl {\n    IERC20 tokenAddress;\n    uint minBalanceInAtomicUnits;\n    \n    /**\n     * Make a new MinimumBalanceAccessControl that requires the specified minimum balance of the specified token.\n     */\n    constructor(address tokenAddress_, uint minBalanceInAtomicUnits_) public {\n        tokenAddress = IERC20(tokenAddress_);\n        minBalanceInAtomicUnits = minBalanceInAtomicUnits_;\n    }\n    \n    /**\n     * Allow all queries resulting from a transaction initiated from an origin address with at least the required minimum balance.\n     * This means that any contract you use can make queries on your behalf, but that no contract with the minimum balance can proxy\n     * queries for others.\n     */\n    function allowQuery(address /* sender */, address origin) public view returns (bool) {\n        if (tokenAddress.balanceOf(origin) >= minBalanceInAtomicUnits) {\n            return true;\n        }\n        return false;\n    }\n}\n",
  "sourcePath": "/z/home/anovak/workspace/macroverse/contracts/MinimumBalanceAccessControl.sol",
  "ast": {
    "absolutePath": "/z/home/anovak/workspace/macroverse/contracts/MinimumBalanceAccessControl.sol",
    "exportedSymbols": {
      "MinimumBalanceAccessControl": [
        8340
      ]
    },
    "id": 8341,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8293,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:19"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 8294,
        "nodeType": "ImportDirective",
        "scope": 8341,
        "sourceUnit": 11167,
        "src": "25:64:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/z/home/anovak/workspace/macroverse/contracts/AccessControl.sol",
        "file": "./AccessControl.sol",
        "id": 8295,
        "nodeType": "ImportDirective",
        "scope": 8341,
        "sourceUnit": 12,
        "src": "91:29:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "Represents an access control strategy where any end user (origin) with a minimum balance in an ERC20 token is allowed.",
        "fullyImplemented": true,
        "id": 8340,
        "linearizedBaseContracts": [
          8340
        ],
        "name": "MinimumBalanceAccessControl",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8297,
            "name": "tokenAddress",
            "nodeType": "VariableDeclaration",
            "scope": 8340,
            "src": "296:19:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$11166",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 8296,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11166,
              "src": "296:6:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$11166",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8299,
            "name": "minBalanceInAtomicUnits",
            "nodeType": "VariableDeclaration",
            "scope": 8340,
            "src": "321:28:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8298,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "321:4:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8316,
              "nodeType": "Block",
              "src": "563:113:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8306,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8297,
                      "src": "573:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$11166",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 8308,
                          "name": "tokenAddress_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8301,
                          "src": "595:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 8307,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11166,
                        "src": "588:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$11166_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 8309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "588:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$11166",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "573:36:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$11166",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 8311,
                  "nodeType": "ExpressionStatement",
                  "src": "573:36:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8312,
                      "name": "minBalanceInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8299,
                      "src": "619:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8313,
                      "name": "minBalanceInAtomicUnits_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8303,
                      "src": "645:24:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "619:50:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8315,
                  "nodeType": "ExpressionStatement",
                  "src": "619:50:19"
                }
              ]
            },
            "documentation": "Make a new MinimumBalanceAccessControl that requires the specified minimum balance of the specified token.",
            "id": 8317,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8301,
                  "name": "tokenAddress_",
                  "nodeType": "VariableDeclaration",
                  "scope": 8317,
                  "src": "502:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8300,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "502:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8303,
                  "name": "minBalanceInAtomicUnits_",
                  "nodeType": "VariableDeclaration",
                  "scope": 8317,
                  "src": "525:29:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8302,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "525:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "501:54:19"
            },
            "returnParameters": {
              "id": 8305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "563:0:19"
            },
            "scope": 8340,
            "src": "490:186:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8338,
              "nodeType": "Block",
              "src": "1078:137:19",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 8328,
                          "name": "origin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8321,
                          "src": "1115:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 8326,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8297,
                          "src": "1092:12:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$11166",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 8327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11111,
                        "src": "1092:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 8329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1092:30:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 8330,
                      "name": "minBalanceInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8299,
                      "src": "1126:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1092:57:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 8335,
                  "nodeType": "IfStatement",
                  "src": "1088:99:19",
                  "trueBody": {
                    "id": 8334,
                    "nodeType": "Block",
                    "src": "1151:36:19",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 8332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1172:4:19",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 8325,
                        "id": 8333,
                        "nodeType": "Return",
                        "src": "1165:11:19"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 8336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1203:5:19",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 8325,
                  "id": 8337,
                  "nodeType": "Return",
                  "src": "1196:12:19"
                }
              ]
            },
            "documentation": "Allow all queries resulting from a transaction initiated from an origin address with at least the required minimum balance.\nThis means that any contract you use can make queries on your behalf, but that no contract with the minimum balance can proxy\nqueries for others.",
            "id": 8339,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowQuery",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8319,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8339,
                  "src": "1013:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8318,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1013:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8321,
                  "name": "origin",
                  "nodeType": "VariableDeclaration",
                  "scope": 8339,
                  "src": "1035:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1012:38:19"
            },
            "returnParameters": {
              "id": 8325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8324,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8339,
                  "src": "1072:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8323,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1072:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1071:6:19"
            },
            "scope": 8340,
            "src": "993:222:19",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 8341,
        "src": "253:964:19"
      }
    ],
    "src": "0:1218:19"
  },
  "legacyAST": {
    "absolutePath": "/z/home/anovak/workspace/macroverse/contracts/MinimumBalanceAccessControl.sol",
    "exportedSymbols": {
      "MinimumBalanceAccessControl": [
        8340
      ]
    },
    "id": 8341,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8293,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:19"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 8294,
        "nodeType": "ImportDirective",
        "scope": 8341,
        "sourceUnit": 11167,
        "src": "25:64:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/z/home/anovak/workspace/macroverse/contracts/AccessControl.sol",
        "file": "./AccessControl.sol",
        "id": 8295,
        "nodeType": "ImportDirective",
        "scope": 8341,
        "sourceUnit": 12,
        "src": "91:29:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "Represents an access control strategy where any end user (origin) with a minimum balance in an ERC20 token is allowed.",
        "fullyImplemented": true,
        "id": 8340,
        "linearizedBaseContracts": [
          8340
        ],
        "name": "MinimumBalanceAccessControl",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8297,
            "name": "tokenAddress",
            "nodeType": "VariableDeclaration",
            "scope": 8340,
            "src": "296:19:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$11166",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 8296,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11166,
              "src": "296:6:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$11166",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8299,
            "name": "minBalanceInAtomicUnits",
            "nodeType": "VariableDeclaration",
            "scope": 8340,
            "src": "321:28:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8298,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "321:4:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8316,
              "nodeType": "Block",
              "src": "563:113:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8306,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8297,
                      "src": "573:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$11166",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 8308,
                          "name": "tokenAddress_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8301,
                          "src": "595:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 8307,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11166,
                        "src": "588:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$11166_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 8309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "588:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$11166",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "573:36:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$11166",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 8311,
                  "nodeType": "ExpressionStatement",
                  "src": "573:36:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8312,
                      "name": "minBalanceInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8299,
                      "src": "619:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8313,
                      "name": "minBalanceInAtomicUnits_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8303,
                      "src": "645:24:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "619:50:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8315,
                  "nodeType": "ExpressionStatement",
                  "src": "619:50:19"
                }
              ]
            },
            "documentation": "Make a new MinimumBalanceAccessControl that requires the specified minimum balance of the specified token.",
            "id": 8317,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8301,
                  "name": "tokenAddress_",
                  "nodeType": "VariableDeclaration",
                  "scope": 8317,
                  "src": "502:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8300,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "502:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8303,
                  "name": "minBalanceInAtomicUnits_",
                  "nodeType": "VariableDeclaration",
                  "scope": 8317,
                  "src": "525:29:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8302,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "525:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "501:54:19"
            },
            "returnParameters": {
              "id": 8305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "563:0:19"
            },
            "scope": 8340,
            "src": "490:186:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8338,
              "nodeType": "Block",
              "src": "1078:137:19",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 8328,
                          "name": "origin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8321,
                          "src": "1115:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 8326,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8297,
                          "src": "1092:12:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$11166",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 8327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11111,
                        "src": "1092:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 8329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1092:30:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 8330,
                      "name": "minBalanceInAtomicUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8299,
                      "src": "1126:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1092:57:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 8335,
                  "nodeType": "IfStatement",
                  "src": "1088:99:19",
                  "trueBody": {
                    "id": 8334,
                    "nodeType": "Block",
                    "src": "1151:36:19",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 8332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1172:4:19",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 8325,
                        "id": 8333,
                        "nodeType": "Return",
                        "src": "1165:11:19"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 8336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1203:5:19",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 8325,
                  "id": 8337,
                  "nodeType": "Return",
                  "src": "1196:12:19"
                }
              ]
            },
            "documentation": "Allow all queries resulting from a transaction initiated from an origin address with at least the required minimum balance.\nThis means that any contract you use can make queries on your behalf, but that no contract with the minimum balance can proxy\nqueries for others.",
            "id": 8339,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowQuery",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8319,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8339,
                  "src": "1013:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8318,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1013:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8321,
                  "name": "origin",
                  "nodeType": "VariableDeclaration",
                  "scope": 8339,
                  "src": "1035:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1012:38:19"
            },
            "returnParameters": {
              "id": 8325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8324,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8339,
                  "src": "1072:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8323,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1072:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1071:6:19"
            },
            "scope": 8340,
            "src": "993:222:19",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 8341,
        "src": "253:964:19"
      }
    ],
    "src": "0:1218:19"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.14+commit.01f1aaa4.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {},
      "links": {},
      "address": "0x74e43a8b712fef9f3387bfc2f7c5017b51fd8813",
      "updated_at": 1498363737182
    },
    "4": {
      "events": {},
      "links": {},
      "address": "0xd38232b3a765B5fF6f59948B4303aa58026Fb2aA",
      "transactionHash": "0x8880cb8c86efe549bfe1b421219af983b0f3ea6909b5b3dae2fd7e58610bf0fa"
    }
  },
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-05-22T04:29:06.641Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {
      "allowQuery(address,address)": {
        "notice": "Allow all queries resulting from a transaction initiated from an origin address with at least the required minimum balance. This means that any contract you use can make queries on your behalf, but that no contract with the minimum balance can proxy queries for others."
      },
      "constructor": "Make a new MinimumBalanceAccessControl that requires the specified minimum balance of the specified token."
    },
    "notice": "Represents an access control strategy where any end user (origin) with a minimum balance in an ERC20 token is allowed."
  }
}