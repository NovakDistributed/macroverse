{
  "contractName": "TestnetMRVToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "sendProceedsTo",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sendTokensTo",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "CrowdsaleClose",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "CrowdsaleOpen",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "newDecimals",
          "type": "uint8"
        }
      ],
      "name": "DecimalChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "etherAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "name": "TokenPurchase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkCloseTimer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkOpenTimer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clearCrowdsaleCloseTimer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clearCrowdsaleOpenTimer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closeCrowdsale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closeTimer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closeTimerElapsed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isCrowdsaleActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxCrowdsaleSupplyInWholeTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openCrowdsale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openTimer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openTimerElapsed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contractAddr",
          "type": "address"
        }
      ],
      "name": "reclaimContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reclaimEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        }
      ],
      "name": "reclaimToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minutesFromNow",
          "type": "uint256"
        }
      ],
      "name": "setCrowdsaleCloseTimerFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minutesFromNow",
          "type": "uint256"
        }
      ],
      "name": "setCrowdsaleOpenTimerFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "newDecimals",
          "type": "uint8"
        }
      ],
      "name": "setDecimals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMaxInWholeTokens",
          "type": "uint256"
        }
      ],
      "name": "setMaxSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "tokenFallback",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wholeTokensPerEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wholeTokensReserved",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"sendProceedsTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sendTokensTo\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"CrowdsaleClose\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"CrowdsaleOpen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"newDecimals\",\"type\":\"uint8\"}],\"name\":\"DecimalChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"etherAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkCloseTimer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkOpenTimer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearCrowdsaleCloseTimer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearCrowdsaleOpenTimer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeCrowdsale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeTimer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeTimerElapsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isCrowdsaleActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxCrowdsaleSupplyInWholeTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openCrowdsale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTimer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTimerElapsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"reclaimContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reclaimEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"}],\"name\":\"reclaimToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minutesFromNow\",\"type\":\"uint256\"}],\"name\":\"setCrowdsaleCloseTimerFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minutesFromNow\",\"type\":\"uint256\"}],\"name\":\"setCrowdsaleOpenTimerFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"newDecimals\",\"type\":\"uint8\"}],\"name\":\"setDecimals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxInWholeTokens\",\"type\":\"uint256\"}],\"name\":\"setMaxSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wholeTokensPerEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wholeTokensReserved\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"reclaimContract(address)\":{\"details\":\"Reclaim ownership of Ownable contracts\",\"params\":{\"contractAddr\":\"The address of the Ownable to be reclaimed.\"}},\"reclaimToken(address)\":{\"details\":\"Reclaim all IERC20 compatible tokens\",\"params\":{\"tokenAddr\":\"address The address of the token contract\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"tokenFallback(address,uint256,bytes)\":{\"details\":\"Reject all ERC23 compatible tokens\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"checkCloseTimer()\":{\"notice\":\"If the close timer has elapsed, stop the crowdsale.\"},\"checkOpenTimer()\":{\"notice\":\"If the open timer has elapsed, start the crowdsale. Can be called by people, but also gets called when people try to contribute.\"},\"clearCrowdsaleCloseTimer()\":{\"notice\":\"Let the owner stop the crowdsale close timer, as long as it has not yet expired.\"},\"clearCrowdsaleOpenTimer()\":{\"notice\":\"Let the owner stop the crowdsale open timer, as long as the crowdsale has not yet opened.\"},\"closeCrowdsale()\":{\"notice\":\"Allow the owner to end the crowdsale manually.\"},\"closeTimerElapsed()\":{\"notice\":\"Determine if the crowdsale should close by timer.\"},\"constructor\":\"Make a new TestnetMRVToken. Passes through arguments to the base MRVToken constructor.\",\"decreaseAllowance(address,uint256)\":{\"notice\":\"Block the decreaseAllowance method which is not in the mainned deployed contract, but which OZ added to their library after we deployed.\"},\"increaseAllowance(address,uint256)\":{\"notice\":\"Block the increaseAllowance method which is not in the mainned deployed contract, but which OZ added to their library after we deployed.\"},\"isCrowdsaleActive()\":{\"notice\":\"Determine if the crowdsale is currently happening.\"},\"mint(uint256)\":{\"notice\":\"Allow anyone to mint themselves any amount of tokens, for testing.\"},\"openCrowdsale()\":{\"notice\":\"Allow the owner to start the crowdsale manually.\"},\"openTimerElapsed()\":{\"notice\":\"Determine if the crowdsale should open by timer.\"},\"reclaimEther()\":{\"notice\":\"If Ether somehow manages to get into this contract, provide a way to get it out again. During normal crowdsale operation, ETH is immediately forwarded to the beneficiary.\"},\"setCrowdsaleCloseTimerFor(uint256)\":{\"notice\":\"Let the owner start the timer for the crowdsale end. Counts from when the function is called, *not* from the start of the crowdsale. It is possible, but a bad idea, to set this before the open timer.\"},\"setCrowdsaleOpenTimerFor(uint256)\":{\"notice\":\"Let the owner start the timer for the crowdsale start. Without further owner intervention, anyone will be able to open the crowdsale when the timer expires. Further calls will re-set the timer to count from the time the transaction is processed. The timer can be re-set after it has tripped, unless someone has already opened the crowdsale.\"},\"setDecimals(uint8)\":{\"notice\":\"When the crowdsale is finished, the contract owner may adjust the decimal places for display purposes. This should work like a 10-to-1 split or reverse-split. The point of this mechanism is to keep the individual MRV tokens from getting inconveniently valuable or cheap. However, it relies on the contract owner taking the time to update the decimal place value. Note that this changes the decimals IMMEDIATELY with NO NOTICE to users.\"},\"setMaxSupply(uint256)\":{\"notice\":\"Before the crowdsale opens, the max token count can be configured.\"}},\"notice\":\"MRVToken contract which adds unrestricted minting by anyone. Only useful on a testnet.\"}},\"settings\":{\"compilationTarget\":{\"/z/home/anovak/workspace/macroverse/contracts/TestnetMRVToken.sol\":\"TestnetMRVToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/z/home/anovak/workspace/macroverse/contracts/HasNoContracts.sol\":{\"keccak256\":\"0x9fc0b6fb78952f6574d76c8326d34cb240078fb6955f6741e0353f47ad52307a\",\"urls\":[\"bzz-raw://f81e0bd89c2e7749ca610ccee4f08057177193a41fd718f1469c195af836596e\",\"dweb:/ipfs/QmT15knS5M1rCR6tVRVgbNzrFC89LNW6iJJMov7TcWSZyF\"]},\"/z/home/anovak/workspace/macroverse/contracts/HasNoTokens.sol\":{\"keccak256\":\"0x1ec94caeb2deddc95a10be6c186e1bd42357b982e7568a8d50c3109bcc9a0f5e\",\"urls\":[\"bzz-raw://79fbd7b185a9062bb26a5229a3e022fa5b59d7eae5332e138bb2f222fe971e55\",\"dweb:/ipfs/QmZG8C8tD1P7xKoKU6KYnV91y5bW186vJJ92rhw3TGU11t\"]},\"/z/home/anovak/workspace/macroverse/contracts/MRVToken.sol\":{\"keccak256\":\"0x8efaf54c8d51a95ac9aa2a4fc264a151b8b081b37584eb14b21d5c58c3a619d5\",\"urls\":[\"bzz-raw://5c666e4d91a90967249a952120623e63fd1220b15200a5b944f4622b41c4efe9\",\"dweb:/ipfs/QmZGXs2YirXGVEM5BBzVvix3CgNVZoq6CTmfdmEDfTHzqH\"]},\"/z/home/anovak/workspace/macroverse/contracts/TestnetMRVToken.sol\":{\"keccak256\":\"0x0f94dfc4be9df230bd04cf076ca52901a9f6a4a0e7787c3681b3ed53a2d07cc8\",\"urls\":[\"bzz-raw://e55417899d1708c651defa12aa22bf18a06aeff5b2d48f18e471a605e5f857e9\",\"dweb:/ipfs/QmQQ4vBGrHEixSf9LTAkEPad8YYXHrDnwkiPe4SMb5ao2h\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x310e66ba9e43bfd0bc6110c06e4c98e86e8515a85a295031413931fafb347b92\",\"urls\":[\"bzz-raw://8e061529b96bf38743c4ea16b44d53e145b3f16ec0a68151b1a690f348aad944\",\"dweb:/ipfs/QmR2hKcGi5NUNp1bWvjwvdv6J71ySp7ih5Ey3WxWkiRWh8\"]},\"openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa8b9207237f43e1af0feb1423db95cabf05989b89ff0d903b148a6f01856253f\",\"urls\":[\"bzz-raw://94271c7aeba6023ca590bcd32b59328ce78eefb55f0792fc87bd2c9720f45c2c\",\"dweb:/ipfs/QmXbG6dvnSqLvAXUVK9d26Sfi9d2kFtpxpo7mAuQYhKXPN\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9f5f241611b89edba99d342a5e826697c2bf26a567cd51b20e991344511b23b6\",\"urls\":[\"bzz-raw://dc9566acec64b1816d4f003928b3da56affd8dcd3385c7ef645ee1854acdc41b\",\"dweb:/ipfs/QmafEvnB89VjQTAtFqoHSYvgSABPkGgxkYnW4YbpmYDhxS\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x04a62cfe0d39754b6753634c582233889c4f1d5d68fcb139aaaa1ac8b8d7d50a\",\"urls\":[\"bzz-raw://ba3c2d5c4d9ec08208ce2be3f09dad8c2ca63668a351f6e8282f3c1bc6629d55\",\"dweb:/ipfs/QmSumrbcnCwfQ5UHTN7zR72EZ5hfdzofhmXDXgGFwNsXBS\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xcd7d59a57b078b399972308a44ad467d62d95a2924ae358b9acedad1b9bdf6ae\",\"urls\":[\"bzz-raw://c64b13b4abe515fd954cda736943c159e403934c17bcec70dc3b004f5832d369\",\"dweb:/ipfs/QmY5uk3UmEBAzPU36oPB2VAAMxVrcQs74MKnA3VmRFhdrN\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xd1f3a17da013bb360dfcc4d7028b6a60e7d444ad4926bb37a84d8bfa83d12812\",\"urls\":[\"bzz-raw://97dc02aa518fdcef216bd3f4b00a8e555e5513eb4b144e56c60fcfc4768acfff\",\"dweb:/ipfs/QmTQ2Yt1DV64KZffS4jo8XxUzSS4TTeE3oc1oWvkfY6MiN\"]}},\"version\":1}",
  "bytecode": "0x608060405260006009556000600a553480156200001b57600080fd5b506040516200201d3803806200201d833981810160405260408110156200004157600080fd5b508051602091820151604080518082018252601081526f26b0b1b937bb32b939b2902a37b5b2b760811b818601908152825180840190935260038084526226a92b60e91b968401969096528151949593948694869492620000a29262000330565b508051620000b890600490602084019062000330565b50506005805460ff19166012179055506000620000dd6001600160e01b036200019616565b60058054610100600160a81b0319166101006001600160a01b03841690810291909117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600680546001600160a01b0319166001600160a01b0384161790556200015a60126200019b565b620001798169010f0cf064dd592000006001600160e01b03620001b116565b50506008805461ffff1916905550506305f5e100600755620003d2565b335b90565b6005805460ff191660ff92909216919091179055565b6001600160a01b0382166200020d576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b62000224600083836001600160e01b03620002c916565b6200024081600254620002ce60201b620016081790919060201c565b6002556001600160a01b038216600090815260208181526040909120546200027391839062001608620002ce821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b505050565b60008282018381101562000329576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200037357805160ff1916838001178555620003a3565b82800160010185558215620003a3579182015b82811115620003a357825182559160200191906001019062000386565b50620003b1929150620003b5565b5090565b6200019891905b80821115620003b15760008155600101620003bc565b611c3b80620003e26000396000f3fe60806040526004361061021e5760003560e01c8063715018a6116101235780639f727c27116100ab578063dd3260fc1161006f578063dd3260fc14610772578063dd62ed3e14610787578063e330a737146107c2578063ea663631146107ec578063f2fde38b1461080157610262565b80639f727c2714610668578063a0712d681461067d578063a457c2d7146104a2578063a9059cbb146106a7578063c0ee0b8a146106e057610262565b80638490d598116100f25780638490d598146104db5780638da5cb5b146105f857806392f351f91461062957806395d89b411461063e578063983c0a011461065357610262565b8063715018a61461057757806379d220ae1461058c5780637a1395aa146105b657806380f4531f146105e357610262565b80632aed7f3f116101a65780634e15dfe9116101755780634e15dfe9146104db5780635da24f90146104f05780636d6e2710146105055780636f8b44b01461051a57806370a082311461054457610262565b80632aed7f3f1461042f578063313ce56714610462578063346fc0dd1461048d57806339509351146104a257610262565b806317ffc320116101ed57806317ffc3201461036857806318160ddd1461039b5780631f4425f3146103c257806323b872dd146103d757806328ef6f401461041a57610262565b80630118e6861461026757806306fdde0314610290578063095ea7b31461031a5780630d051c521461035357610262565b366102625761022b610834565b610233610889565b600854610100900460ff161561024857600080fd5b60085460ff1661025757600080fd5b610260336108df565b005b600080fd5b34801561027357600080fd5b5061027c6109f3565b604080519115158252519081900360200190f35b34801561029c57600080fd5b506102a5610a31565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102df5781810151838201526020016102c7565b50505050905090810190601f16801561030c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561032657600080fd5b5061027c6004803603604081101561033d57600080fd5b506001600160a01b038135169060200135610ac7565b34801561035f57600080fd5b50610260610ae5565b34801561037457600080fd5b506102606004803603602081101561038b57600080fd5b50356001600160a01b0316610b66565b3480156103a757600080fd5b506103b0610cd4565b60408051918252519081900360200190f35b3480156103ce57600080fd5b50610260610889565b3480156103e357600080fd5b5061027c600480360360608110156103fa57600080fd5b506001600160a01b03813581169160208101359091169060400135610cda565b34801561042657600080fd5b50610260610d67565b34801561043b57600080fd5b506102606004803603602081101561045257600080fd5b50356001600160a01b0316610e23565b34801561046e57600080fd5b50610477610efc565b6040805160ff9092168252519081900360200190f35b34801561049957600080fd5b506103b0610f05565b3480156104ae57600080fd5b5061027c600480360360408110156104c557600080fd5b506001600160a01b038135169060200135610f0b565b3480156104e757600080fd5b506103b0610f12565b3480156104fc57600080fd5b506103b0610f18565b34801561051157600080fd5b50610260610f1e565b34801561052657600080fd5b506102606004803603602081101561053d57600080fd5b5035610f9a565b34801561055057600080fd5b506103b06004803603602081101561056757600080fd5b50356001600160a01b0316611014565b34801561058357600080fd5b5061026061102f565b34801561059857600080fd5b50610260600480360360208110156105af57600080fd5b50356110dc565b3480156105c257600080fd5b50610260600480360360208110156105d957600080fd5b503560ff1661115b565b3480156105ef57600080fd5b5061027c611216565b34801561060457600080fd5b5061060d61122f565b604080516001600160a01b039092168252519081900360200190f35b34801561063557600080fd5b506103b0611243565b34801561064a57600080fd5b506102a5611249565b34801561065f57600080fd5b506102606112aa565b34801561067457600080fd5b50610260611384565b34801561068957600080fd5b50610260600480360360208110156106a057600080fd5b5035611416565b3480156106b357600080fd5b5061027c600480360360408110156106ca57600080fd5b506001600160a01b038135169060200135611423565b3480156106ec57600080fd5b506102606004803603606081101561070357600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561073357600080fd5b82018360208201111561074557600080fd5b8035906020019184600183028401116401000000008311171561076757600080fd5b509092509050610262565b34801561077e57600080fd5b50610260610834565b34801561079357600080fd5b506103b0600480360360408110156107aa57600080fd5b506001600160a01b0381358116916020013516611437565b3480156107ce57600080fd5b50610260600480360360208110156107e557600080fd5b5035611462565b3480156107f857600080fd5b5061027c6114e6565b34801561080d57600080fd5b506102606004803603602081101561082457600080fd5b50356001600160a01b03166114ff565b61083c6114e6565b15610887576008805460ff1916600117905560006009556040805142815290517ff82aa3c8d92a1044b702b0c9718bd99d353a4a85a215bdb4fe6c6a04b5f541e09181900360200190a15b565b610891611216565b15610887576008805461ff0019166101001790556000600a556040805142815290517f99424d4740b41446c45fa894e3dda8489b8ef8df8a37f8035f83053ed26485c19181900360200190a1565b6108e7610834565b6108ef610889565b600854610100900460ff161561090457600080fd5b60085460ff1661091357600080fd5b3461091d57600080fd5b60006109313461138863ffffffff61166916565b9050600061094d82610941610cd4565b9063ffffffff61160816565b905060075461138801670de0b6b3a76400000281111561096c57600080fd5b61097683836116c2565b604080514281523460208201526001600160a01b0385168183015290517fd240e127ddfc99c27bdd1c45b264d1954a1e2bdb17a4c37e81586fd1412882619181900360600190a16006546040516001600160a01b03909116903480156108fc02916000818181858888f193505050506109ee57600080fd5b505050565b60085460009060ff1680610a0a5750610a0a6114e6565b8015610a2c5750600854610100900460ff1680610a2a5750610a2a611216565b155b905090565b60038054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610abd5780601f10610a9257610100808354040283529160200191610abd565b820191906000526020600020905b815481529060010190602001808311610aa057829003601f168201915b5050505050905090565b6000610adb610ad46117be565b84846117c2565b5060015b92915050565b610aed6117be565b60055461010090046001600160a01b03908116911614610b42576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9d833981519152604482015290519081900360640190fd5b610b4a610889565b600854610100900460ff1615610b5f57600080fd5b6000600a55565b610b6e6117be565b60055461010090046001600160a01b03908116911614610bc3576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9d833981519152604482015290519081900360640190fd5b604080516370a0823160e01b8152306004820152905182916000916001600160a01b038416916370a08231916024808301926020929190829003018186803b158015610c0e57600080fd5b505afa158015610c22573d6000803e3d6000fd5b505050506040513d6020811015610c3857600080fd5b505190506001600160a01b03821663a9059cbb610c5361122f565b836040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610ca357600080fd5b505af1158015610cb7573d6000803e3d6000fd5b505050506040513d6020811015610ccd57600080fd5b5050505050565b60025490565b6000610ce78484846118ae565b610d5d84610cf36117be565b610d5885604051806060016040528060288152602001611b75602891396001600160a01b038a16600090815260016020526040812090610d316117be565b6001600160a01b03168152602081019190915260400160002054919063ffffffff611a1516565b6117c2565b5060019392505050565b610d6f6117be565b60055461010090046001600160a01b03908116911614610dc4576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9d833981519152604482015290519081900360640190fd5b610dcc610834565b60085460ff1615610ddc57600080fd5b6008805460ff1916600117905560006009556040805142815290517ff82aa3c8d92a1044b702b0c9718bd99d353a4a85a215bdb4fe6c6a04b5f541e09181900360200190a1565b610e2b6117be565b60055461010090046001600160a01b03908116911614610e80576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9d833981519152604482015290519081900360640190fd5b806001600160a01b03811663f2fde38b610e9861122f565b6040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b158015610ee057600080fd5b505af1158015610ef4573d6000803e3d6000fd5b505050505050565b60055460ff1690565b60075481565b6000806000fd5b61138881565b600a5481565b610f266117be565b60055461010090046001600160a01b03908116911614610f7b576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9d833981519152604482015290519081900360640190fd5b610f83610834565b60085460ff1615610f9357600080fd5b6000600955565b610fa26117be565b60055461010090046001600160a01b03908116911614610ff7576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9d833981519152604482015290519081900360640190fd5b610fff610834565b60085460ff161561100f57600080fd5b600755565b6001600160a01b031660009081526020819052604090205490565b6110376117be565b60055461010090046001600160a01b0390811691161461108c576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9d833981519152604482015290519081900360640190fd5b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b6110e46117be565b60055461010090046001600160a01b03908116911614611139576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9d833981519152604482015290519081900360640190fd5b611141610834565b60085460ff161561115157600080fd5b603c024201600955565b6111636117be565b60055461010090046001600160a01b039081169116146111b8576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9d833981519152604482015290519081900360640190fd5b6111c0610889565b600854610100900460ff166111d457600080fd5b6111dd81611aac565b6040805160ff8316815290517fed6150ec960548590c920ded6ef554ec9e451dd7b4c85f62fb3760812cd72cf19181900360200190a150565b6000600a54600014158015610a2c575050600a54421190565b60055461010090046001600160a01b031690565b60095481565b60048054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610abd5780601f10610a9257610100808354040283529160200191610abd565b6112b26117be565b60055461010090046001600160a01b03908116911614611307576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9d833981519152604482015290519081900360640190fd5b61130f610834565b611317610889565b600854610100900460ff161561132c57600080fd5b60085460ff1661133b57600080fd5b6008805461ff0019166101001790556000600a556040805142815290517f99424d4740b41446c45fa894e3dda8489b8ef8df8a37f8035f83053ed26485c19181900360200190a1565b61138c6117be565b60055461010090046001600160a01b039081169116146113e1576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9d833981519152604482015290519081900360640190fd5b6113e961122f565b6001600160a01b03166108fc479081150290604051600060405180830381858888f1935050505061088757fe5b61142033826116c2565b50565b6000610adb6114306117be565b84846118ae565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61146a6117be565b60055461010090046001600160a01b039081169116146114bf576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9d833981519152604482015290519081900360640190fd5b6114c7610889565b600854610100900460ff16156114dc57600080fd5b603c024201600a55565b6000600954600014158015610a2c575050600954421190565b6115076117be565b60055461010090046001600160a01b0390811691161461155c576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9d833981519152604482015290519081900360640190fd5b6001600160a01b0381166115a15760405162461bcd60e51b8152600401808060200182810382526026815260200180611ae66026913960400191505060405180910390fd5b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b600082820183811015611662576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b60008261167857506000610adf565b8282028284828161168557fe5b04146116625760405162461bcd60e51b8152600401808060200182810382526021815260200180611b546021913960400191505060405180910390fd5b6001600160a01b03821661171d576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b611729600083836109ee565b60025461173c908263ffffffff61160816565b6002556001600160a01b038216600090815260208190526040902054611768908263ffffffff61160816565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b3390565b6001600160a01b0383166118075760405162461bcd60e51b8152600401808060200182810382526024815260200180611be26024913960400191505060405180910390fd5b6001600160a01b03821661184c5760405162461bcd60e51b8152600401808060200182810382526022815260200180611b0c6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166118f35760405162461bcd60e51b8152600401808060200182810382526025815260200180611bbd6025913960400191505060405180910390fd5b6001600160a01b0382166119385760405162461bcd60e51b8152600401808060200182810382526023815260200180611ac36023913960400191505060405180910390fd5b6119438383836109ee565b61198681604051806060016040528060268152602001611b2e602691396001600160a01b038616600090815260208190526040902054919063ffffffff611a1516565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546119bb908263ffffffff61160816565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115611aa45760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611a69578181015183820152602001611a51565b50505050905090810190601f168015611a965780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6005805460ff191660ff9290921691909117905556fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657245524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a26469706673582212202e7540ebe1e4b0936bdbeaac3bebb9927f76d8cde34ee31cc121d10e9b65266664736f6c634300060a0033",
  "deployedBytecode": "0x60806040526004361061021e5760003560e01c8063715018a6116101235780639f727c27116100ab578063dd3260fc1161006f578063dd3260fc14610772578063dd62ed3e14610787578063e330a737146107c2578063ea663631146107ec578063f2fde38b1461080157610262565b80639f727c2714610668578063a0712d681461067d578063a457c2d7146104a2578063a9059cbb146106a7578063c0ee0b8a146106e057610262565b80638490d598116100f25780638490d598146104db5780638da5cb5b146105f857806392f351f91461062957806395d89b411461063e578063983c0a011461065357610262565b8063715018a61461057757806379d220ae1461058c5780637a1395aa146105b657806380f4531f146105e357610262565b80632aed7f3f116101a65780634e15dfe9116101755780634e15dfe9146104db5780635da24f90146104f05780636d6e2710146105055780636f8b44b01461051a57806370a082311461054457610262565b80632aed7f3f1461042f578063313ce56714610462578063346fc0dd1461048d57806339509351146104a257610262565b806317ffc320116101ed57806317ffc3201461036857806318160ddd1461039b5780631f4425f3146103c257806323b872dd146103d757806328ef6f401461041a57610262565b80630118e6861461026757806306fdde0314610290578063095ea7b31461031a5780630d051c521461035357610262565b366102625761022b610834565b610233610889565b600854610100900460ff161561024857600080fd5b60085460ff1661025757600080fd5b610260336108df565b005b600080fd5b34801561027357600080fd5b5061027c6109f3565b604080519115158252519081900360200190f35b34801561029c57600080fd5b506102a5610a31565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102df5781810151838201526020016102c7565b50505050905090810190601f16801561030c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561032657600080fd5b5061027c6004803603604081101561033d57600080fd5b506001600160a01b038135169060200135610ac7565b34801561035f57600080fd5b50610260610ae5565b34801561037457600080fd5b506102606004803603602081101561038b57600080fd5b50356001600160a01b0316610b66565b3480156103a757600080fd5b506103b0610cd4565b60408051918252519081900360200190f35b3480156103ce57600080fd5b50610260610889565b3480156103e357600080fd5b5061027c600480360360608110156103fa57600080fd5b506001600160a01b03813581169160208101359091169060400135610cda565b34801561042657600080fd5b50610260610d67565b34801561043b57600080fd5b506102606004803603602081101561045257600080fd5b50356001600160a01b0316610e23565b34801561046e57600080fd5b50610477610efc565b6040805160ff9092168252519081900360200190f35b34801561049957600080fd5b506103b0610f05565b3480156104ae57600080fd5b5061027c600480360360408110156104c557600080fd5b506001600160a01b038135169060200135610f0b565b3480156104e757600080fd5b506103b0610f12565b3480156104fc57600080fd5b506103b0610f18565b34801561051157600080fd5b50610260610f1e565b34801561052657600080fd5b506102606004803603602081101561053d57600080fd5b5035610f9a565b34801561055057600080fd5b506103b06004803603602081101561056757600080fd5b50356001600160a01b0316611014565b34801561058357600080fd5b5061026061102f565b34801561059857600080fd5b50610260600480360360208110156105af57600080fd5b50356110dc565b3480156105c257600080fd5b50610260600480360360208110156105d957600080fd5b503560ff1661115b565b3480156105ef57600080fd5b5061027c611216565b34801561060457600080fd5b5061060d61122f565b604080516001600160a01b039092168252519081900360200190f35b34801561063557600080fd5b506103b0611243565b34801561064a57600080fd5b506102a5611249565b34801561065f57600080fd5b506102606112aa565b34801561067457600080fd5b50610260611384565b34801561068957600080fd5b50610260600480360360208110156106a057600080fd5b5035611416565b3480156106b357600080fd5b5061027c600480360360408110156106ca57600080fd5b506001600160a01b038135169060200135611423565b3480156106ec57600080fd5b506102606004803603606081101561070357600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561073357600080fd5b82018360208201111561074557600080fd5b8035906020019184600183028401116401000000008311171561076757600080fd5b509092509050610262565b34801561077e57600080fd5b50610260610834565b34801561079357600080fd5b506103b0600480360360408110156107aa57600080fd5b506001600160a01b0381358116916020013516611437565b3480156107ce57600080fd5b50610260600480360360208110156107e557600080fd5b5035611462565b3480156107f857600080fd5b5061027c6114e6565b34801561080d57600080fd5b506102606004803603602081101561082457600080fd5b50356001600160a01b03166114ff565b61083c6114e6565b15610887576008805460ff1916600117905560006009556040805142815290517ff82aa3c8d92a1044b702b0c9718bd99d353a4a85a215bdb4fe6c6a04b5f541e09181900360200190a15b565b610891611216565b15610887576008805461ff0019166101001790556000600a556040805142815290517f99424d4740b41446c45fa894e3dda8489b8ef8df8a37f8035f83053ed26485c19181900360200190a1565b6108e7610834565b6108ef610889565b600854610100900460ff161561090457600080fd5b60085460ff1661091357600080fd5b3461091d57600080fd5b60006109313461138863ffffffff61166916565b9050600061094d82610941610cd4565b9063ffffffff61160816565b905060075461138801670de0b6b3a76400000281111561096c57600080fd5b61097683836116c2565b604080514281523460208201526001600160a01b0385168183015290517fd240e127ddfc99c27bdd1c45b264d1954a1e2bdb17a4c37e81586fd1412882619181900360600190a16006546040516001600160a01b03909116903480156108fc02916000818181858888f193505050506109ee57600080fd5b505050565b60085460009060ff1680610a0a5750610a0a6114e6565b8015610a2c5750600854610100900460ff1680610a2a5750610a2a611216565b155b905090565b60038054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610abd5780601f10610a9257610100808354040283529160200191610abd565b820191906000526020600020905b815481529060010190602001808311610aa057829003601f168201915b5050505050905090565b6000610adb610ad46117be565b84846117c2565b5060015b92915050565b610aed6117be565b60055461010090046001600160a01b03908116911614610b42576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9d833981519152604482015290519081900360640190fd5b610b4a610889565b600854610100900460ff1615610b5f57600080fd5b6000600a55565b610b6e6117be565b60055461010090046001600160a01b03908116911614610bc3576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9d833981519152604482015290519081900360640190fd5b604080516370a0823160e01b8152306004820152905182916000916001600160a01b038416916370a08231916024808301926020929190829003018186803b158015610c0e57600080fd5b505afa158015610c22573d6000803e3d6000fd5b505050506040513d6020811015610c3857600080fd5b505190506001600160a01b03821663a9059cbb610c5361122f565b836040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610ca357600080fd5b505af1158015610cb7573d6000803e3d6000fd5b505050506040513d6020811015610ccd57600080fd5b5050505050565b60025490565b6000610ce78484846118ae565b610d5d84610cf36117be565b610d5885604051806060016040528060288152602001611b75602891396001600160a01b038a16600090815260016020526040812090610d316117be565b6001600160a01b03168152602081019190915260400160002054919063ffffffff611a1516565b6117c2565b5060019392505050565b610d6f6117be565b60055461010090046001600160a01b03908116911614610dc4576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9d833981519152604482015290519081900360640190fd5b610dcc610834565b60085460ff1615610ddc57600080fd5b6008805460ff1916600117905560006009556040805142815290517ff82aa3c8d92a1044b702b0c9718bd99d353a4a85a215bdb4fe6c6a04b5f541e09181900360200190a1565b610e2b6117be565b60055461010090046001600160a01b03908116911614610e80576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9d833981519152604482015290519081900360640190fd5b806001600160a01b03811663f2fde38b610e9861122f565b6040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b158015610ee057600080fd5b505af1158015610ef4573d6000803e3d6000fd5b505050505050565b60055460ff1690565b60075481565b6000806000fd5b61138881565b600a5481565b610f266117be565b60055461010090046001600160a01b03908116911614610f7b576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9d833981519152604482015290519081900360640190fd5b610f83610834565b60085460ff1615610f9357600080fd5b6000600955565b610fa26117be565b60055461010090046001600160a01b03908116911614610ff7576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9d833981519152604482015290519081900360640190fd5b610fff610834565b60085460ff161561100f57600080fd5b600755565b6001600160a01b031660009081526020819052604090205490565b6110376117be565b60055461010090046001600160a01b0390811691161461108c576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9d833981519152604482015290519081900360640190fd5b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b6110e46117be565b60055461010090046001600160a01b03908116911614611139576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9d833981519152604482015290519081900360640190fd5b611141610834565b60085460ff161561115157600080fd5b603c024201600955565b6111636117be565b60055461010090046001600160a01b039081169116146111b8576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9d833981519152604482015290519081900360640190fd5b6111c0610889565b600854610100900460ff166111d457600080fd5b6111dd81611aac565b6040805160ff8316815290517fed6150ec960548590c920ded6ef554ec9e451dd7b4c85f62fb3760812cd72cf19181900360200190a150565b6000600a54600014158015610a2c575050600a54421190565b60055461010090046001600160a01b031690565b60095481565b60048054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610abd5780601f10610a9257610100808354040283529160200191610abd565b6112b26117be565b60055461010090046001600160a01b03908116911614611307576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9d833981519152604482015290519081900360640190fd5b61130f610834565b611317610889565b600854610100900460ff161561132c57600080fd5b60085460ff1661133b57600080fd5b6008805461ff0019166101001790556000600a556040805142815290517f99424d4740b41446c45fa894e3dda8489b8ef8df8a37f8035f83053ed26485c19181900360200190a1565b61138c6117be565b60055461010090046001600160a01b039081169116146113e1576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9d833981519152604482015290519081900360640190fd5b6113e961122f565b6001600160a01b03166108fc479081150290604051600060405180830381858888f1935050505061088757fe5b61142033826116c2565b50565b6000610adb6114306117be565b84846118ae565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61146a6117be565b60055461010090046001600160a01b039081169116146114bf576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9d833981519152604482015290519081900360640190fd5b6114c7610889565b600854610100900460ff16156114dc57600080fd5b603c024201600a55565b6000600954600014158015610a2c575050600954421190565b6115076117be565b60055461010090046001600160a01b0390811691161461155c576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9d833981519152604482015290519081900360640190fd5b6001600160a01b0381166115a15760405162461bcd60e51b8152600401808060200182810382526026815260200180611ae66026913960400191505060405180910390fd5b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b600082820183811015611662576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b60008261167857506000610adf565b8282028284828161168557fe5b04146116625760405162461bcd60e51b8152600401808060200182810382526021815260200180611b546021913960400191505060405180910390fd5b6001600160a01b03821661171d576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b611729600083836109ee565b60025461173c908263ffffffff61160816565b6002556001600160a01b038216600090815260208190526040902054611768908263ffffffff61160816565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b3390565b6001600160a01b0383166118075760405162461bcd60e51b8152600401808060200182810382526024815260200180611be26024913960400191505060405180910390fd5b6001600160a01b03821661184c5760405162461bcd60e51b8152600401808060200182810382526022815260200180611b0c6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166118f35760405162461bcd60e51b8152600401808060200182810382526025815260200180611bbd6025913960400191505060405180910390fd5b6001600160a01b0382166119385760405162461bcd60e51b8152600401808060200182810382526023815260200180611ac36023913960400191505060405180910390fd5b6119438383836109ee565b61198681604051806060016040528060268152602001611b2e602691396001600160a01b038616600090815260208190526040902054919063ffffffff611a1516565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546119bb908263ffffffff61160816565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115611aa45760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611a69578181015183820152602001611a51565b50505050905090810190601f168015611a965780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6005805460ff191660ff9290921691909117905556fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657245524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a26469706673582212202e7540ebe1e4b0936bdbeaac3bebb9927f76d8cde34ee31cc121d10e9b65266664736f6c634300060a0033",
  "immutableReferences": {},
  "sourceMap": "156:488:23:-:0;;;4465:1:5;4441:25;;4619:1;4594:26;;317:145:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;317:145:23;;;;;;;;2039:141:30;;;;;;;;;;-1:-1:-1;;;2039:141:30;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2039:141:30;;;;;;;2111:12;;317:145:23;;;;;;;;2039:141:30;2111:12;;;:::i;:::-;-1:-1:-1;2133:16:30;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2159:9:30;:14;;-1:-1:-1;;2159:14:30;2171:2;2159:14;;;-1:-1:-1;2159:9:30;911:12:26;-1:-1:-1;;;;;911:10:26;:12;:::i;:::-;933:6;:18;;-1:-1:-1;;;;;;933:18:26;;-1:-1:-1;;;;;933:18:26;;;;;;;;;;;;966:43;;933:18;;-1:-1:-1;933:18:26;-1:-1:-1;;966:43:26;;-1:-1:-1;;966:43:26;-1:-1:-1;4995:11:5::1;:28:::0;;-1:-1:-1;;;;;;4995:28:5::1;-1:-1:-1::0;;;;;4995:28:5;::::1;;::::0;;5089:18:::1;5104:2;5089:14;:18::i;:::-;5329:51;5335:12:::0;5349:30;-1:-1:-1;;;;;5329:5:5::1;:51:::0;:::i:1;:::-;-1:-1:-1::0;;5464:16:5::1;:24:::0;;-1:-1:-1;;5498:22:5;;;-1:-1:-1;;5632:9:5::1;5598:31;:43:::0;156:488:23;;616:104:25;703:10;616:104;;:::o;10048:88:30:-;10108:9;:21;;-1:-1:-1;;10108:21:30;;;;;;;;;;;;10048:88::o;7861:370::-;-1:-1:-1;;;;;7944:21:30;;7936:65;;;;;-1:-1:-1;;;7936:65:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;8012:49;8041:1;8045:7;8054:6;-1:-1:-1;;;;;8012:20:30;:49;:::i;:::-;8087:24;8104:6;8087:12;;:16;;;;;;:24;;;;:::i;:::-;8072:12;:39;-1:-1:-1;;;;;8142:18:30;;:9;:18;;;;;;;;;;;;:30;;8165:6;;8142:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;8121:18:30;;:9;:18;;;;;;;;;;;:51;;;;8187:37;;;;;;;8121:18;;:9;;8187:37;;;;;;;;;;7861:370;;:::o;10723:92::-;;;;:::o;900:176:29:-;958:7;989:5;;;1012:6;;;;1004:46;;;;;-1:-1:-1;;;1004:46:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;1068:1;900:176;-1:-1:-1;;;900:176:29:o;156:488:23:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;156:488:23;;;-1:-1:-1;156:488:23;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "156:488:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7817:16:5;:14;:16::i;:::-;7843:17;:15;:17::i;:::-;7874:14;;;;;;;7870:28;;;7890:8;;;7870:28;7913:16;;;;7908:31;;7931:8;;;7908:31;6425:24:::1;6438:10;6425:12;:24::i;:::-;156:488:23::0;;;;;9114:271:5;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2245:81:30;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4281:166;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4281:166:30;;;;;;;;:::i;11216:101:5:-;;;;;;;;;;;;;:::i;786:207:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;786:207:4;-1:-1:-1;;;;;786:207:4;;:::i;3288:98:30:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8843:187:5;;;;;;;;;;;;;:::i;4907:317:30:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4907:317:30;;;;;;;;;;;;;;;;;:::i;9781:155:5:-;;;;;;;;;;;;;:::i;517:166:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;517:166:2;-1:-1:-1;;;;;517:166:2;;:::i;3147:81:30:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3746:43:5;;;;;;;;;;;;;:::i;14760:132::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;14760:132:5;;;;;;;;:::i;3964:45::-;;;;;;;;;;;;;:::i;4594:26::-;;;;;;;;;;;;;:::i;10604:99::-;;;;;;;;;;;;;:::i;9547:152::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9547:152:5;;:::i;3444:117:30:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3444:117:30;-1:-1:-1;;;;;3444:117:30;;:::i;1715:145:26:-;;;;;;;;;;;;;:::i;10331:150:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10331:150:5;;:::i;13738:220::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13738:220:5;;;;:::i;8287:117::-;;;;;;;;;;;;;:::i;1092:77:26:-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1092:77:26;;;;;;;;;;;;;;4441:25:5;;;;;;;;;;;;;:::i;2439:85:30:-;;;;;;;;;;;;;:::i;13014:159:5:-;;;;;;;;;;;;;:::i;14169:219::-;;;;;;;;;;;;;:::i;562:79:23:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;562:79:23;;:::i;3764:172:30:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3764:172:30;;;;;;;;:::i;532:127:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;532:127:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;532:127:4;;-1:-1:-1;532:127:4;-1:-1:-1;532:127:4;:::i;8573:185:5:-;;;;;;;;;;;;;:::i;3994:149:30:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3994:149:30;;;;;;;;;;:::i;10950:152:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10950:152:5;;:::i;8090:114::-;;;;;;;;;;;;;:::i;2009:240:26:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2009:240:26;-1:-1:-1;;;;;2009:240:26;;:::i;8573:185:5:-;8620:18;:16;:18::i;:::-;8616:136;;;8654:16;:23;;-1:-1:-1;;8654:23:5;8673:4;8654:23;;;:16;8691:9;:13;8723:18;;;8737:3;8723:18;;;;;;;;;;;;;8616:136;8573:185::o;8843:187::-;8891:19;:17;:19::i;:::-;8887:137;;;8926:14;:21;;-1:-1:-1;;8926:21:5;;;;;;8961:10;:14;8994:19;;;9009:3;8994:19;;;;;;;;;;;;;8843:187::o;11582:1352::-;7817:16;:14;:16::i;:::-;7843:17;:15;:17::i;:::-;7874:14;;;;;;;7870:28;;;7890:8;;;7870:28;7913:16;;;;7908:31;;7931:8;;;7908:31;11666:9:::1;11662:53;;11696:8;::::0;::::1;11662:53;11725:11;11739:32;:9;4005:4;11739:32;:13;:32;:::i;:::-;11725:46;;11847:22;11872:25;11890:6;11872:13;:11;:13::i;:::-;:17:::0;:25:::1;:17;:25;:::i;:::-;11847:50;;11960:31;;3901:4;11938:53;11995:8;11937:66;11920:14;:83;11916:234;;;12131:8;::::0;::::1;11916:234;12514:24;12520:9;12531:6;12514:5;:24::i;:::-;12595:40;::::0;;12609:3:::1;12595:40:::0;;12614:9:::1;12595:40;::::0;::::1;::::0;-1:-1:-1;;;;;12595:40:5;::::1;::::0;;;;;;::::1;::::0;;;;;;;::::1;12866:11;::::0;:27:::1;::::0;-1:-1:-1;;;;;12866:11:5;;::::1;::::0;12883:9:::1;12866:27:::0;::::1;;;::::0;:11:::1;:27:::0;:11;:27;12883:9;12866:11;:27;::::1;;;;;;12861:67;;12909:8;::::0;::::1;12861:67;7949:1;;11582:1352:::0;:::o;9114:271::-;9294:16;;9164:4;;9294:16;;;:38;;;9314:18;:16;:18::i;:::-;9293:84;;;;-1:-1:-1;9339:14:5;;;;;;;;:37;;;9357:19;:17;:19::i;:::-;9337:40;9293:84;9285:93;;9114:271;:::o;2245:81:30:-;2314:5;2307:12;;;;;;;;-1:-1:-1;;2307:12:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2282:13;;2307:12;;2314:5;;2307:12;;2314:5;2307:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2245:81;:::o;4281:166::-;4364:4;4380:39;4389:12;:10;:12::i;:::-;4403:7;4412:6;4380:8;:39::i;:::-;-1:-1:-1;4436:4:30;4281:166;;;;;:::o;11216:101:5:-;1306:12:26;:10;:12::i;:::-;1296:6;;;;;-1:-1:-1;;;;;1296:6:26;;;:22;;;1288:67;;;;;-1:-1:-1;;;1288:67:26;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1288:67:26;;;;;;;;;;;;;;;7120:17:5::1;:15;:17::i;:::-;7151:14;::::0;::::1;::::0;::::1;;;7147:28;;;7167:8;::::0;::::1;7147:28;11309:1:::2;11296:10;:14:::0;11216:101::o;786:207:4:-;1306:12:26;:10;:12::i;:::-;1296:6;;;;;-1:-1:-1;;;;;1296:6:26;;;:22;;;1288:67;;;;;-1:-1:-1;;;1288:67:26;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1288:67:26;;;;;;;;;;;;;;;912:34:4::1;::::0;;-1:-1:-1;;;912:34:4;;940:4:::1;912:34;::::0;::::1;::::0;;;878:9;;852:16:::1;::::0;-1:-1:-1;;;;;912:19:4;::::1;::::0;::::1;::::0;:34;;;;;::::1;::::0;;;;;;;;:19;:34;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;912:34:4;;-1:-1:-1;;;;;;952:18:4;::::1;;971:7;:5;:7::i;:::-;980;952:36;;;;;;;;;;;;;-1:-1:-1::0;;;;;952:36:4::1;-1:-1:-1::0;;;;;952:36:4::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;;;;786:207:4:o;3288:98:30:-;3367:12;;3288:98;:::o;4907:317::-;5013:4;5029:36;5039:6;5047:9;5058:6;5029:9;:36::i;:::-;5075:121;5084:6;5092:12;:10;:12::i;:::-;5106:89;5144:6;5106:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5106:19:30;;;;;;:11;:19;;;;;;5126:12;:10;:12::i;:::-;-1:-1:-1;;;;;5106:33:30;;;;;;;;;;;;-1:-1:-1;5106:33:30;;;:89;;:37;:89;:::i;:::-;5075:8;:121::i;:::-;-1:-1:-1;5213:4:30;4907:317;;;;;:::o;9781:155:5:-;1306:12:26;:10;:12::i;:::-;1296:6;;;;;-1:-1:-1;;;;;1296:6:26;;;:22;;;1288:67;;;;;-1:-1:-1;;;1288:67:26;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1288:67:26;;;;;;;;;;;;;;;7564:16:5::1;:14;:16::i;:::-;7594;::::0;::::1;;7590:30;;;7612:8;::::0;::::1;7590:30;9850:16:::2;:23:::0;;-1:-1:-1;;9850:23:5::2;9869:4;9850:23;::::0;;:16:::2;9883:9;:13:::0;9911:18:::2;::::0;;9925:3:::2;9911:18:::0;;;;::::2;::::0;;;;::::2;::::0;;::::2;9781:155::o:0;517:166:2:-;1306:12:26;:10;:12::i;:::-;1296:6;;;;;-1:-1:-1;;;;;1296:6:26;;;:22;;;1288:67;;;;;-1:-1:-1;;;1288:67:26;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1288:67:26;;;;;;;;;;;;;;;620:12:2;-1:-1:-1;;;;;639:30:2;::::1;;670:7;:5;:7::i;:::-;639:39;;;;;;;;;;;;;-1:-1:-1::0;;;;;639:39:2::1;-1:-1:-1::0;;;;;639:39:2::1;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1365:1:26;517:166:2::0;:::o;3147:81:30:-;3212:9;;;;3147:81;:::o;3746:43:5:-;;;;:::o;14760:132::-;14861:4;14877:8;;;3964:45;4005:4;3964:45;:::o;4594:26::-;;;;:::o;10604:99::-;1306:12:26;:10;:12::i;:::-;1296:6;;;;;-1:-1:-1;;;;;1296:6:26;;;:22;;;1288:67;;;;;-1:-1:-1;;;1288:67:26;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1288:67:26;;;;;;;;;;;;;;;7564:16:5::1;:14;:16::i;:::-;7594;::::0;::::1;;7590:30;;;7612:8;::::0;::::1;7590:30;10695:1:::2;10683:9;:13:::0;10604:99::o;9547:152::-;1306:12:26;:10;:12::i;:::-;1296:6;;;;;-1:-1:-1;;;;;1296:6:26;;;:22;;;1288:67;;;;;-1:-1:-1;;;1288:67:26;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1288:67:26;;;;;;;;;;;;;;;7564:16:5::1;:14;:16::i;:::-;7594;::::0;::::1;;7590:30;;;7612:8;::::0;::::1;7590:30;9639:31:::2;:53:::0;9547:152::o;3444:117:30:-;-1:-1:-1;;;;;3536:18:30;3510:7;3536:18;;;;;;;;;;;;3444:117::o;1715:145:26:-;1306:12;:10;:12::i;:::-;1296:6;;;;;-1:-1:-1;;;;;1296:6:26;;;:22;;;1288:67;;;;;-1:-1:-1;;;1288:67:26;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1288:67:26;;;;;;;;;;;;;;;1805:6:::1;::::0;1784:40:::1;::::0;1821:1:::1;::::0;1805:6:::1;::::0;::::1;-1:-1:-1::0;;;;;1805:6:26::1;::::0;1784:40:::1;::::0;1821:1;;1784:40:::1;1834:6;:19:::0;;-1:-1:-1;;;;;;1834:19:26::1;::::0;;1715:145::o;10331:150:5:-;1306:12:26;:10;:12::i;:::-;1296:6;;;;;-1:-1:-1;;;;;1296:6:26;;;:22;;;1288:67;;;;;-1:-1:-1;;;1288:67:26;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1288:67:26;;;;;;;;;;;;;;;7564:16:5::1;:14;:16::i;:::-;7594;::::0;::::1;;7590:30;;;7612:8;::::0;::::1;7590:30;10465:9:::2;10448:26;10442:3;:32;10430:9;:44:::0;10331:150::o;13738:220::-;1306:12:26;:10;:12::i;:::-;1296:6;;;;;-1:-1:-1;;;;;1296:6:26;;;:22;;;1288:67;;;;;-1:-1:-1;;;1288:67:26;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1288:67:26;;;;;;;;;;;;;;;7368:17:5::1;:15;:17::i;:::-;7400:14;::::0;::::1;::::0;::::1;;;7395:29;;7416:8;::::0;::::1;7395:29;13852:27:::2;13867:11;13852:14;:27::i;:::-;13925:26;::::0;;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;::::2;::::0;;::::2;13738:220:::0;:::o;8287:117::-;8337:4;8361:10;;8375:1;8361:15;;:35;;;;-1:-1:-1;;8386:10:5;;8380:3;:16;;8287:117::o;1092:77:26:-;1156:6;;;;;-1:-1:-1;;;;;1156:6:26;;1092:77::o;4441:25:5:-;;;;:::o;2439:85:30:-;2510:7;2503:14;;;;;;;;-1:-1:-1;;2503:14:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2478:13;;2503:14;;2510:7;;2503:14;;2510:7;2503:14;;;;;;;;;;;;;;;;;;;;;;;;13014:159:5;1306:12:26;:10;:12::i;:::-;1296:6;;;;;-1:-1:-1;;;;;1296:6:26;;;:22;;;1288:67;;;;;-1:-1:-1;;;1288:67:26;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1288:67:26;;;;;;;;;;;;;;;7817:16:5::1;:14;:16::i;:::-;7843:17;:15;:17::i;:::-;7874:14;::::0;::::1;::::0;::::1;;;7870:28;;;7890:8;::::0;::::1;7870:28;7913:16;::::0;::::1;;7908:31;;7931:8;::::0;::::1;7908:31;13087:14:::2;:21:::0;;-1:-1:-1;;13087:21:5::2;;;::::0;;;13118:10:::2;:14:::0;13147:19:::2;::::0;;13162:3:::2;13147:19:::0;;;;::::2;::::0;;;;::::2;::::0;;::::2;13014:159::o:0;14169:219::-;1306:12:26;:10;:12::i;:::-;1296:6;;;;;-1:-1:-1;;;;;1296:6:26;;;:22;;;1288:67;;;;;-1:-1:-1;;;1288:67:26;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1288:67:26;;;;;;;;;;;;;;;14343:7:5::1;:5;:7::i;:::-;-1:-1:-1::0;;;;;14327:30:5::1;:53;14358:21;14327:53;;;;;;;;;;;;;;;;;;;;;;;14320:61;;;562:79:23::0;609:25;615:10;627:6;609:5;:25::i;:::-;562:79;:::o;3764:172:30:-;3850:4;3866:42;3876:12;:10;:12::i;:::-;3890:9;3901:6;3866:9;:42::i;3994:149::-;-1:-1:-1;;;;;4109:18:30;;;4083:7;4109:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3994:149::o;10950:152:5:-;1306:12:26;:10;:12::i;:::-;1296:6;;;;;-1:-1:-1;;;;;1296:6:26;;;:22;;;1288:67;;;;;-1:-1:-1;;;1288:67:26;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1288:67:26;;;;;;;;;;;;;;;7120:17:5::1;:15;:17::i;:::-;7151:14;::::0;::::1;::::0;::::1;;;7147:28;;;7167:8;::::0;::::1;7147:28;11086:9:::2;11069:26;11063:3;:32;11050:10;:45:::0;10950:152::o;8090:114::-;8139:4;8163:9;;8176:1;8163:14;;:33;;;;-1:-1:-1;;8187:9:5;;8181:3;:15;;8090:114::o;2009:240:26:-;1306:12;:10;:12::i;:::-;1296:6;;;;;-1:-1:-1;;;;;1296:6:26;;;:22;;;1288:67;;;;;-1:-1:-1;;;1288:67:26;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1288:67:26;;;;;;;;;;;;;;;-1:-1:-1;;;;;2097:22:26;::::1;2089:73;;;;-1:-1:-1::0;;;2089:73:26::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2198:6;::::0;2177:38:::1;::::0;-1:-1:-1;;;;;2177:38:26;;::::1;::::0;2198:6:::1;::::0;::::1;;::::0;2177:38:::1;::::0;;;::::1;2225:6;:17:::0;;-1:-1:-1;;;;;2225:17:26;;::::1;;;-1:-1:-1::0;;;;;;2225:17:26;;::::1;::::0;;;::::1;::::0;;2009:240::o;900:176:29:-;958:7;989:5;;;1012:6;;;;1004:46;;;;;-1:-1:-1;;;1004:46:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;1068:1;900:176;-1:-1:-1;;;900:176:29:o;2206:459::-;2264:7;2505:6;2501:45;;-1:-1:-1;2534:1:29;2527:8;;2501:45;2568:5;;;2572:1;2568;:5;:1;2591:5;;;;;:10;2583:56;;;;-1:-1:-1;;;2583:56:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7861:370:30;-1:-1:-1;;;;;7944:21:30;;7936:65;;;;;-1:-1:-1;;;7936:65:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;8012:49;8041:1;8045:7;8054:6;8012:20;:49::i;:::-;8087:12;;:24;;8104:6;8087:24;:16;:24;:::i;:::-;8072:12;:39;-1:-1:-1;;;;;8142:18:30;;:9;:18;;;;;;;;;;;:30;;8165:6;8142:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;8121:18:30;;:9;:18;;;;;;;;;;;:51;;;;8187:37;;;;;;;8121:18;;:9;;8187:37;;;;;;;;;;7861:370;;:::o;616:104:25:-;703:10;616:104;:::o;9385:340:30:-;-1:-1:-1;;;;;9486:19:30;;9478:68;;;;-1:-1:-1;;;9478:68:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9564:21:30;;9556:68;;;;-1:-1:-1;;;9556:68:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9635:18:30;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9686:32;;;;;;;;;;;;;;;;;9385:340;;;:::o;7061:530::-;-1:-1:-1;;;;;7166:20:30;;7158:70;;;;-1:-1:-1;;;7158:70:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7246:23:30;;7238:71;;;;-1:-1:-1;;;7238:71:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7320:47;7341:6;7349:9;7360:6;7320:20;:47::i;:::-;7398:71;7420:6;7398:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7398:17:30;;:9;:17;;;;;;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;7378:17:30;;;:9;:17;;;;;;;;;;;:91;;;;7502:20;;;;;;;:32;;7527:6;7502:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;7479:20:30;;;:9;:20;;;;;;;;;;;;:55;;;;7549:35;;;;;;;7479:20;;7549:35;;;;;;;;;;;;;7061:530;;;:::o;1772:187:29:-;1858:7;1893:12;1885:6;;;;1877:29;;;;-1:-1:-1;;;1877:29:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1928:5:29;;;1772:187::o;10048:88:30:-;10108:9;:21;;-1:-1:-1;;10108:21:30;;;;;;;;;;;;10048:88::o",
  "source": "pragma solidity ^0.6.10;\n\nimport \"./MRVToken.sol\";\n\n/**\n * MRVToken contract which adds unrestricted minting by anyone.\n *\n * Only useful on a testnet.\n */\ncontract TestnetMRVToken is MRVToken {\n\n    /**\n     * Make a new TestnetMRVToken.\n     * Passes through arguments to the base MRVToken constructor.\n     */\n    constructor(address payable sendProceedsTo, address sendTokensTo) MRVToken(sendProceedsTo, sendTokensTo) public {\n        // Nothing to do!\n    }\n\n   \n    /**\n     * Allow anyone to mint themselves any amount of tokens, for testing.\n     */\n    function mint(uint256 amount) public {\n        _mint(msg.sender, amount);\n    }\n\n}\n\n// This code is part of Macroverse and is licensed: UNLICENSED\n",
  "sourcePath": "/z/home/anovak/workspace/macroverse/contracts/TestnetMRVToken.sol",
  "ast": {
    "absolutePath": "/z/home/anovak/workspace/macroverse/contracts/TestnetMRVToken.sol",
    "exportedSymbols": {
      "TestnetMRVToken": [
        10653
      ]
    },
    "id": 10654,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10622,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:23"
      },
      {
        "absolutePath": "/z/home/anovak/workspace/macroverse/contracts/MRVToken.sol",
        "file": "./MRVToken.sol",
        "id": 10623,
        "nodeType": "ImportDirective",
        "scope": 10654,
        "sourceUnit": 737,
        "src": "26:24:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10625,
              "name": "MRVToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 736,
              "src": "184:8:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MRVToken_$736",
                "typeString": "contract MRVToken"
              }
            },
            "id": 10626,
            "nodeType": "InheritanceSpecifier",
            "src": "184:8:23"
          }
        ],
        "contractDependencies": [
          97,
          202,
          736,
          10694,
          10803,
          11575,
          11653
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 10624,
          "nodeType": "StructuredDocumentation",
          "src": "52:103:23",
          "text": " MRVToken contract which adds unrestricted minting by anyone.\n Only useful on a testnet."
        },
        "fullyImplemented": true,
        "id": 10653,
        "linearizedBaseContracts": [
          10653,
          736,
          97,
          202,
          10803,
          11575,
          11653,
          10694
        ],
        "name": "TestnetMRVToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10638,
              "nodeType": "Block",
              "src": "429:33:23",
              "statements": []
            },
            "documentation": {
              "id": 10627,
              "nodeType": "StructuredDocumentation",
              "src": "200:112:23",
              "text": " Make a new TestnetMRVToken.\n Passes through arguments to the base MRVToken constructor."
            },
            "id": 10639,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 10634,
                    "name": "sendProceedsTo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10629,
                    "src": "392:14:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 10635,
                    "name": "sendTokensTo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10631,
                    "src": "408:12:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 10636,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10633,
                  "name": "MRVToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 736,
                  "src": "383:8:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MRVToken_$736_$",
                    "typeString": "type(contract MRVToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "383:38:23"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 10632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10629,
                  "mutability": "mutable",
                  "name": "sendProceedsTo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10639,
                  "src": "329:30:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 10628,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "329:15:23",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10631,
                  "mutability": "mutable",
                  "name": "sendTokensTo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10639,
                  "src": "361:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "361:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "328:54:23"
            },
            "returnParameters": {
              "id": 10637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "429:0:23"
            },
            "scope": 10653,
            "src": "317:145:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10651,
              "nodeType": "Block",
              "src": "599:42:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10646,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "615:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "615:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10648,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10642,
                        "src": "627:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10645,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11451,
                      "src": "609:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "609:25:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10650,
                  "nodeType": "ExpressionStatement",
                  "src": "609:25:23"
                }
              ]
            },
            "documentation": {
              "id": 10640,
              "nodeType": "StructuredDocumentation",
              "src": "472:85:23",
              "text": " Allow anyone to mint themselves any amount of tokens, for testing."
            },
            "functionSelector": "a0712d68",
            "id": 10652,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 10643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10642,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10652,
                  "src": "576:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "576:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "575:16:23"
            },
            "returnParameters": {
              "id": 10644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "599:0:23"
            },
            "scope": 10653,
            "src": "562:79:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 10654,
        "src": "156:488:23"
      }
    ],
    "src": "0:709:23"
  },
  "legacyAST": {
    "absolutePath": "/z/home/anovak/workspace/macroverse/contracts/TestnetMRVToken.sol",
    "exportedSymbols": {
      "TestnetMRVToken": [
        10653
      ]
    },
    "id": 10654,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10622,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:23"
      },
      {
        "absolutePath": "/z/home/anovak/workspace/macroverse/contracts/MRVToken.sol",
        "file": "./MRVToken.sol",
        "id": 10623,
        "nodeType": "ImportDirective",
        "scope": 10654,
        "sourceUnit": 737,
        "src": "26:24:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10625,
              "name": "MRVToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 736,
              "src": "184:8:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MRVToken_$736",
                "typeString": "contract MRVToken"
              }
            },
            "id": 10626,
            "nodeType": "InheritanceSpecifier",
            "src": "184:8:23"
          }
        ],
        "contractDependencies": [
          97,
          202,
          736,
          10694,
          10803,
          11575,
          11653
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 10624,
          "nodeType": "StructuredDocumentation",
          "src": "52:103:23",
          "text": " MRVToken contract which adds unrestricted minting by anyone.\n Only useful on a testnet."
        },
        "fullyImplemented": true,
        "id": 10653,
        "linearizedBaseContracts": [
          10653,
          736,
          97,
          202,
          10803,
          11575,
          11653,
          10694
        ],
        "name": "TestnetMRVToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10638,
              "nodeType": "Block",
              "src": "429:33:23",
              "statements": []
            },
            "documentation": {
              "id": 10627,
              "nodeType": "StructuredDocumentation",
              "src": "200:112:23",
              "text": " Make a new TestnetMRVToken.\n Passes through arguments to the base MRVToken constructor."
            },
            "id": 10639,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 10634,
                    "name": "sendProceedsTo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10629,
                    "src": "392:14:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 10635,
                    "name": "sendTokensTo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10631,
                    "src": "408:12:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 10636,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10633,
                  "name": "MRVToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 736,
                  "src": "383:8:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MRVToken_$736_$",
                    "typeString": "type(contract MRVToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "383:38:23"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 10632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10629,
                  "mutability": "mutable",
                  "name": "sendProceedsTo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10639,
                  "src": "329:30:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 10628,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "329:15:23",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10631,
                  "mutability": "mutable",
                  "name": "sendTokensTo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10639,
                  "src": "361:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "361:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "328:54:23"
            },
            "returnParameters": {
              "id": 10637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "429:0:23"
            },
            "scope": 10653,
            "src": "317:145:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10651,
              "nodeType": "Block",
              "src": "599:42:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10646,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "615:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "615:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10648,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10642,
                        "src": "627:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10645,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11451,
                      "src": "609:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "609:25:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10650,
                  "nodeType": "ExpressionStatement",
                  "src": "609:25:23"
                }
              ]
            },
            "documentation": {
              "id": 10640,
              "nodeType": "StructuredDocumentation",
              "src": "472:85:23",
              "text": " Allow anyone to mint themselves any amount of tokens, for testing."
            },
            "functionSelector": "a0712d68",
            "id": 10652,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 10643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10642,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10652,
                  "src": "576:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "576:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "575:16:23"
            },
            "returnParameters": {
              "id": 10644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "599:0:23"
            },
            "scope": 10653,
            "src": "562:79:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 10654,
        "src": "156:488:23"
      }
    ],
    "src": "0:709:23"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.10+commit.00c0fcaf.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0xf82aa3c8d92a1044b702b0c9718bd99d353a4a85a215bdb4fe6c6a04b5f541e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "time",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "name": "CrowdsaleOpen",
          "type": "event"
        },
        "0xd240e127ddfc99c27bdd1c45b264d1954a1e2bdb17a4c37e81586fd141288261": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "time",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "indexed": false,
              "name": "etherAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "indexed": false,
              "name": "from",
              "type": "address",
              "internalType": "address"
            }
          ],
          "name": "TokenPurchase",
          "type": "event"
        },
        "0x99424d4740b41446c45fa894e3dda8489b8ef8df8a37f8035f83053ed26485c1": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "time",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "name": "CrowdsaleClose",
          "type": "event"
        },
        "0xed6150ec960548590c920ded6ef554ec9e451dd7b4c85f62fb3760812cd72cf1": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "newDecimals",
              "type": "uint8",
              "internalType": "uint8"
            }
          ],
          "name": "DecimalChange",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address",
              "internalType": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x87669FEC14088890F3C8939774C88833D6c4Ad3b",
      "transactionHash": "0x3a8a2a4c11e88413ad6796e92e69b3f582f96295818f7f89211d9396d8841c6f"
    }
  },
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-09-22T04:18:07.322Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "reclaimContract(address)": {
        "details": "Reclaim ownership of Ownable contracts",
        "params": {
          "contractAddr": "The address of the Ownable to be reclaimed."
        }
      },
      "reclaimToken(address)": {
        "details": "Reclaim all IERC20 compatible tokens",
        "params": {
          "tokenAddr": "address The address of the token contract"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "tokenFallback(address,uint256,bytes)": {
        "details": "Reject all ERC23 compatible tokens"
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "checkCloseTimer()": {
        "notice": "If the close timer has elapsed, stop the crowdsale."
      },
      "checkOpenTimer()": {
        "notice": "If the open timer has elapsed, start the crowdsale. Can be called by people, but also gets called when people try to contribute."
      },
      "clearCrowdsaleCloseTimer()": {
        "notice": "Let the owner stop the crowdsale close timer, as long as it has not yet expired."
      },
      "clearCrowdsaleOpenTimer()": {
        "notice": "Let the owner stop the crowdsale open timer, as long as the crowdsale has not yet opened."
      },
      "closeCrowdsale()": {
        "notice": "Allow the owner to end the crowdsale manually."
      },
      "closeTimerElapsed()": {
        "notice": "Determine if the crowdsale should close by timer."
      },
      "constructor": "Make a new TestnetMRVToken. Passes through arguments to the base MRVToken constructor.",
      "decreaseAllowance(address,uint256)": {
        "notice": "Block the decreaseAllowance method which is not in the mainned deployed contract, but which OZ added to their library after we deployed."
      },
      "increaseAllowance(address,uint256)": {
        "notice": "Block the increaseAllowance method which is not in the mainned deployed contract, but which OZ added to their library after we deployed."
      },
      "isCrowdsaleActive()": {
        "notice": "Determine if the crowdsale is currently happening."
      },
      "mint(uint256)": {
        "notice": "Allow anyone to mint themselves any amount of tokens, for testing."
      },
      "openCrowdsale()": {
        "notice": "Allow the owner to start the crowdsale manually."
      },
      "openTimerElapsed()": {
        "notice": "Determine if the crowdsale should open by timer."
      },
      "reclaimEther()": {
        "notice": "If Ether somehow manages to get into this contract, provide a way to get it out again. During normal crowdsale operation, ETH is immediately forwarded to the beneficiary."
      },
      "setCrowdsaleCloseTimerFor(uint256)": {
        "notice": "Let the owner start the timer for the crowdsale end. Counts from when the function is called, *not* from the start of the crowdsale. It is possible, but a bad idea, to set this before the open timer."
      },
      "setCrowdsaleOpenTimerFor(uint256)": {
        "notice": "Let the owner start the timer for the crowdsale start. Without further owner intervention, anyone will be able to open the crowdsale when the timer expires. Further calls will re-set the timer to count from the time the transaction is processed. The timer can be re-set after it has tripped, unless someone has already opened the crowdsale."
      },
      "setDecimals(uint8)": {
        "notice": "When the crowdsale is finished, the contract owner may adjust the decimal places for display purposes. This should work like a 10-to-1 split or reverse-split. The point of this mechanism is to keep the individual MRV tokens from getting inconveniently valuable or cheap. However, it relies on the contract owner taking the time to update the decimal place value. Note that this changes the decimals IMMEDIATELY with NO NOTICE to users."
      },
      "setMaxSupply(uint256)": {
        "notice": "Before the crowdsale opens, the max token count can be configured."
      }
    },
    "notice": "MRVToken contract which adds unrestricted minting by anyone. Only useful on a testnet."
  }
}