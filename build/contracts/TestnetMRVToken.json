{
  "contractName": "TestnetMRVToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "isCrowdsaleActive",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "clearCrowdsaleCloseTimer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "tokenAddr",
          "type": "address"
        }
      ],
      "name": "reclaimToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "checkCloseTimer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        },
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "openCrowdsale",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "contractAddr",
          "type": "address"
        }
      ],
      "name": "reclaimContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxCrowdsaleSupplyInWholeTokens",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wholeTokensPerEth",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closeTimer",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "clearCrowdsaleOpenTimer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newMaxInWholeTokens",
          "type": "uint256"
        }
      ],
      "name": "setMaxSupply",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "minutesFromNow",
          "type": "uint256"
        }
      ],
      "name": "setCrowdsaleOpenTimerFor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newDecimals",
          "type": "uint8"
        }
      ],
      "name": "setDecimals",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closeTimerElapsed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wholeTokensReserved",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openTimer",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "closeCrowdsale",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "reclaimEther",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "tokenFallback",
      "outputs": [],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "checkOpenTimer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "minutesFromNow",
          "type": "uint256"
        }
      ],
      "name": "setCrowdsaleCloseTimerFor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openTimerElapsed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "sendProceedsTo",
          "type": "address"
        },
        {
          "name": "sendTokensTo",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "CrowdsaleOpen",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "time",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "etherAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "from",
          "type": "address"
        }
      ],
      "name": "TokenPurchase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "CrowdsaleClose",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newDecimals",
          "type": "uint8"
        }
      ],
      "name": "DecimalChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"isCrowdsaleActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"clearCrowdsaleCloseTimer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddr\",\"type\":\"address\"}],\"name\":\"reclaimToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"checkCloseTimer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"openCrowdsale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"reclaimContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxCrowdsaleSupplyInWholeTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wholeTokensPerEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"closeTimer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"clearCrowdsaleOpenTimer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newMaxInWholeTokens\",\"type\":\"uint256\"}],\"name\":\"setMaxSupply\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"minutesFromNow\",\"type\":\"uint256\"}],\"name\":\"setCrowdsaleOpenTimerFor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newDecimals\",\"type\":\"uint8\"}],\"name\":\"setDecimals\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"closeTimerElapsed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wholeTokensReserved\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"openTimer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeCrowdsale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reclaimEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"checkOpenTimer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"minutesFromNow\",\"type\":\"uint256\"}],\"name\":\"setCrowdsaleCloseTimerFor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"openTimerElapsed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"sendProceedsTo\",\"type\":\"address\"},{\"name\":\"sendTokensTo\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"CrowdsaleOpen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"etherAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"CrowdsaleClose\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newDecimals\",\"type\":\"uint8\"}],\"name\":\"DecimalChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"reclaimContract(address)\":{\"details\":\"Reclaim ownership of Ownable contracts\",\"params\":{\"contractAddr\":\"The address of the Ownable to be reclaimed.\"}},\"reclaimToken(address)\":{\"details\":\"Reclaim all IERC20 compatible tokens\",\"params\":{\"tokenAddr\":\"address The address of the token contract\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"tokenFallback(address,uint256,bytes)\":{\"details\":\"Reject all ERC23 compatible tokens\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"checkCloseTimer()\":{\"notice\":\"If the close timer has elapsed, stop the crowdsale.\"},\"checkOpenTimer()\":{\"notice\":\"If the open timer has elapsed, start the crowdsale. Can be called by people, but also gets called when people try to contribute.\"},\"clearCrowdsaleCloseTimer()\":{\"notice\":\"Let the owner stop the crowdsale close timer, as long as it has not yet expired.\"},\"clearCrowdsaleOpenTimer()\":{\"notice\":\"Let the owner stop the crowdsale open timer, as long as the crowdsale has not yet opened.\"},\"closeCrowdsale()\":{\"notice\":\"Allow the owner to end the crowdsale manually.\"},\"closeTimerElapsed()\":{\"notice\":\"Determine if the crowdsale should close by timer.\"},\"constructor\":\"Make a new TestnetMRVToken. Passes through arguments to the base MRVToken constructor.\",\"decreaseAllowance(address,uint256)\":{\"notice\":\"Block the decreaseAllowance method which is not in the mainned deployed contract, but which OZ added to their library after we deployed.\"},\"increaseAllowance(address,uint256)\":{\"notice\":\"Block the increaseAllowance method which is not in the mainned deployed contract, but which OZ added to their library after we deployed.\"},\"isCrowdsaleActive()\":{\"notice\":\"Determine if the crowdsale is currently happening.\"},\"mint(uint256)\":{\"notice\":\"Allow anyone to mint themselves any amount of tokens, for testing.\"},\"openCrowdsale()\":{\"notice\":\"Allow the owner to start the crowdsale manually.\"},\"openTimerElapsed()\":{\"notice\":\"Determine if the crowdsale should open by timer.\"},\"reclaimEther()\":{\"notice\":\"If Ether somehow manages to get into this contract, provide a way to get it out again. During normal crowdsale operation, ETH is immediately forwarded to the beneficiary.\"},\"setCrowdsaleCloseTimerFor(uint256)\":{\"notice\":\"Let the owner start the timer for the crowdsale end. Counts from when the function is called, *not* from the start of the crowdsale. It is possible, but a bad idea, to set this before the open timer.\"},\"setCrowdsaleOpenTimerFor(uint256)\":{\"notice\":\"Let the owner start the timer for the crowdsale start. Without further owner intervention, anyone will be able to open the crowdsale when the timer expires. Further calls will re-set the timer to count from the time the transaction is processed. The timer can be re-set after it has tripped, unless someone has already opened the crowdsale.\"},\"setDecimals(uint8)\":{\"notice\":\"When the crowdsale is finished, the contract owner may adjust the decimal places for display purposes. This should work like a 10-to-1 split or reverse-split. The point of this mechanism is to keep the individual MRV tokens from getting inconveniently valuable or cheap. However, it relies on the contract owner taking the time to update the decimal place value. Note that this changes the decimals IMMEDIATELY with NO NOTICE to users.\"},\"setMaxSupply(uint256)\":{\"notice\":\"Before the crowdsale opens, the max token count can be configured.\"}},\"notice\":\"MRVToken contract which adds unrestricted minting by anyone. * Only useful on a testnet.\"}},\"settings\":{\"compilationTarget\":{\"/Users/anovak/Documents/Workspace/macroverse/contracts/TestnetMRVToken.sol\":\"TestnetMRVToken\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/anovak/Documents/Workspace/macroverse/contracts/HasNoContracts.sol\":{\"keccak256\":\"0x78de034c0e6f5f332a7d9d2114c74762f1210e2e41996b7fb156491270a2afee\",\"urls\":[\"bzzr://2a31bb7d78455f8efa065120172a659e97e9878c201f266f17c5fa5ed8444662\"]},\"/Users/anovak/Documents/Workspace/macroverse/contracts/HasNoTokens.sol\":{\"keccak256\":\"0x0c2eee7d9dd43a89930012a933e3bbbec14e42742e9df2a311bb965d22d05924\",\"urls\":[\"bzzr://589e07a81127ddc2e64eca4752018dc5a6a3ac3cb5c18e3a64e431981ca36971\"]},\"/Users/anovak/Documents/Workspace/macroverse/contracts/MRVToken.sol\":{\"keccak256\":\"0xd9d2f72e148657f64220ae6aeba45850d0766e58c192b99fd6e317dafcd6483f\",\"urls\":[\"bzzr://74f8cb299f4ef6ac549742ef826edad873d17dd8f5a4d4bddd40288002d8e6b5\"]},\"/Users/anovak/Documents/Workspace/macroverse/contracts/TestnetMRVToken.sol\":{\"keccak256\":\"0xcd55bf869d5d512e297fc3076f4709b79d52e68c9d6c5d92ee7a671366ad838f\",\"urls\":[\"bzzr://0dce829cdbe159f55113371ac1cc35df36b9f293b3d967d4af185b08c46274f4\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xecd8ab29d9a5771c3964d0cd1788c4a5098a0081b20fb275da850a22b1c59806\",\"urls\":[\"bzzr://4950def18270142a78d503ef6b7b13bdb053f2f050cee50c883cd7cab2bb02d7\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x65a4078c03875c25413a068ce9cfdd7e68a90f8786612d1189c89341e6e3b802\",\"urls\":[\"bzzr://fefcc5ec4e313a66c9fd38375983b5973c528e7e19b6d37c2f1ac6745295e6e2\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzzr://cf2d583b8dce38d0617fdcd65f2fd9f126fe17b7f683b5a515ea9d2762d8b062\"]}},\"version\":1}",
  "bytecode": "0x6080604052600060075560006008553480156200001b57600080fd5b5060405160408062002e08833981018060405260408110156200003d57600080fd5b81019080805190602001909291908051906020019092919050505081816200006a620001ed60201b60201c565b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a381600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506012600360146101000a81548160ff021916908360ff160217905550620001a281670de0b6b3a764000061138802620001f560201b60201c565b6000600660006101000a81548160ff0219169083151502179055506000600660016101000a81548160ff0219169083151502179055506305f5e1006005819055505050505062000448565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000299576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b620002b581600254620003bf60201b62001f631790919060201c565b60028190555062000313816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620003bf60201b62001f631790919060201c565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000808284019050838110156200043e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6129b080620004586000396000f3fe6080604052600436106102255760003560e01c806379d220ae116101235780639f727c27116100ab578063dd3260fc1161006f578063dd3260fc14610b50578063dd62ed3e14610b67578063e330a73714610bec578063ea66363114610c27578063f2fde38b14610c5657610225565b80639f727c2714610968578063a0712d681461097f578063a457c2d7146109ba578063a9059cbb14610a2d578063c0ee0b8a14610aa057610225565b80638da5cb5b116100f25780638da5cb5b146108105780638f32d59b1461086757806392f351f91461089657806395d89b41146108c1578063983c0a011461095157610225565b806379d220ae1461073d5780637a1395aa1461077857806380f4531f146107b65780638490d598146107e557610225565b80632aed7f3f116101b15780635da24f90116101755780635da24f90146106445780636d6e27101461066f5780636f8b44b01461068657806370a08231146106c1578063715018a61461072657610225565b80632aed7f3f146104f9578063313ce5671461054a578063346fc0dd1461057b57806339509351146105a65780634e15dfe91461061957610225565b806317ffc320116101f857806317ffc320146103bc57806318160ddd1461040d5780631f4425f31461043857806323b872dd1461044f57806328ef6f40146104e257610225565b80630118e6861461027357806306fdde03146102a2578063095ea7b3146103325780630d051c52146103a5575b61022d610ca7565b610235610d11565b600660019054906101000a900460ff161561024f57600080fd5b600660009054906101000a900460ff1661026857600080fd5b61027133610d7b565b005b34801561027f57600080fd5b50610288610f02565b604051808215151515815260200191505060405180910390f35b3480156102ae57600080fd5b506102b7610f50565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102f75780820151818401526020810190506102dc565b50505050905090810190601f1680156103245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561033e57600080fd5b5061038b6004803603604081101561035557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f89565b604051808215151515815260200191505060405180910390f35b3480156103b157600080fd5b506103ba610fa7565b005b3480156103c857600080fd5b5061040b600480360360208110156103df57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061104d565b005b34801561041957600080fd5b50610422611257565b6040518082815260200191505060405180910390f35b34801561044457600080fd5b5061044d610d11565b005b34801561045b57600080fd5b506104c86004803603606081101561047257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611261565b604051808215151515815260200191505060405180910390f35b3480156104ee57600080fd5b506104f761133a565b005b34801561050557600080fd5b506105486004803603602081101561051c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611432565b005b34801561055657600080fd5b5061055f611553565b604051808260ff1660ff16815260200191505060405180910390f35b34801561058757600080fd5b50610590611566565b6040518082815260200191505060405180910390f35b3480156105b257600080fd5b506105ff600480360360408110156105c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061156c565b604051808215151515815260200191505060405180910390f35b34801561062557600080fd5b5061062e611573565b6040518082815260200191505060405180910390f35b34801561065057600080fd5b50610659611579565b6040518082815260200191505060405180910390f35b34801561067b57600080fd5b5061068461157f565b005b34801561069257600080fd5b506106bf600480360360208110156106a957600080fd5b8101908080359060200190929190505050611625565b005b3480156106cd57600080fd5b50610710600480360360208110156106e457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116cb565b6040518082815260200191505060405180910390f35b34801561073257600080fd5b5061073b611713565b005b34801561074957600080fd5b506107766004803603602081101561076057600080fd5b810190808035906020019092919050505061184e565b005b34801561078457600080fd5b506107b46004803603602081101561079b57600080fd5b81019080803560ff1690602001909291905050506118f9565b005b3480156107c257600080fd5b506107cb6119fe565b604051808215151515815260200191505060405180910390f35b3480156107f157600080fd5b506107fa611a18565b6040518082815260200191505060405180910390f35b34801561081c57600080fd5b50610825611a1e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561087357600080fd5b5061087c611a48565b604051808215151515815260200191505060405180910390f35b3480156108a257600080fd5b506108ab611aa7565b6040518082815260200191505060405180910390f35b3480156108cd57600080fd5b506108d6611aad565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156109165780820151818401526020810190506108fb565b50505050905090810190601f1680156109435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561095d57600080fd5b50610966611ae6565b005b34801561097457600080fd5b5061097d611bff565b005b34801561098b57600080fd5b506109b8600480360360208110156109a257600080fd5b8101908080359060200190929190505050611cd4565b005b3480156109c657600080fd5b50610a13600480360360408110156109dd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ce1565b604051808215151515815260200191505060405180910390f35b348015610a3957600080fd5b50610a8660048036036040811015610a5057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ce8565b604051808215151515815260200191505060405180910390f35b348015610aac57600080fd5b50610b4e60048036036060811015610ac357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610b0a57600080fd5b820183602082011115610b1c57600080fd5b80359060200191846001830284011164010000000083111715610b3e57600080fd5b9091929391929390505050611d06565b005b348015610b5c57600080fd5b50610b65610ca7565b005b348015610b7357600080fd5b50610bd660048036036040811015610b8a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d0b565b6040518082815260200191505060405180910390f35b348015610bf857600080fd5b50610c2560048036036020811015610c0f57600080fd5b8101908080359060200190929190505050611d92565b005b348015610c3357600080fd5b50610c3c611e3d565b604051808215151515815260200191505060405180910390f35b348015610c6257600080fd5b50610ca560048036036020811015610c7957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e57565b005b610caf611e3d565b15610d0f576001600660006101000a81548160ff02191690831515021790555060006007819055507ff82aa3c8d92a1044b702b0c9718bd99d353a4a85a215bdb4fe6c6a04b5f541e0426040518082815260200191505060405180910390a15b565b610d196119fe565b15610d79576001600660016101000a81548160ff02191690831515021790555060006008819055507f99424d4740b41446c45fa894e3dda8489b8ef8df8a37f8035f83053ed26485c1426040518082815260200191505060405180910390a15b565b610d83610ca7565b610d8b610d11565b600660019054906101000a900460ff1615610da557600080fd5b600660009054906101000a900460ff16610dbe57600080fd5b6000341415610dcc57600080fd5b6000610de361138834611edd90919063ffffffff16565b90506000610e0182610df3611257565b611f6390919063ffffffff16565b9050670de0b6b3a76400006005546113880102811115610e2057600080fd5b610e2a8383611feb565b7fd240e127ddfc99c27bdd1c45b264d1954a1e2bdb17a4c37e81586fd141288261423485604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a1600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050610efd57600080fd5b505050565b6000600660009054906101000a900460ff1680610f235750610f22611e3d565b5b8015610f4b5750600660019054906101000a900460ff1680610f495750610f486119fe565b5b155b905090565b6040518060400160405280601081526020017f4d6163726f766572736520546f6b656e0000000000000000000000000000000081525081565b6000610f9d610f966121a6565b84846121ae565b6001905092915050565b610faf611a48565b611021576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611029610d11565b600660019054906101000a900460ff161561104357600080fd5b6000600881905550565b611055611a48565b6110c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600081905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561114b57600080fd5b505afa15801561115f573d6000803e3d6000fd5b505050506040513d602081101561117557600080fd5b810190808051906020019092919050505090508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6111ac611a1e565b836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561121657600080fd5b505af115801561122a573d6000803e3d6000fd5b505050506040513d602081101561124057600080fd5b810190808051906020019092919050505050505050565b6000600254905090565b600061126e8484846123a5565b61132f8461127a6121a6565b61132a8560405180606001604052806028815260200161291460289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006112e06121a6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461265b9092919063ffffffff16565b6121ae565b600190509392505050565b611342611a48565b6113b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6113bc610ca7565b600660009054906101000a900460ff16156113d657600080fd5b6001600660006101000a81548160ff02191690831515021790555060006007819055507ff82aa3c8d92a1044b702b0c9718bd99d353a4a85a215bdb4fe6c6a04b5f541e0426040518082815260200191505060405180910390a1565b61143a611a48565b6114ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008190508073ffffffffffffffffffffffffffffffffffffffff1663f2fde38b6114d5611a1e565b6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561153757600080fd5b505af115801561154b573d6000803e3d6000fd5b505050505050565b600360149054906101000a900460ff1681565b60055481565b6000806000fd5b61138881565b60085481565b611587611a48565b6115f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611601610ca7565b600660009054906101000a900460ff161561161b57600080fd5b6000600781905550565b61162d611a48565b61169f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6116a7610ca7565b600660009054906101000a900460ff16156116c157600080fd5b8060058190555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61171b611a48565b61178d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b611856611a48565b6118c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6118d0610ca7565b600660009054906101000a900460ff16156118ea57600080fd5b603c8102420160078190555050565b611901611a48565b611973576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61197b610d11565b600660019054906101000a900460ff1661199457600080fd5b80600360146101000a81548160ff021916908360ff1602179055507fed6150ec960548590c920ded6ef554ec9e451dd7b4c85f62fb3760812cd72cf1600360149054906101000a900460ff16604051808260ff1660ff16815260200191505060405180910390a150565b60008060085414158015611a13575060085442115b905090565b61138881565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611a8b6121a6565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b60075481565b6040518060400160405280600381526020017f4d5256000000000000000000000000000000000000000000000000000000000081525081565b611aee611a48565b611b60576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611b68610ca7565b611b70610d11565b600660019054906101000a900460ff1615611b8a57600080fd5b600660009054906101000a900460ff16611ba357600080fd5b6001600660016101000a81548160ff02191690831515021790555060006008819055507f99424d4740b41446c45fa894e3dda8489b8ef8df8a37f8035f83053ed26485c1426040518082815260200191505060405180910390a1565b611c07611a48565b611c79576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611c81611a1e565b73ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050611cd257fe5b565b611cde3382611feb565b50565b6000806000fd5b6000611cfc611cf56121a6565b84846123a5565b6001905092915050565b600080fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b611d9a611a48565b611e0c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611e14610d11565b600660019054906101000a900460ff1615611e2e57600080fd5b603c8102420160088190555050565b60008060075414158015611e52575060075442115b905090565b611e5f611a48565b611ed1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611eda8161271b565b50565b600080831415611ef05760009050611f5d565b6000828402905082848281611f0157fe5b0414611f58576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806128f36021913960400191505060405180910390fd5b809150505b92915050565b600080828401905083811015611fe1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561208e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6120a381600254611f6390919063ffffffff16565b6002819055506120fa816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f6390919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612234576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806129616024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156122ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806128ab6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561242b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061293c6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156124b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806128626023913960400191505060405180910390fd5b61251c816040518060600160405280602681526020016128cd602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461265b9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506125af816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f6390919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290612708576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156126cd5780820151818401526020810190506126b2565b50505050905090810190601f1680156126fa5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156127a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806128856026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a165627a7a723058208cd1657977afe294936e9282aa3896e62879ad9bf74d1faac6593648b7cb27780029",
  "deployedBytecode": "0x6080604052600436106102255760003560e01c806379d220ae116101235780639f727c27116100ab578063dd3260fc1161006f578063dd3260fc14610b50578063dd62ed3e14610b67578063e330a73714610bec578063ea66363114610c27578063f2fde38b14610c5657610225565b80639f727c2714610968578063a0712d681461097f578063a457c2d7146109ba578063a9059cbb14610a2d578063c0ee0b8a14610aa057610225565b80638da5cb5b116100f25780638da5cb5b146108105780638f32d59b1461086757806392f351f91461089657806395d89b41146108c1578063983c0a011461095157610225565b806379d220ae1461073d5780637a1395aa1461077857806380f4531f146107b65780638490d598146107e557610225565b80632aed7f3f116101b15780635da24f90116101755780635da24f90146106445780636d6e27101461066f5780636f8b44b01461068657806370a08231146106c1578063715018a61461072657610225565b80632aed7f3f146104f9578063313ce5671461054a578063346fc0dd1461057b57806339509351146105a65780634e15dfe91461061957610225565b806317ffc320116101f857806317ffc320146103bc57806318160ddd1461040d5780631f4425f31461043857806323b872dd1461044f57806328ef6f40146104e257610225565b80630118e6861461027357806306fdde03146102a2578063095ea7b3146103325780630d051c52146103a5575b61022d610ca7565b610235610d11565b600660019054906101000a900460ff161561024f57600080fd5b600660009054906101000a900460ff1661026857600080fd5b61027133610d7b565b005b34801561027f57600080fd5b50610288610f02565b604051808215151515815260200191505060405180910390f35b3480156102ae57600080fd5b506102b7610f50565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102f75780820151818401526020810190506102dc565b50505050905090810190601f1680156103245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561033e57600080fd5b5061038b6004803603604081101561035557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f89565b604051808215151515815260200191505060405180910390f35b3480156103b157600080fd5b506103ba610fa7565b005b3480156103c857600080fd5b5061040b600480360360208110156103df57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061104d565b005b34801561041957600080fd5b50610422611257565b6040518082815260200191505060405180910390f35b34801561044457600080fd5b5061044d610d11565b005b34801561045b57600080fd5b506104c86004803603606081101561047257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611261565b604051808215151515815260200191505060405180910390f35b3480156104ee57600080fd5b506104f761133a565b005b34801561050557600080fd5b506105486004803603602081101561051c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611432565b005b34801561055657600080fd5b5061055f611553565b604051808260ff1660ff16815260200191505060405180910390f35b34801561058757600080fd5b50610590611566565b6040518082815260200191505060405180910390f35b3480156105b257600080fd5b506105ff600480360360408110156105c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061156c565b604051808215151515815260200191505060405180910390f35b34801561062557600080fd5b5061062e611573565b6040518082815260200191505060405180910390f35b34801561065057600080fd5b50610659611579565b6040518082815260200191505060405180910390f35b34801561067b57600080fd5b5061068461157f565b005b34801561069257600080fd5b506106bf600480360360208110156106a957600080fd5b8101908080359060200190929190505050611625565b005b3480156106cd57600080fd5b50610710600480360360208110156106e457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116cb565b6040518082815260200191505060405180910390f35b34801561073257600080fd5b5061073b611713565b005b34801561074957600080fd5b506107766004803603602081101561076057600080fd5b810190808035906020019092919050505061184e565b005b34801561078457600080fd5b506107b46004803603602081101561079b57600080fd5b81019080803560ff1690602001909291905050506118f9565b005b3480156107c257600080fd5b506107cb6119fe565b604051808215151515815260200191505060405180910390f35b3480156107f157600080fd5b506107fa611a18565b6040518082815260200191505060405180910390f35b34801561081c57600080fd5b50610825611a1e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561087357600080fd5b5061087c611a48565b604051808215151515815260200191505060405180910390f35b3480156108a257600080fd5b506108ab611aa7565b6040518082815260200191505060405180910390f35b3480156108cd57600080fd5b506108d6611aad565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156109165780820151818401526020810190506108fb565b50505050905090810190601f1680156109435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561095d57600080fd5b50610966611ae6565b005b34801561097457600080fd5b5061097d611bff565b005b34801561098b57600080fd5b506109b8600480360360208110156109a257600080fd5b8101908080359060200190929190505050611cd4565b005b3480156109c657600080fd5b50610a13600480360360408110156109dd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ce1565b604051808215151515815260200191505060405180910390f35b348015610a3957600080fd5b50610a8660048036036040811015610a5057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ce8565b604051808215151515815260200191505060405180910390f35b348015610aac57600080fd5b50610b4e60048036036060811015610ac357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610b0a57600080fd5b820183602082011115610b1c57600080fd5b80359060200191846001830284011164010000000083111715610b3e57600080fd5b9091929391929390505050611d06565b005b348015610b5c57600080fd5b50610b65610ca7565b005b348015610b7357600080fd5b50610bd660048036036040811015610b8a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d0b565b6040518082815260200191505060405180910390f35b348015610bf857600080fd5b50610c2560048036036020811015610c0f57600080fd5b8101908080359060200190929190505050611d92565b005b348015610c3357600080fd5b50610c3c611e3d565b604051808215151515815260200191505060405180910390f35b348015610c6257600080fd5b50610ca560048036036020811015610c7957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e57565b005b610caf611e3d565b15610d0f576001600660006101000a81548160ff02191690831515021790555060006007819055507ff82aa3c8d92a1044b702b0c9718bd99d353a4a85a215bdb4fe6c6a04b5f541e0426040518082815260200191505060405180910390a15b565b610d196119fe565b15610d79576001600660016101000a81548160ff02191690831515021790555060006008819055507f99424d4740b41446c45fa894e3dda8489b8ef8df8a37f8035f83053ed26485c1426040518082815260200191505060405180910390a15b565b610d83610ca7565b610d8b610d11565b600660019054906101000a900460ff1615610da557600080fd5b600660009054906101000a900460ff16610dbe57600080fd5b6000341415610dcc57600080fd5b6000610de361138834611edd90919063ffffffff16565b90506000610e0182610df3611257565b611f6390919063ffffffff16565b9050670de0b6b3a76400006005546113880102811115610e2057600080fd5b610e2a8383611feb565b7fd240e127ddfc99c27bdd1c45b264d1954a1e2bdb17a4c37e81586fd141288261423485604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a1600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050610efd57600080fd5b505050565b6000600660009054906101000a900460ff1680610f235750610f22611e3d565b5b8015610f4b5750600660019054906101000a900460ff1680610f495750610f486119fe565b5b155b905090565b6040518060400160405280601081526020017f4d6163726f766572736520546f6b656e0000000000000000000000000000000081525081565b6000610f9d610f966121a6565b84846121ae565b6001905092915050565b610faf611a48565b611021576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611029610d11565b600660019054906101000a900460ff161561104357600080fd5b6000600881905550565b611055611a48565b6110c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600081905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561114b57600080fd5b505afa15801561115f573d6000803e3d6000fd5b505050506040513d602081101561117557600080fd5b810190808051906020019092919050505090508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6111ac611a1e565b836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561121657600080fd5b505af115801561122a573d6000803e3d6000fd5b505050506040513d602081101561124057600080fd5b810190808051906020019092919050505050505050565b6000600254905090565b600061126e8484846123a5565b61132f8461127a6121a6565b61132a8560405180606001604052806028815260200161291460289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006112e06121a6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461265b9092919063ffffffff16565b6121ae565b600190509392505050565b611342611a48565b6113b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6113bc610ca7565b600660009054906101000a900460ff16156113d657600080fd5b6001600660006101000a81548160ff02191690831515021790555060006007819055507ff82aa3c8d92a1044b702b0c9718bd99d353a4a85a215bdb4fe6c6a04b5f541e0426040518082815260200191505060405180910390a1565b61143a611a48565b6114ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008190508073ffffffffffffffffffffffffffffffffffffffff1663f2fde38b6114d5611a1e565b6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561153757600080fd5b505af115801561154b573d6000803e3d6000fd5b505050505050565b600360149054906101000a900460ff1681565b60055481565b6000806000fd5b61138881565b60085481565b611587611a48565b6115f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611601610ca7565b600660009054906101000a900460ff161561161b57600080fd5b6000600781905550565b61162d611a48565b61169f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6116a7610ca7565b600660009054906101000a900460ff16156116c157600080fd5b8060058190555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61171b611a48565b61178d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b611856611a48565b6118c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6118d0610ca7565b600660009054906101000a900460ff16156118ea57600080fd5b603c8102420160078190555050565b611901611a48565b611973576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61197b610d11565b600660019054906101000a900460ff1661199457600080fd5b80600360146101000a81548160ff021916908360ff1602179055507fed6150ec960548590c920ded6ef554ec9e451dd7b4c85f62fb3760812cd72cf1600360149054906101000a900460ff16604051808260ff1660ff16815260200191505060405180910390a150565b60008060085414158015611a13575060085442115b905090565b61138881565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611a8b6121a6565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b60075481565b6040518060400160405280600381526020017f4d5256000000000000000000000000000000000000000000000000000000000081525081565b611aee611a48565b611b60576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611b68610ca7565b611b70610d11565b600660019054906101000a900460ff1615611b8a57600080fd5b600660009054906101000a900460ff16611ba357600080fd5b6001600660016101000a81548160ff02191690831515021790555060006008819055507f99424d4740b41446c45fa894e3dda8489b8ef8df8a37f8035f83053ed26485c1426040518082815260200191505060405180910390a1565b611c07611a48565b611c79576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611c81611a1e565b73ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050611cd257fe5b565b611cde3382611feb565b50565b6000806000fd5b6000611cfc611cf56121a6565b84846123a5565b6001905092915050565b600080fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b611d9a611a48565b611e0c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611e14610d11565b600660019054906101000a900460ff1615611e2e57600080fd5b603c8102420160088190555050565b60008060075414158015611e52575060075442115b905090565b611e5f611a48565b611ed1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611eda8161271b565b50565b600080831415611ef05760009050611f5d565b6000828402905082848281611f0157fe5b0414611f58576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806128f36021913960400191505060405180910390fd5b809150505b92915050565b600080828401905083811015611fe1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561208e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6120a381600254611f6390919063ffffffff16565b6002819055506120fa816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f6390919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612234576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806129616024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156122ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806128ab6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561242b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061293c6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156124b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806128626023913960400191505060405180910390fd5b61251c816040518060600160405280602681526020016128cd602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461265b9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506125af816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f6390919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290612708576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156126cd5780820151818401526020810190506126b2565b50505050905090810190601f1680156126fa5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156127a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806128856026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a165627a7a723058208cd1657977afe294936e9282aa3896e62879ad9bf74d1faac6593648b7cb27780029",
  "sourceMap": "155:488:23:-;;;3725:1:5;3701:25;;3879:1;3854:26;;316:145:23;8:9:-1;5:2;;;30:1;27;20:12;5:2;316:145:23;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;316:145:23;;;;;;;;;;;;;;;;;;;;;;;;;391:14;407:12;707::30;:10;;;:12;;:::i;:::-;698:6;;:21;;;;;;;;;;;;;;;;;;767:6;;;;;;;;;;;734:40;;763:1;734:40;;;;;;;;;;;;4256:14:5;4242:11;;:28;;;;;;;;;;;;;;;;;;4347:2;4336:8;;:13;;;;;;;;;;;;;;;;;;4571:51;4577:12;4613:8;3161:4;4591:30;4571:5;;;:51;;:::i;:::-;4725:5;4706:16;;:24;;;;;;;;;;;;;;;;;;4757:5;4740:14;;:22;;;;;;;;;;;;;;;;;;4874:9;4840:31;:43;;;;4113:777;;316:145:23;;155:488;;788:96:25;833:15;867:10;860:17;;788:96;:::o;5962:302:31:-;6056:1;6037:21;;:7;:21;;;;6029:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6120:24;6137:6;6120:12;;:16;;;;;;:24;;;;:::i;:::-;6105:12;:39;;;;6175:30;6198:6;6175:9;:18;6185:7;6175:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;:::i;:::-;6154:9;:18;6164:7;6154:18;;;;;;;;;;;;;;;:51;;;;6241:7;6220:37;;6237:1;6220:37;;;6250:6;6220:37;;;;;;;;;;;;;;;;;;5962:302;;:::o;834:176:29:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;155:488:23:-;;;;;;;",
  "deployedSourceMap": "155:488:23:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7121:16:5;:14;:16::i;:::-;7147:17;:15;:17::i;:::-;7178:14;;;;;;;;;;;7174:28;;;7194:8;;;7174:28;7217:16;;;;;;;;;;;7212:31;;7235:8;;;7212:31;5689:24;5702:10;5689:12;:24::i;:::-;155:488:23;8438:271:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8438:271:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2422:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2422:48:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2422:48:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2500:149:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2500:149:31;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2500:149:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10560:101:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10560:101:5;;;:::i;:::-;;788:207:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;788:207:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;788:207:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;1559:89:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1559:89:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8167:187:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8167:187:5;;;:::i;:::-;;3107:300:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3107:300:31;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3107:300:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9125:155:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9125:155:5;;;:::i;:::-;;519:166:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;519:166:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;519:166:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;2794:21:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2794:21:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3006:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3006:43:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14105:123;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14105:123:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14105:123:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3224:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3224:45:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3854:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3854:26:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9948:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9948:99:5;;;:::i;:::-;;8891:152;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8891:152:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8891:152:5;;;;;;;;;;;;;;;;;:::i;:::-;;1706:108:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1706:108:31;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1706:108:31;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1642:137:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1642:137:30;;;:::i;:::-;;9675:150:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9675:150:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9675:150:5;;;;;;;;;;;;;;;;;:::i;:::-;;13122:181;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13122:181:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13122:181:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;7611:117;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7611:117:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3118:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3118:47:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;857:77:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;857:77:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1208:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1208:92:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3701:25:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3701:25:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2513:37;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2513:37:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2513:37:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12378:159;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12378:159:5;;;:::i;:::-;;13514:219;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13514:219:5;;;:::i;:::-;;561:79:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;561:79:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;561:79:23;;;;;;;;;;;;;;;;;:::i;:::-;;14401:123:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14401:123:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14401:123:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2017:155:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2017:155:31;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2017:155:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;534:127:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;534:127:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;534:127:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;534:127:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;534:127:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;534:127:4;;;;;;;;;;;;:::i;:::-;;7897:185:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7897:185:5;;;:::i;:::-;;2230:132:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2230:132:31;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2230:132:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10294:152:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10294:152:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10294:152:5;;;;;;;;;;;;;;;;;:::i;:::-;;7414:114;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7414:114:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1928:107:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1928:107:30;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1928:107:30;;;;;;;;;;;;;;;;;;;:::i;:::-;;7897:185:5;7944:18;:16;:18::i;:::-;7940:136;;;7997:4;7978:16;;:23;;;;;;;;;;;;;;;;;;8027:1;8015:9;:13;;;;8047:18;8061:3;8047:18;;;;;;;;;;;;;;;;;;7940:136;7897:185::o;8167:187::-;8215:19;:17;:19::i;:::-;8211:137;;;8267:4;8250:14;;:21;;;;;;;;;;;;;;;;;;8298:1;8285:10;:14;;;;8318:19;8333:3;8318:19;;;;;;;;;;;;;;;;;;8211:137;8167:187::o;10946:1352::-;7121:16;:14;:16::i;:::-;7147:17;:15;:17::i;:::-;7178:14;;;;;;;;;;;7174:28;;;7194:8;;;7174:28;7217:16;;;;;;;;;;;7212:31;;7235:8;;;7212:31;11043:1;11030:9;:14;11026:53;;;11060:8;;;11026:53;11089:11;11103:32;3265:4;11103:9;:13;;:32;;;;:::i;:::-;11089:46;;11211:22;11236:25;11254:6;11236:13;:11;:13::i;:::-;:17;;:25;;;;:::i;:::-;11211:50;;11359:8;11324:31;;3161:4;11302:53;11301:66;11284:14;:83;11280:234;;;11495:8;;;11280:234;11878:24;11884:9;11895:6;11878:5;:24::i;:::-;11959:40;11973:3;11978:9;11989;11959:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12230:11;;;;;;;;;;;:16;;:27;12247:9;12230:27;;;;;;;;;;;;;;;;;;;;;;;12225:67;;12273:8;;;12225:67;7253:1;;10946:1352;:::o;8438:271::-;8488:4;8618:16;;;;;;;;;;;:38;;;;8638:18;:16;:18::i;:::-;8618:38;8617:84;;;;;8663:14;;;;;;;;;;;:37;;;;8681:19;:17;:19::i;:::-;8663:37;8661:40;8617:84;8609:93;;8438:271;:::o;2422:48::-;;;;;;;;;;;;;;;;;;;:::o;2500:149:31:-;2566:4;2582:39;2591:12;:10;:12::i;:::-;2605:7;2614:6;2582:8;:39::i;:::-;2638:4;2631:11;;2500:149;;;;:::o;10560:101:5:-;1061:9:30;:7;:9::i;:::-;1053:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6424:17:5;:15;:17::i;:::-;6455:14;;;;;;;;;;;6451:28;;;6471:8;;;6451:28;10653:1;10640:10;:14;;;;10560:101::o;788:207:4:-;1061:9:30;:7;:9::i;:::-;1053:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;854:16:4;880:9;854:36;;896:15;914:9;:19;;;942:4;914:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;914:34:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;914:34:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;914:34:4;;;;;;;;;;;;;;;;896:52;;954:9;:18;;;973:7;:5;:7::i;:::-;982;954:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;954:36:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;954:36:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;954:36:4;;;;;;;;;;;;;;;;;1117:1:30;;788:207:4;:::o;1559:89:31:-;1603:7;1629:12;;1622:19;;1559:89;:::o;3107:300::-;3196:4;3212:36;3222:6;3230:9;3241:6;3212:9;:36::i;:::-;3258:121;3267:6;3275:12;:10;:12::i;:::-;3289:89;3327:6;3289:89;;;;;;;;;;;;;;;;;:11;:19;3301:6;3289:19;;;;;;;;;;;;;;;:33;3309:12;:10;:12::i;:::-;3289:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;3258:8;:121::i;:::-;3396:4;3389:11;;3107:300;;;;;:::o;9125:155:5:-;1061:9:30;:7;:9::i;:::-;1053:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6868:16:5;:14;:16::i;:::-;6898;;;;;;;;;;;6894:30;;;6916:8;;;6894:30;9213:4;9194:16;;:23;;;;;;;;;;;;;;;;;;9239:1;9227:9;:13;;;;9255:18;9269:3;9255:18;;;;;;;;;;;;;;;;;;9125:155::o;519:166:2:-;1061:9:30;:7;:9::i;:::-;1053:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;591:20:2;622:12;591:44;;641:12;:30;;;672:7;:5;:7::i;:::-;641:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;641:39:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;641:39:2;;;;1117:1:30;519:166:2;:::o;2794:21:5:-;;;;;;;;;;;;;:::o;3006:43::-;;;;:::o;14105:123::-;14197:4;14213:8;;;3224:45;3265:4;3224:45;:::o;3854:26::-;;;;:::o;9948:99::-;1061:9:30;:7;:9::i;:::-;1053:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6868:16:5;:14;:16::i;:::-;6898;;;;;;;;;;;6894:30;;;6916:8;;;6894:30;10039:1;10027:9;:13;;;;9948:99::o;8891:152::-;1061:9:30;:7;:9::i;:::-;1053:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6868:16:5;:14;:16::i;:::-;6898;;;;;;;;;;;6894:30;;;6916:8;;;6894:30;9017:19;8983:31;:53;;;;8891:152;:::o;1706:108:31:-;1763:7;1789:9;:18;1799:7;1789:18;;;;;;;;;;;;;;;;1782:25;;1706:108;;;:::o;1642:137:30:-;1061:9;:7;:9::i;:::-;1053:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1740:1;1703:40;;1724:6;;;;;;;;;;;1703:40;;;;;;;;;;;;1770:1;1753:6;;:19;;;;;;;;;;;;;;;;;;1642:137::o;9675:150:5:-;1061:9:30;:7;:9::i;:::-;1053:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6868:16:5;:14;:16::i;:::-;6898;;;;;;;;;;;6894:30;;;6916:8;;;6894:30;9809:9;9792:14;:26;9786:3;:32;9774:9;:44;;;;9675:150;:::o;13122:181::-;1061:9:30;:7;:9::i;:::-;1053:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6672:17:5;:15;:17::i;:::-;6704:14;;;;;;;;;;;6699:29;;6720:8;;;6699:29;13216:11;13205:8;;:22;;;;;;;;;;;;;;;;;;13273:23;13287:8;;;;;;;;;;;13273:23;;;;;;;;;;;;;;;;;;;;;;13122:181;:::o;7611:117::-;7661:4;7699:1;7685:10;;:15;;:35;;;;;7710:10;;7704:3;:16;7685:35;7677:44;;7611:117;:::o;3118:47::-;3161:4;3118:47;:::o;857:77:30:-;895:7;921:6;;;;;;;;;;;914:13;;857:77;:::o;1208:92::-;1248:4;1287:6;;;;;;;;;;;1271:22;;:12;:10;:12::i;:::-;:22;;;1264:29;;1208:92;:::o;3701:25:5:-;;;;:::o;2513:37::-;;;;;;;;;;;;;;;;;;;:::o;12378:159::-;1061:9:30;:7;:9::i;:::-;1053:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7121:16:5;:14;:16::i;:::-;7147:17;:15;:17::i;:::-;7178:14;;;;;;;;;;;7174:28;;;7194:8;;;7174:28;7217:16;;;;;;;;;;;7212:31;;7235:8;;;7212:31;12468:4;12451:14;;:21;;;;;;;;;;;;;;;;;;12495:1;12482:10;:14;;;;12511:19;12526:3;12511:19;;;;;;;;;;;;;;;;;;12378:159::o;13514:219::-;1061:9:30;:7;:9::i;:::-;1053:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13688:7:5;:5;:7::i;:::-;13672:30;;:53;13711:4;13703:21;;;13672:53;;;;;;;;;;;;;;;;;;;;;;;13665:61;;;;13514:219::o;561:79:23:-;608:25;614:10;626:6;608:5;:25::i;:::-;561:79;:::o;14401:123:5:-;14493:4;14509:8;;;2017:155:31;2086:4;2102:42;2112:12;:10;:12::i;:::-;2126:9;2137:6;2102:9;:42::i;:::-;2161:4;2154:11;;2017:155;;;;:::o;534:127:4:-;648:8;;;2230:132:31;2302:7;2328:11;:18;2340:5;2328:18;;;;;;;;;;;;;;;:27;2347:7;2328:27;;;;;;;;;;;;;;;;2321:34;;2230:132;;;;:::o;10294:152:5:-;1061:9:30;:7;:9::i;:::-;1053:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6424:17:5;:15;:17::i;:::-;6455:14;;;;;;;;;;;6451:28;;;6471:8;;;6451:28;10430:9;10413:14;:26;10407:3;:32;10394:10;:45;;;;10294:152;:::o;7414:114::-;7463:4;7500:1;7487:9;;:14;;:33;;;;;7511:9;;7505:3;:15;7487:33;7479:42;;7414:114;:::o;1928:107:30:-;1061:9;:7;:9::i;:::-;1053:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2000:28;2019:8;2000:18;:28::i;:::-;1928:107;:::o;2159:459:29:-;2217:7;2463:1;2458;:6;2454:45;;;2487:1;2480:8;;;;2454:45;2509:9;2525:1;2521;:5;2509:17;;2553:1;2548;2544;:5;;;;;;:10;2536:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:1;2603:8;;;2159:459;;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;5962:302:31:-;6056:1;6037:21;;:7;:21;;;;6029:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6120:24;6137:6;6120:12;;:16;;:24;;;;:::i;:::-;6105:12;:39;;;;6175:30;6198:6;6175:9;:18;6185:7;6175:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;6154:9;:18;6164:7;6154:18;;;;;;;;;;;;;;;:51;;;;6241:7;6220:37;;6237:1;6220:37;;;6250:6;6220:37;;;;;;;;;;;;;;;;;;5962:302;;:::o;788:96:25:-;833:15;867:10;860:17;;788:96;:::o;7351:332:31:-;7461:1;7444:19;;:5;:19;;;;7436:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7541:1;7522:21;;:7;:21;;;;7514:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7623:6;7593:11;:18;7605:5;7593:18;;;;;;;;;;;;;;;:27;7612:7;7593:27;;;;;;;;;;;;;;;:36;;;;7660:7;7644:32;;7653:5;7644:32;;;7669:6;7644:32;;;;;;;;;;;;;;;;;;7351:332;;;:::o;5228:464::-;5343:1;5325:20;;:6;:20;;;;5317:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5426:1;5405:23;;:9;:23;;;;5397:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5499;5521:6;5499:71;;;;;;;;;;;;;;;;;:9;:17;5509:6;5499:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;5479:9;:17;5489:6;5479:17;;;;;;;;;;;;;;;:91;;;;5603:32;5628:6;5603:9;:20;5613:9;5603:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5580:9;:20;5590:9;5580:20;;;;;;;;;;;;;;;:55;;;;5667:9;5650:35;;5659:6;5650:35;;;5678:6;5650:35;;;;;;;;;;;;;;;;;;5228:464;;;:::o;1732:187:29:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;2136:225:30:-;2229:1;2209:22;;:8;:22;;;;2201:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2318:8;2289:38;;2310:6;;;;;;;;;;;2289:38;;;;;;;;;;;;2346:8;2337:6;;:17;;;;;;;;;;;;;;;;;;2136:225;:::o",
  "source": "pragma solidity ^0.5.2;\n\nimport \"./MRVToken.sol\";\n\n/**\n * MRVToken contract which adds unrestricted minting by anyone.\n *\n * Only useful on a testnet.\n */\ncontract TestnetMRVToken is MRVToken {\n\n    /**\n     * Make a new TestnetMRVToken.\n     * Passes through arguments to the base MRVToken constructor.\n     */\n    constructor(address payable sendProceedsTo, address sendTokensTo) MRVToken(sendProceedsTo, sendTokensTo) public {\n        // Nothing to do!\n    }\n\n   \n    /**\n     * Allow anyone to mint themselves any amount of tokens, for testing.\n     */\n    function mint(uint256 amount) public {\n        _mint(msg.sender, amount);\n    }\n\n}\n",
  "sourcePath": "/Users/anovak/Documents/Workspace/macroverse/contracts/TestnetMRVToken.sol",
  "ast": {
    "absolutePath": "/Users/anovak/Documents/Workspace/macroverse/contracts/TestnetMRVToken.sol",
    "exportedSymbols": {
      "TestnetMRVToken": [
        10125
      ]
    },
    "id": 10126,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10097,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:23"
      },
      {
        "absolutePath": "/Users/anovak/Documents/Workspace/macroverse/contracts/MRVToken.sol",
        "file": "./MRVToken.sol",
        "id": 10098,
        "nodeType": "ImportDirective",
        "scope": 10126,
        "sourceUnit": 690,
        "src": "25:24:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10099,
              "name": "MRVToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 689,
              "src": "183:8:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MRVToken_$689",
                "typeString": "contract MRVToken"
              }
            },
            "id": 10100,
            "nodeType": "InheritanceSpecifier",
            "src": "183:8:23"
          }
        ],
        "contractDependencies": [
          180,
          689,
          89,
          10168,
          10580,
          10985,
          11054
        ],
        "contractKind": "contract",
        "documentation": "MRVToken contract which adds unrestricted minting by anyone.\n * Only useful on a testnet.",
        "fullyImplemented": true,
        "id": 10125,
        "linearizedBaseContracts": [
          10125,
          689,
          89,
          180,
          10580,
          10985,
          11054,
          10168
        ],
        "name": "TestnetMRVToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10111,
              "nodeType": "Block",
              "src": "428:33:23",
              "statements": []
            },
            "documentation": "Make a new TestnetMRVToken.\nPasses through arguments to the base MRVToken constructor.",
            "id": 10112,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 10107,
                    "name": "sendProceedsTo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10102,
                    "src": "391:14:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 10108,
                    "name": "sendTokensTo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10104,
                    "src": "407:12:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 10109,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10106,
                  "name": "MRVToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 689,
                  "src": "382:8:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MRVToken_$689_$",
                    "typeString": "type(contract MRVToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "382:38:23"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10102,
                  "name": "sendProceedsTo",
                  "nodeType": "VariableDeclaration",
                  "scope": 10112,
                  "src": "328:30:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 10101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "328:15:23",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10104,
                  "name": "sendTokensTo",
                  "nodeType": "VariableDeclaration",
                  "scope": 10112,
                  "src": "360:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "360:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "327:54:23"
            },
            "returnParameters": {
              "id": 10110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "428:0:23"
            },
            "scope": 10125,
            "src": "316:145:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10123,
              "nodeType": "Block",
              "src": "598:42:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10118,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12446,
                          "src": "614:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "614:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10120,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10114,
                        "src": "626:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10117,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10869,
                      "src": "608:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "608:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10122,
                  "nodeType": "ExpressionStatement",
                  "src": "608:25:23"
                }
              ]
            },
            "documentation": "Allow anyone to mint themselves any amount of tokens, for testing.",
            "id": 10124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10114,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10124,
                  "src": "575:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "575:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "574:16:23"
            },
            "returnParameters": {
              "id": 10116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "598:0:23"
            },
            "scope": 10125,
            "src": "561:79:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 10126,
        "src": "155:488:23"
      }
    ],
    "src": "0:644:23"
  },
  "legacyAST": {
    "absolutePath": "/Users/anovak/Documents/Workspace/macroverse/contracts/TestnetMRVToken.sol",
    "exportedSymbols": {
      "TestnetMRVToken": [
        10125
      ]
    },
    "id": 10126,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10097,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:23"
      },
      {
        "absolutePath": "/Users/anovak/Documents/Workspace/macroverse/contracts/MRVToken.sol",
        "file": "./MRVToken.sol",
        "id": 10098,
        "nodeType": "ImportDirective",
        "scope": 10126,
        "sourceUnit": 690,
        "src": "25:24:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10099,
              "name": "MRVToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 689,
              "src": "183:8:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MRVToken_$689",
                "typeString": "contract MRVToken"
              }
            },
            "id": 10100,
            "nodeType": "InheritanceSpecifier",
            "src": "183:8:23"
          }
        ],
        "contractDependencies": [
          180,
          689,
          89,
          10168,
          10580,
          10985,
          11054
        ],
        "contractKind": "contract",
        "documentation": "MRVToken contract which adds unrestricted minting by anyone.\n * Only useful on a testnet.",
        "fullyImplemented": true,
        "id": 10125,
        "linearizedBaseContracts": [
          10125,
          689,
          89,
          180,
          10580,
          10985,
          11054,
          10168
        ],
        "name": "TestnetMRVToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10111,
              "nodeType": "Block",
              "src": "428:33:23",
              "statements": []
            },
            "documentation": "Make a new TestnetMRVToken.\nPasses through arguments to the base MRVToken constructor.",
            "id": 10112,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 10107,
                    "name": "sendProceedsTo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10102,
                    "src": "391:14:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 10108,
                    "name": "sendTokensTo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10104,
                    "src": "407:12:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 10109,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10106,
                  "name": "MRVToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 689,
                  "src": "382:8:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MRVToken_$689_$",
                    "typeString": "type(contract MRVToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "382:38:23"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10102,
                  "name": "sendProceedsTo",
                  "nodeType": "VariableDeclaration",
                  "scope": 10112,
                  "src": "328:30:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 10101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "328:15:23",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10104,
                  "name": "sendTokensTo",
                  "nodeType": "VariableDeclaration",
                  "scope": 10112,
                  "src": "360:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "360:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "327:54:23"
            },
            "returnParameters": {
              "id": 10110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "428:0:23"
            },
            "scope": 10125,
            "src": "316:145:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10123,
              "nodeType": "Block",
              "src": "598:42:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10118,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12446,
                          "src": "614:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "614:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10120,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10114,
                        "src": "626:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10117,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10869,
                      "src": "608:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "608:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10122,
                  "nodeType": "ExpressionStatement",
                  "src": "608:25:23"
                }
              ]
            },
            "documentation": "Allow anyone to mint themselves any amount of tokens, for testing.",
            "id": 10124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10114,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10124,
                  "src": "575:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "575:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "574:16:23"
            },
            "returnParameters": {
              "id": 10116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "598:0:23"
            },
            "scope": 10125,
            "src": "561:79:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 10126,
        "src": "155:488:23"
      }
    ],
    "src": "0:644:23"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0xf82aa3c8d92a1044b702b0c9718bd99d353a4a85a215bdb4fe6c6a04b5f541e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "time",
              "type": "uint256"
            }
          ],
          "name": "CrowdsaleOpen",
          "type": "event",
          "signature": "0xf82aa3c8d92a1044b702b0c9718bd99d353a4a85a215bdb4fe6c6a04b5f541e0"
        },
        "0xd240e127ddfc99c27bdd1c45b264d1954a1e2bdb17a4c37e81586fd141288261": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "time",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "etherAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "from",
              "type": "address"
            }
          ],
          "name": "TokenPurchase",
          "type": "event",
          "signature": "0xd240e127ddfc99c27bdd1c45b264d1954a1e2bdb17a4c37e81586fd141288261"
        },
        "0x99424d4740b41446c45fa894e3dda8489b8ef8df8a37f8035f83053ed26485c1": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "time",
              "type": "uint256"
            }
          ],
          "name": "CrowdsaleClose",
          "type": "event",
          "signature": "0x99424d4740b41446c45fa894e3dda8489b8ef8df8a37f8035f83053ed26485c1"
        },
        "0xed6150ec960548590c920ded6ef554ec9e451dd7b4c85f62fb3760812cd72cf1": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "newDecimals",
              "type": "uint8"
            }
          ],
          "name": "DecimalChange",
          "type": "event",
          "signature": "0xed6150ec960548590c920ded6ef554ec9e451dd7b4c85f62fb3760812cd72cf1"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        }
      },
      "links": {},
      "address": "0xBaa4229B8f2F25A8Ef55EA9Cfd1aD4a753AD0132",
      "transactionHash": "0x37f3858f989311425306f7d19b82307eeaf5b1f19b05243d6677cc9c4a1cafef"
    }
  },
  "schemaVersion": "3.0.16",
  "updatedAt": "2020-01-10T05:20:57.313Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "reclaimContract(address)": {
        "details": "Reclaim ownership of Ownable contracts",
        "params": {
          "contractAddr": "The address of the Ownable to be reclaimed."
        }
      },
      "reclaimToken(address)": {
        "details": "Reclaim all IERC20 compatible tokens",
        "params": {
          "tokenAddr": "address The address of the token contract"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "tokenFallback(address,uint256,bytes)": {
        "details": "Reject all ERC23 compatible tokens"
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "checkCloseTimer()": {
        "notice": "If the close timer has elapsed, stop the crowdsale."
      },
      "checkOpenTimer()": {
        "notice": "If the open timer has elapsed, start the crowdsale. Can be called by people, but also gets called when people try to contribute."
      },
      "clearCrowdsaleCloseTimer()": {
        "notice": "Let the owner stop the crowdsale close timer, as long as it has not yet expired."
      },
      "clearCrowdsaleOpenTimer()": {
        "notice": "Let the owner stop the crowdsale open timer, as long as the crowdsale has not yet opened."
      },
      "closeCrowdsale()": {
        "notice": "Allow the owner to end the crowdsale manually."
      },
      "closeTimerElapsed()": {
        "notice": "Determine if the crowdsale should close by timer."
      },
      "constructor": "Make a new TestnetMRVToken. Passes through arguments to the base MRVToken constructor.",
      "decreaseAllowance(address,uint256)": {
        "notice": "Block the decreaseAllowance method which is not in the mainned deployed contract, but which OZ added to their library after we deployed."
      },
      "increaseAllowance(address,uint256)": {
        "notice": "Block the increaseAllowance method which is not in the mainned deployed contract, but which OZ added to their library after we deployed."
      },
      "isCrowdsaleActive()": {
        "notice": "Determine if the crowdsale is currently happening."
      },
      "mint(uint256)": {
        "notice": "Allow anyone to mint themselves any amount of tokens, for testing."
      },
      "openCrowdsale()": {
        "notice": "Allow the owner to start the crowdsale manually."
      },
      "openTimerElapsed()": {
        "notice": "Determine if the crowdsale should open by timer."
      },
      "reclaimEther()": {
        "notice": "If Ether somehow manages to get into this contract, provide a way to get it out again. During normal crowdsale operation, ETH is immediately forwarded to the beneficiary."
      },
      "setCrowdsaleCloseTimerFor(uint256)": {
        "notice": "Let the owner start the timer for the crowdsale end. Counts from when the function is called, *not* from the start of the crowdsale. It is possible, but a bad idea, to set this before the open timer."
      },
      "setCrowdsaleOpenTimerFor(uint256)": {
        "notice": "Let the owner start the timer for the crowdsale start. Without further owner intervention, anyone will be able to open the crowdsale when the timer expires. Further calls will re-set the timer to count from the time the transaction is processed. The timer can be re-set after it has tripped, unless someone has already opened the crowdsale."
      },
      "setDecimals(uint8)": {
        "notice": "When the crowdsale is finished, the contract owner may adjust the decimal places for display purposes. This should work like a 10-to-1 split or reverse-split. The point of this mechanism is to keep the individual MRV tokens from getting inconveniently valuable or cheap. However, it relies on the contract owner taking the time to update the decimal place value. Note that this changes the decimals IMMEDIATELY with NO NOTICE to users."
      },
      "setMaxSupply(uint256)": {
        "notice": "Before the crowdsale opens, the max token count can be configured."
      }
    },
    "notice": "MRVToken contract which adds unrestricted minting by anyone. * Only useful on a testnet."
  }
}