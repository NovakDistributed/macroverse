{
  "contractName": "TestnetMRVToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "sendProceedsTo",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sendTokensTo",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "CrowdsaleClose",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "CrowdsaleOpen",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "newDecimals",
          "type": "uint8"
        }
      ],
      "name": "DecimalChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "etherAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "name": "TokenPurchase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkCloseTimer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkOpenTimer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clearCrowdsaleCloseTimer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clearCrowdsaleOpenTimer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closeCrowdsale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closeTimer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closeTimerElapsed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isCrowdsaleActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxCrowdsaleSupplyInWholeTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openCrowdsale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openTimer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openTimerElapsed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contractAddr",
          "type": "address"
        }
      ],
      "name": "reclaimContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reclaimEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        }
      ],
      "name": "reclaimToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minutesFromNow",
          "type": "uint256"
        }
      ],
      "name": "setCrowdsaleCloseTimerFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minutesFromNow",
          "type": "uint256"
        }
      ],
      "name": "setCrowdsaleOpenTimerFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "newDecimals",
          "type": "uint8"
        }
      ],
      "name": "setDecimals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMaxInWholeTokens",
          "type": "uint256"
        }
      ],
      "name": "setMaxSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "tokenFallback",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wholeTokensPerEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wholeTokensReserved",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"sendProceedsTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sendTokensTo\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"CrowdsaleClose\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"CrowdsaleOpen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"newDecimals\",\"type\":\"uint8\"}],\"name\":\"DecimalChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"etherAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkCloseTimer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkOpenTimer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearCrowdsaleCloseTimer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearCrowdsaleOpenTimer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeCrowdsale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeTimer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeTimerElapsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isCrowdsaleActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxCrowdsaleSupplyInWholeTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openCrowdsale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTimer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTimerElapsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"reclaimContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reclaimEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"}],\"name\":\"reclaimToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minutesFromNow\",\"type\":\"uint256\"}],\"name\":\"setCrowdsaleCloseTimerFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minutesFromNow\",\"type\":\"uint256\"}],\"name\":\"setCrowdsaleOpenTimerFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"newDecimals\",\"type\":\"uint8\"}],\"name\":\"setDecimals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxInWholeTokens\",\"type\":\"uint256\"}],\"name\":\"setMaxSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wholeTokensPerEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wholeTokensReserved\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"reclaimContract(address)\":{\"details\":\"Reclaim ownership of Ownable contracts\",\"params\":{\"contractAddr\":\"The address of the Ownable to be reclaimed.\"}},\"reclaimToken(address)\":{\"details\":\"Reclaim all IERC20 compatible tokens\",\"params\":{\"tokenAddr\":\"address The address of the token contract\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"tokenFallback(address,uint256,bytes)\":{\"details\":\"Reject all ERC23 compatible tokens\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"checkCloseTimer()\":{\"notice\":\"If the close timer has elapsed, stop the crowdsale.\"},\"checkOpenTimer()\":{\"notice\":\"If the open timer has elapsed, start the crowdsale. Can be called by people, but also gets called when people try to contribute.\"},\"clearCrowdsaleCloseTimer()\":{\"notice\":\"Let the owner stop the crowdsale close timer, as long as it has not yet expired.\"},\"clearCrowdsaleOpenTimer()\":{\"notice\":\"Let the owner stop the crowdsale open timer, as long as the crowdsale has not yet opened.\"},\"closeCrowdsale()\":{\"notice\":\"Allow the owner to end the crowdsale manually.\"},\"closeTimerElapsed()\":{\"notice\":\"Determine if the crowdsale should close by timer.\"},\"constructor\":\"Make a new TestnetMRVToken. Passes through arguments to the base MRVToken constructor.\",\"decreaseAllowance(address,uint256)\":{\"notice\":\"Block the decreaseAllowance method which is not in the mainned deployed contract, but which OZ added to their library after we deployed.\"},\"increaseAllowance(address,uint256)\":{\"notice\":\"Block the increaseAllowance method which is not in the mainned deployed contract, but which OZ added to their library after we deployed.\"},\"isCrowdsaleActive()\":{\"notice\":\"Determine if the crowdsale is currently happening.\"},\"mint(uint256)\":{\"notice\":\"Allow anyone to mint themselves any amount of tokens, for testing.\"},\"openCrowdsale()\":{\"notice\":\"Allow the owner to start the crowdsale manually.\"},\"openTimerElapsed()\":{\"notice\":\"Determine if the crowdsale should open by timer.\"},\"reclaimEther()\":{\"notice\":\"If Ether somehow manages to get into this contract, provide a way to get it out again. During normal crowdsale operation, ETH is immediately forwarded to the beneficiary.\"},\"setCrowdsaleCloseTimerFor(uint256)\":{\"notice\":\"Let the owner start the timer for the crowdsale end. Counts from when the function is called, *not* from the start of the crowdsale. It is possible, but a bad idea, to set this before the open timer.\"},\"setCrowdsaleOpenTimerFor(uint256)\":{\"notice\":\"Let the owner start the timer for the crowdsale start. Without further owner intervention, anyone will be able to open the crowdsale when the timer expires. Further calls will re-set the timer to count from the time the transaction is processed. The timer can be re-set after it has tripped, unless someone has already opened the crowdsale.\"},\"setDecimals(uint8)\":{\"notice\":\"When the crowdsale is finished, the contract owner may adjust the decimal places for display purposes. This should work like a 10-to-1 split or reverse-split. The point of this mechanism is to keep the individual MRV tokens from getting inconveniently valuable or cheap. However, it relies on the contract owner taking the time to update the decimal place value. Note that this changes the decimals IMMEDIATELY with NO NOTICE to users.\"},\"setMaxSupply(uint256)\":{\"notice\":\"Before the crowdsale opens, the max token count can be configured.\"}},\"notice\":\"MRVToken contract which adds unrestricted minting by anyone. Only useful on a testnet.\"}},\"settings\":{\"compilationTarget\":{\"/z/home/anovak/workspace/macroverse/contracts/TestnetMRVToken.sol\":\"TestnetMRVToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/z/home/anovak/workspace/macroverse/contracts/HasNoContracts.sol\":{\"keccak256\":\"0xd02f05b2811cdede03d04d4a24dd33da47bf1da87214b9684fb3c056a26e22b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4463d6c8a654d45a2ab593ea7c58db4c9238fb29f1fd01cca1825bb70dbdfb08\",\"dweb:/ipfs/QmQ9gbbpDbrcrSnhUCXzkbgu6wQJFPKsw3p45rP2Djt5Hf\"]},\"/z/home/anovak/workspace/macroverse/contracts/HasNoTokens.sol\":{\"keccak256\":\"0xf3ea60d506aa95b8d4f9a66d2bfc20d9c133144e782c891df2a926d9d1a0909b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1d88f6a41dc1e634c7cbd060c5971ba5c93b96cfa66a01033b819551a7d12c8\",\"dweb:/ipfs/QmSq65wd32aWKFF9VpPKWJVMsbywJ864Dv6HgNk2GTQ3Nr\"]},\"/z/home/anovak/workspace/macroverse/contracts/MRVToken.sol\":{\"keccak256\":\"0xafed7c892973a004be5be1599e562b6745689468cb94f104ae34824dd0d8d19a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3489340e4c4871bdd0be2f258338ebe352fcf4d7dbc4a6894e8f7bf09b028d67\",\"dweb:/ipfs/QmNsoSegCXAsrXiKt3aFoC6VhrJ1SPhuVZTozS4M2gJntG\"]},\"/z/home/anovak/workspace/macroverse/contracts/TestnetMRVToken.sol\":{\"keccak256\":\"0xa6b1fa5d2a2e43ed01087e0e8bc8f9b2066cd4b511f0644b145d313712be957d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4848c0fb26711b888c279dde29d552671c708db63570b2e38fb606f4bc1947f2\",\"dweb:/ipfs/QmexwnCt9U4LTjdYuVv4MKUPrWKSawjSHM7LZWwgZ9Af6d\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0xc6fb4c940628ca2cde81ed6d20fc9ff456b60f55aafef555f43a86a2dda7ad9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f17dda58954a84ffca3d53c0b6435bad7f5c42ab3a9c4603db2f1aef00edae4e\",\"dweb:/ipfs/QmehW99QmmzKvnqTsprsApDF7mK2JVo6nnrZ47znhLTFjh\"]},\"openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xaa0e11a791bc975d581a4f5b7a8d9c16a880a354c89312318ae072ae3e740409\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://982d8b344f76193834260436d74c81e5a8f9e89106bb4cd72bbaabda4f3f59c2\",\"dweb:/ipfs/QmSrvP5TkQRhKDVCTpsV3uaKLBhkt7PjUY89vdtM9o5ybK\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4daf1e5f59e8ca32aca35cffc32dede6515b06d0d7e5013cd78bb24094fad719\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93703bec9d9f5e4aa3f027d5db956ce94716f58182fc53ebf90bed7968bca51\",\"dweb:/ipfs/QmPdV3o4ADR9ABUNKwabR3GxaeGQX7xMdQur2aqEi5KnT9\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x934dbc549a8df514456047ad1c6ab257127a03f4109272834c30e596bbe10d1d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cf247ade00a28c632dfe2c2521e1952f467c6081b89375c34b1eb297441d9b\",\"dweb:/ipfs/QmYGNAHCtN1m3QDynteTeVCfwFZBZRpGJNMjxwVBUifnfB\"]}},\"version\":1}",
  "bytecode": "0x608060405260006009556000600a553480156200001b57600080fd5b50604051620033e3380380620033e3833981810160405260408110156200004157600080fd5b81019080805190602001909291908051906020019092919050505081816040518060400160405280601081526020017f4d6163726f766572736520546f6b656e000000000000000000000000000000008152506040518060400160405280600381526020017f4d525600000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000e292919062000519565b508060049080519060200190620000fb92919062000519565b506012600560006101000a81548160ff021916908360ff160217905550505060006200012c6200028760201b60201c565b905080600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200021e60126200028f60201b60201c565b6200023c81670de0b6b3a764000061138802620002ad60201b60201c565b6000600860006101000a81548160ff0219169083151502179055506000600860016101000a81548160ff0219169083151502179055506305f5e10060078190555050505050620005c8565b600033905090565b80600560006101000a81548160ff021916908360ff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000351576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b62000365600083836200048b60201b60201c565b62000381816002546200049060201b6200243a1790919060201c565b600281905550620003df816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200049060201b6200243a1790919060201c565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b505050565b6000808284019050838110156200050f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200055c57805160ff19168380011785556200058d565b828001600101855582156200058d579182015b828111156200058c5782518255916020019190600101906200056f565b5b5090506200059c9190620005a0565b5090565b620005c591905b80821115620005c1576000816000905550600101620005a7565b5090565b90565b612e0b80620005d86000396000f3fe60806040526004361061021e5760003560e01c8063715018a6116101235780639f727c27116100ab578063dd3260fc1161006f578063dd3260fc14610b24578063dd62ed3e14610b3b578063e330a73714610bc0578063ea66363114610bfb578063f2fde38b14610c2a57610271565b80639f727c271461093c578063a0712d6814610953578063a457c2d71461098e578063a9059cbb14610a01578063c0ee0b8a14610a7457610271565b80638490d598116100f25780638490d598146107e85780638da5cb5b1461081357806392f351f91461086a57806395d89b4114610895578063983c0a011461092557610271565b8063715018a61461072957806379d220ae146107405780637a1395aa1461077b57806380f4531f146107b957610271565b80632aed7f3f116101a65780634e15dfe9116101755780634e15dfe91461061c5780635da24f90146106475780636d6e2710146106725780636f8b44b01461068957806370a08231146106c457610271565b80632aed7f3f146104fc578063313ce5671461054d578063346fc0dd1461057e57806339509351146105a957610271565b806317ffc320116101ed57806317ffc320146103bf57806318160ddd146104105780631f4425f31461043b57806323b872dd1461045257806328ef6f40146104e557610271565b80630118e6861461027657806306fdde03146102a5578063095ea7b3146103355780630d051c52146103a857610271565b366102715761022b610c7b565b610233610ce5565b600860019054906101000a900460ff161561024d57600080fd5b600860009054906101000a900460ff1661026657600080fd5b61026f33610d4f565b005b600080fd5b34801561028257600080fd5b5061028b610ed6565b604051808215151515815260200191505060405180910390f35b3480156102b157600080fd5b506102ba610f24565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102fa5780820151818401526020810190506102df565b50505050905090810190601f1680156103275780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561034157600080fd5b5061038e6004803603604081101561035857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fc6565b604051808215151515815260200191505060405180910390f35b3480156103b457600080fd5b506103bd610fe4565b005b3480156103cb57600080fd5b5061040e600480360360208110156103e257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110da565b005b34801561041c57600080fd5b50610425611334565b6040518082815260200191505060405180910390f35b34801561044757600080fd5b50610450610ce5565b005b34801561045e57600080fd5b506104cb6004803603606081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061133e565b604051808215151515815260200191505060405180910390f35b3480156104f157600080fd5b506104fa611417565b005b34801561050857600080fd5b5061054b6004803603602081101561051f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061155f565b005b34801561055957600080fd5b506105626116d0565b604051808260ff1660ff16815260200191505060405180910390f35b34801561058a57600080fd5b506105936116e7565b6040518082815260200191505060405180910390f35b3480156105b557600080fd5b50610602600480360360408110156105cc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506116ed565b604051808215151515815260200191505060405180910390f35b34801561062857600080fd5b506106316116f4565b6040518082815260200191505060405180910390f35b34801561065357600080fd5b5061065c6116fa565b6040518082815260200191505060405180910390f35b34801561067e57600080fd5b50610687611700565b005b34801561069557600080fd5b506106c2600480360360208110156106ac57600080fd5b81019080803590602001909291905050506117f6565b005b3480156106d057600080fd5b50610713600480360360208110156106e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118ec565b6040518082815260200191505060405180910390f35b34801561073557600080fd5b5061073e611934565b005b34801561074c57600080fd5b506107796004803603602081101561076357600080fd5b8101908080359060200190929190505050611abf565b005b34801561078757600080fd5b506107b76004803603602081101561079e57600080fd5b81019080803560ff169060200190929190505050611bba565b005b3480156107c557600080fd5b506107ce611cee565b604051808215151515815260200191505060405180910390f35b3480156107f457600080fd5b506107fd611d08565b6040518082815260200191505060405180910390f35b34801561081f57600080fd5b50610828611d0e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561087657600080fd5b5061087f611d38565b6040518082815260200191505060405180910390f35b3480156108a157600080fd5b506108aa611d3e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108ea5780820151818401526020810190506108cf565b50505050905090810190601f1680156109175780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561093157600080fd5b5061093a611de0565b005b34801561094857600080fd5b50610951611f49565b005b34801561095f57600080fd5b5061098c6004803603602081101561097657600080fd5b8101908080359060200190929190505050612057565b005b34801561099a57600080fd5b506109e7600480360360408110156109b157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612064565b604051808215151515815260200191505060405180910390f35b348015610a0d57600080fd5b50610a5a60048036036040811015610a2457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061206b565b604051808215151515815260200191505060405180910390f35b348015610a8057600080fd5b50610b2260048036036060811015610a9757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610ade57600080fd5b820183602082011115610af057600080fd5b80359060200191846001830284011164010000000083111715610b1257600080fd5b9091929391929390505050612089565b005b348015610b3057600080fd5b50610b39610c7b565b005b348015610b4757600080fd5b50610baa60048036036040811015610b5e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061208e565b6040518082815260200191505060405180910390f35b348015610bcc57600080fd5b50610bf960048036036020811015610be357600080fd5b8101908080359060200190929190505050612115565b005b348015610c0757600080fd5b50610c10612210565b604051808215151515815260200191505060405180910390f35b348015610c3657600080fd5b50610c7960048036036020811015610c4d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061222a565b005b610c83612210565b15610ce3576001600860006101000a81548160ff02191690831515021790555060006009819055507ff82aa3c8d92a1044b702b0c9718bd99d353a4a85a215bdb4fe6c6a04b5f541e0426040518082815260200191505060405180910390a15b565b610ced611cee565b15610d4d576001600860016101000a81548160ff0219169083151502179055506000600a819055507f99424d4740b41446c45fa894e3dda8489b8ef8df8a37f8035f83053ed26485c1426040518082815260200191505060405180910390a15b565b610d57610c7b565b610d5f610ce5565b600860019054906101000a900460ff1615610d7957600080fd5b600860009054906101000a900460ff16610d9257600080fd5b6000341415610da057600080fd5b6000610db7611388346124c290919063ffffffff16565b90506000610dd582610dc7611334565b61243a90919063ffffffff16565b9050670de0b6b3a76400006007546113880102811115610df457600080fd5b610dfe8383612548565b7fd240e127ddfc99c27bdd1c45b264d1954a1e2bdb17a4c37e81586fd141288261423485604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a1600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050610ed157600080fd5b505050565b6000600860009054906101000a900460ff1680610ef75750610ef6612210565b5b8015610f1f5750600860019054906101000a900460ff1680610f1d5750610f1c611cee565b5b155b905090565b606060038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fbc5780601f10610f9157610100808354040283529160200191610fbc565b820191906000526020600020905b815481529060010190602001808311610f9f57829003601f168201915b5050505050905090565b6000610fda610fd361270f565b8484612717565b6001905092915050565b610fec61270f565b73ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146110ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6110b6610ce5565b600860019054906101000a900460ff16156110d057600080fd5b6000600a81905550565b6110e261270f565b73ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111a4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600081905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561122857600080fd5b505afa15801561123c573d6000803e3d6000fd5b505050506040513d602081101561125257600080fd5b810190808051906020019092919050505090508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb611289611d0e565b836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156112f357600080fd5b505af1158015611307573d6000803e3d6000fd5b505050506040513d602081101561131d57600080fd5b810190808051906020019092919050505050505050565b6000600254905090565b600061134b84848461290e565b61140c8461135761270f565b61140785604051806060016040528060288152602001612d6560289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006113bd61270f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612bcf9092919063ffffffff16565b612717565b600190509392505050565b61141f61270f565b73ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146114e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6114e9610c7b565b600860009054906101000a900460ff161561150357600080fd5b6001600860006101000a81548160ff02191690831515021790555060006009819055507ff82aa3c8d92a1044b702b0c9718bd99d353a4a85a215bdb4fe6c6a04b5f541e0426040518082815260200191505060405180910390a1565b61156761270f565b73ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611629576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008190508073ffffffffffffffffffffffffffffffffffffffff1663f2fde38b611652611d0e565b6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156116b457600080fd5b505af11580156116c8573d6000803e3d6000fd5b505050505050565b6000600560009054906101000a900460ff16905090565b60075481565b6000806000fd5b61138881565b600a5481565b61170861270f565b73ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146117ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6117d2610c7b565b600860009054906101000a900460ff16156117ec57600080fd5b6000600981905550565b6117fe61270f565b73ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146118c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6118c8610c7b565b600860009054906101000a900460ff16156118e257600080fd5b8060078190555050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61193c61270f565b73ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146119fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b611ac761270f565b73ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611b89576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611b91610c7b565b600860009054906101000a900460ff1615611bab57600080fd5b603c8102420160098190555050565b611bc261270f565b73ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611c84576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611c8c610ce5565b600860019054906101000a900460ff16611ca557600080fd5b611cae81612c8f565b7fed6150ec960548590c920ded6ef554ec9e451dd7b4c85f62fb3760812cd72cf181604051808260ff1660ff16815260200191505060405180910390a150565b600080600a5414158015611d035750600a5442115b905090565b61138881565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60095481565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611dd65780601f10611dab57610100808354040283529160200191611dd6565b820191906000526020600020905b815481529060010190602001808311611db957829003601f168201915b5050505050905090565b611de861270f565b73ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611eaa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611eb2610c7b565b611eba610ce5565b600860019054906101000a900460ff1615611ed457600080fd5b600860009054906101000a900460ff16611eed57600080fd5b6001600860016101000a81548160ff0219169083151502179055506000600a819055507f99424d4740b41446c45fa894e3dda8489b8ef8df8a37f8035f83053ed26485c1426040518082815260200191505060405180910390a1565b611f5161270f565b73ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612013576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61201b611d0e565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505061205557fe5b565b6120613382612548565b50565b6000806000fd5b600061207f61207861270f565b848461290e565b6001905092915050565b600080fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61211d61270f565b73ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146121df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6121e7610ce5565b600860019054906101000a900460ff161561220157600080fd5b603c81024201600a8190555050565b60008060095414158015612225575060095442115b905090565b61223261270f565b73ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146122f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561237a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612cd66026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000808284019050838110156124b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000808314156124d55760009050612542565b60008284029050828482816124e657fe5b041461253d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d446021913960400191505060405180910390fd5b809150505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156125eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6125f760008383612cad565b61260c8160025461243a90919063ffffffff16565b600281905550612663816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461243a90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561279d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612db26024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612823576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612cfc6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612994576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612d8d6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612a1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612cb36023913960400191505060405180910390fd5b612a25838383612cad565b612a9081604051806060016040528060268152602001612d1e602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612bcf9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612b23816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461243a90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290612c7c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612c41578082015181840152602081019050612c26565b50505050905090810190601f168015612c6e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b80600560006101000a81548160ff021916908360ff16021790555050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a2646970667358221220cfc23d521a518ea202282d94837d5dc4f903120eba736be93a62ea754d934aac64736f6c634300060a0033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "156:488:23:-:0;;;4465:1:5;4441:25;;4619:1;4594:26;;317:145:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;392:14;408:12;2007:141:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2087:4;2079:5;:12;;;;;;;;;;;;:::i;:::-;;2111:6;2101:7;:16;;;;;;;;;;;;:::i;:::-;;2139:2;2127:9;;:14;;;;;;;;;;;;;;;;;;2007:141;;865:17:26;885:12;:10;;;:12;;:::i;:::-;865:32;;916:9;907:6;;:18;;;;;;;;;;;;;;;;;;973:9;940:43;;969:1;940:43;;;;;;;;;;;;831:159;5009:14:5::1;4995:11;;:28;;;;;;;;;;;;;;;;;;5089:18;5104:2;5089:14;;;:18;;:::i;:::-;5329:51;5335:12;5371:8;3901:4;5349:30;5329:5;;;:51;;:::i;:::-;5483:5;5464:16;;:24;;;;;;;;;;;;;;;;;;5515:5;5498:14;;:22;;;;;;;;;;;;;;;;;;5632:9;5598:31;:43;;;;4833:815:::0;;317:145:23;;156:488;;768:104:25;821:15;855:10;848:17;;768:104;:::o;10016:88:30:-;10088:9;10076;;:21;;;;;;;;;;;;;;;;;;10016:88;:::o;7829:370::-;7931:1;7912:21;;:7;:21;;;;7904:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7980:49;8009:1;8013:7;8022:6;7980:20;;;:49;;:::i;:::-;8055:24;8072:6;8055:12;;:16;;;;;;:24;;;;:::i;:::-;8040:12;:39;;;;8110:30;8133:6;8110:9;:18;8120:7;8110:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;:::i;:::-;8089:9;:18;8099:7;8089:18;;;;;;;;;;;;;;;:51;;;;8176:7;8155:37;;8172:1;8155:37;;;8185:6;8155:37;;;;;;;;;;;;;;;;;;7829:370;;:::o;10691:92::-;;;;:::o;867:176:29:-;925:7;944:9;960:1;956;:5;944:17;;984:1;979;:6;;971:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1035:1;1028:8;;;867:176;;;;:::o;156:488:23:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "156:488:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7817:16:5;:14;:16::i;:::-;7843:17;:15;:17::i;:::-;7874:14;;;;;;;;;;;7870:28;;;7890:8;;;7870:28;7913:16;;;;;;;;;;;7908:31;;7931:8;;;7908:31;6425:24:::1;6438:10;6425:12;:24::i;:::-;156:488:23::0;;;;;9114:271:5;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2213:81:30;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4249:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11216:101:5;;;;;;;;;;;;;:::i;:::-;;786:207:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3256:98:30;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8843:187:5;;;;;;;;;;;;;:::i;:::-;;4875:317:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9781:155:5;;;;;;;;;;;;;:::i;:::-;;517:166:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3115:81:30;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3746:43:5;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14760:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3964:45;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4594:26;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10604:99;;;;;;;;;;;;;:::i;:::-;;9547:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3412:117:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1689:145:26;;;;;;;;;;;;;:::i;:::-;;10331:150:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13738:220;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8287:117;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3858:47;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1066:77:26;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4441:25:5;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2407:85:30;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13014:159:5;;;;;;;;;;;;;:::i;:::-;;14169:219;;;;;;;;;;;;;:::i;:::-;;562:79:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;15065:132:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3732:172:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;532:127:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8573:185:5;;;;;;;;;;;;;:::i;:::-;;3962:149:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10950:152:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8090:114;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1983:240:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8573:185:5;8620:18;:16;:18::i;:::-;8616:136;;;8673:4;8654:16;;:23;;;;;;;;;;;;;;;;;;8703:1;8691:9;:13;;;;8723:18;8737:3;8723:18;;;;;;;;;;;;;;;;;;8616:136;8573:185::o;8843:187::-;8891:19;:17;:19::i;:::-;8887:137;;;8943:4;8926:14;;:21;;;;;;;;;;;;;;;;;;8974:1;8961:10;:14;;;;8994:19;9009:3;8994:19;;;;;;;;;;;;;;;;;;8887:137;8843:187::o;11582:1352::-;7817:16;:14;:16::i;:::-;7843:17;:15;:17::i;:::-;7874:14;;;;;;;;;;;7870:28;;;7890:8;;;7870:28;7913:16;;;;;;;;;;;7908:31;;7931:8;;;7908:31;11679:1:::1;11666:9;:14;11662:53;;;11696:8;::::0;::::1;11662:53;11725:11;11739:32;4005:4;11739:9;:13;;:32;;;;:::i;:::-;11725:46;;11847:22;11872:25;11890:6;11872:13;:11;:13::i;:::-;:17;;:25;;;;:::i;:::-;11847:50;;11995:8;11960:31;;3901:4;11938:53;11937:66;11920:14;:83;11916:234;;;12131:8;::::0;::::1;11916:234;12514:24;12520:9;12531:6;12514:5;:24::i;:::-;12595:40;12609:3;12614:9;12625;12595:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12866:11;;;;;;;;;;;:16;;:27;12883:9;12866:27;;;;;;;;;;;;;;;;;;;;;;;12861:67;;12909:8;::::0;::::1;12861:67;7949:1;;11582:1352:::0;:::o;9114:271::-;9164:4;9294:16;;;;;;;;;;;:38;;;;9314:18;:16;:18::i;:::-;9294:38;9293:84;;;;;9339:14;;;;;;;;;;;:37;;;;9357:19;:17;:19::i;:::-;9339:37;9337:40;9293:84;9285:93;;9114:271;:::o;2213:81:30:-;2250:13;2282:5;2275:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2213:81;:::o;4249:166::-;4332:4;4348:39;4357:12;:10;:12::i;:::-;4371:7;4380:6;4348:8;:39::i;:::-;4404:4;4397:11;;4249:166;;;;:::o;11216:101:5:-;1280:12:26;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7120:17:5::1;:15;:17::i;:::-;7151:14;;;;;;;;;;;7147:28;;;7167:8;::::0;::::1;7147:28;11309:1:::2;11296:10;:14;;;;11216:101::o:0;786:207:4:-;1280:12:26;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;852:16:4::1;878:9;852:36;;894:15;912:9;:19;;;940:4;912:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;894:52;;952:9;:18;;;971:7;:5;:7::i;:::-;980;952:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;1339:1:26;;786:207:4::0;:::o;3256:98:30:-;3309:7;3335:12;;3328:19;;3256:98;:::o;4875:317::-;4981:4;4997:36;5007:6;5015:9;5026:6;4997:9;:36::i;:::-;5043:121;5052:6;5060:12;:10;:12::i;:::-;5074:89;5112:6;5074:89;;;;;;;;;;;;;;;;;:11;:19;5086:6;5074:19;;;;;;;;;;;;;;;:33;5094:12;:10;:12::i;:::-;5074:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5043:8;:121::i;:::-;5181:4;5174:11;;4875:317;;;;;:::o;9781:155:5:-;1280:12:26;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7564:16:5::1;:14;:16::i;:::-;7594;;;;;;;;;;;7590:30;;;7612:8;::::0;::::1;7590:30;9869:4:::2;9850:16;;:23;;;;;;;;;;;;;;;;;;9895:1;9883:9;:13;;;;9911:18;9925:3;9911:18;;;;;;;;;;;;;;;;;;9781:155::o:0;517:166:2:-;1280:12:26;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;589:20:2::1;620:12;589:44;;639:12;:30;;;670:7;:5;:7::i;:::-;639:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1339:1:26;517:166:2::0;:::o;3115:81:30:-;3156:5;3180:9;;;;;;;;;;;3173:16;;3115:81;:::o;3746:43:5:-;;;;:::o;14760:132::-;14861:4;14877:8;;;3964:45;4005:4;3964:45;:::o;4594:26::-;;;;:::o;10604:99::-;1280:12:26;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7564:16:5::1;:14;:16::i;:::-;7594;;;;;;;;;;;7590:30;;;7612:8;::::0;::::1;7590:30;10695:1:::2;10683:9;:13;;;;10604:99::o:0;9547:152::-;1280:12:26;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7564:16:5::1;:14;:16::i;:::-;7594;;;;;;;;;;;7590:30;;;7612:8;::::0;::::1;7590:30;9673:19:::2;9639:31;:53;;;;9547:152:::0;:::o;3412:117:30:-;3478:7;3504:9;:18;3514:7;3504:18;;;;;;;;;;;;;;;;3497:25;;3412:117;;;:::o;1689:145:26:-;1280:12;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1795:1:::1;1758:40;;1779:6;;;;;;;;;;;1758:40;;;;;;;;;;;;1825:1;1808:6;;:19;;;;;;;;;;;;;;;;;;1689:145::o:0;10331:150:5:-;1280:12:26;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7564:16:5::1;:14;:16::i;:::-;7594;;;;;;;;;;;7590:30;;;7612:8;::::0;::::1;7590:30;10465:9:::2;10448:14;:26;10442:3;:32;10430:9;:44;;;;10331:150:::0;:::o;13738:220::-;1280:12:26;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7368:17:5::1;:15;:17::i;:::-;7400:14;;;;;;;;;;;7395:29;;7416:8;::::0;::::1;7395:29;13852:27:::2;13867:11;13852:14;:27::i;:::-;13925:26;13939:11;13925:26;;;;;;;;;;;;;;;;;;;;;;13738:220:::0;:::o;8287:117::-;8337:4;8375:1;8361:10;;:15;;:35;;;;;8386:10;;8380:3;:16;8361:35;8353:44;;8287:117;:::o;3858:47::-;3901:4;3858:47;:::o;1066:77:26:-;1104:7;1130:6;;;;;;;;;;;1123:13;;1066:77;:::o;4441:25:5:-;;;;:::o;2407:85:30:-;2446:13;2478:7;2471:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2407:85;:::o;13014:159:5:-;1280:12:26;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7817:16:5::1;:14;:16::i;:::-;7843:17;:15;:17::i;:::-;7874:14;;;;;;;;;;;7870:28;;;7890:8;::::0;::::1;7870:28;7913:16;;;;;;;;;;;7908:31;;7931:8;::::0;::::1;7908:31;13104:4:::2;13087:14;;:21;;;;;;;;;;;;;;;;;;13131:1;13118:10;:14;;;;13147:19;13162:3;13147:19;;;;;;;;;;;;;;;;;;13014:159::o:0;14169:219::-;1280:12:26;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14343:7:5::1;:5;:7::i;:::-;14327:30;;:53;14358:21;14327:53;;;;;;;;;;;;;;;;;;;;;;;14320:61;;;;14169:219::o:0;562:79:23:-;609:25;615:10;627:6;609:5;:25::i;:::-;562:79;:::o;15065:132:5:-;15166:4;15182:8;;;3732:172:30;3818:4;3834:42;3844:12;:10;:12::i;:::-;3858:9;3869:6;3834:9;:42::i;:::-;3893:4;3886:11;;3732:172;;;;:::o;532:127:4:-;646:8;;;3962:149:30;4051:7;4077:11;:18;4089:5;4077:18;;;;;;;;;;;;;;;:27;4096:7;4077:27;;;;;;;;;;;;;;;;4070:34;;3962:149;;;;:::o;10950:152:5:-;1280:12:26;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7120:17:5::1;:15;:17::i;:::-;7151:14;;;;;;;;;;;7147:28;;;7167:8;::::0;::::1;7147:28;11086:9:::2;11069:14;:26;11063:3;:32;11050:10;:45;;;;10950:152:::0;:::o;8090:114::-;8139:4;8176:1;8163:9;;:14;;:33;;;;;8187:9;;8181:3;:15;8163:33;8155:42;;8090:114;:::o;1983:240:26:-;1280:12;:10;:12::i;:::-;1270:22;;:6;;;;;;;;;;;:22;;;1262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2091:1:::1;2071:22;;:8;:22;;;;2063:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180:8;2151:38;;2172:6;;;;;;;;;;;2151:38;;;;;;;;;;;;2208:8;2199:6;;:17;;;;;;;;;;;;;;;;;;1983:240:::0;:::o;867:176:29:-;925:7;944:9;960:1;956;:5;944:17;;984:1;979;:6;;971:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1035:1;1028:8;;;867:176;;;;:::o;2152:459::-;2210:7;2456:1;2451;:6;2447:45;;;2480:1;2473:8;;;;2447:45;2502:9;2518:1;2514;:5;2502:17;;2546:1;2541;2537;:5;;;;;;:10;2529:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2603:1;2596:8;;;2152:459;;;;;:::o;7829:370:30:-;7931:1;7912:21;;:7;:21;;;;7904:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7980:49;8009:1;8013:7;8022:6;7980:20;:49::i;:::-;8055:24;8072:6;8055:12;;:16;;:24;;;;:::i;:::-;8040:12;:39;;;;8110:30;8133:6;8110:9;:18;8120:7;8110:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;8089:9;:18;8099:7;8089:18;;;;;;;;;;;;;;;:51;;;;8176:7;8155:37;;8172:1;8155:37;;;8185:6;8155:37;;;;;;;;;;;;;;;;;;7829:370;;:::o;768:104:25:-;821:15;855:10;848:17;;768:104;:::o;9353:340:30:-;9471:1;9454:19;;:5;:19;;;;9446:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9551:1;9532:21;;:7;:21;;;;9524:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9633:6;9603:11;:18;9615:5;9603:18;;;;;;;;;;;;;;;:27;9622:7;9603:27;;;;;;;;;;;;;;;:36;;;;9670:7;9654:32;;9663:5;9654:32;;;9679:6;9654:32;;;;;;;;;;;;;;;;;;9353:340;;;:::o;7029:530::-;7152:1;7134:20;;:6;:20;;;;7126:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7235:1;7214:23;;:9;:23;;;;7206:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7288:47;7309:6;7317:9;7328:6;7288:20;:47::i;:::-;7366:71;7388:6;7366:71;;;;;;;;;;;;;;;;;:9;:17;7376:6;7366:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7346:9;:17;7356:6;7346:17;;;;;;;;;;;;;;;:91;;;;7470:32;7495:6;7470:9;:20;7480:9;7470:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7447:9;:20;7457:9;7447:20;;;;;;;;;;;;;;;:55;;;;7534:9;7517:35;;7526:6;7517:35;;;7545:6;7517:35;;;;;;;;;;;;;;;;;;7029:530;;;:::o;1725:187:29:-;1811:7;1843:1;1838;:6;;1846:12;1830:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1869:9;1885:1;1881;:5;1869:17;;1904:1;1897:8;;;1725:187;;;;;:::o;10016:88:30:-;10088:9;10076;;:21;;;;;;;;;;;;;;;;;;10016:88;:::o;10691:92::-;;;;:::o",
  "source": "pragma solidity ^0.6.10;\n\nimport \"./MRVToken.sol\";\n\n/**\n * MRVToken contract which adds unrestricted minting by anyone.\n *\n * Only useful on a testnet.\n */\ncontract TestnetMRVToken is MRVToken {\n\n    /**\n     * Make a new TestnetMRVToken.\n     * Passes through arguments to the base MRVToken constructor.\n     */\n    constructor(address payable sendProceedsTo, address sendTokensTo) MRVToken(sendProceedsTo, sendTokensTo) public {\n        // Nothing to do!\n    }\n\n   \n    /**\n     * Allow anyone to mint themselves any amount of tokens, for testing.\n     */\n    function mint(uint256 amount) public {\n        _mint(msg.sender, amount);\n    }\n\n}\n\n// SPDX-License-Identifier: UNLICENSED\n",
  "sourcePath": "/z/home/anovak/workspace/macroverse/contracts/TestnetMRVToken.sol",
  "ast": {
    "absolutePath": "/z/home/anovak/workspace/macroverse/contracts/TestnetMRVToken.sol",
    "exportedSymbols": {
      "TestnetMRVToken": [
        10565
      ]
    },
    "id": 10566,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10534,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:23"
      },
      {
        "absolutePath": "/z/home/anovak/workspace/macroverse/contracts/MRVToken.sol",
        "file": "./MRVToken.sol",
        "id": 10535,
        "nodeType": "ImportDirective",
        "scope": 10566,
        "sourceUnit": 737,
        "src": "26:24:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10537,
              "name": "MRVToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 736,
              "src": "184:8:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MRVToken_$736",
                "typeString": "contract MRVToken"
              }
            },
            "id": 10538,
            "nodeType": "InheritanceSpecifier",
            "src": "184:8:23"
          }
        ],
        "contractDependencies": [
          97,
          202,
          736,
          10610,
          10719,
          11491,
          11569
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 10536,
          "nodeType": "StructuredDocumentation",
          "src": "52:103:23",
          "text": " MRVToken contract which adds unrestricted minting by anyone.\n Only useful on a testnet."
        },
        "fullyImplemented": true,
        "id": 10565,
        "linearizedBaseContracts": [
          10565,
          736,
          97,
          202,
          10719,
          11491,
          11569,
          10610
        ],
        "name": "TestnetMRVToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10550,
              "nodeType": "Block",
              "src": "429:33:23",
              "statements": []
            },
            "documentation": {
              "id": 10539,
              "nodeType": "StructuredDocumentation",
              "src": "200:112:23",
              "text": " Make a new TestnetMRVToken.\n Passes through arguments to the base MRVToken constructor."
            },
            "id": 10551,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 10546,
                    "name": "sendProceedsTo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10541,
                    "src": "392:14:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 10547,
                    "name": "sendTokensTo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10543,
                    "src": "408:12:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 10548,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10545,
                  "name": "MRVToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 736,
                  "src": "383:8:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MRVToken_$736_$",
                    "typeString": "type(contract MRVToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "383:38:23"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 10544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10541,
                  "mutability": "mutable",
                  "name": "sendProceedsTo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10551,
                  "src": "329:30:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 10540,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "329:15:23",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10543,
                  "mutability": "mutable",
                  "name": "sendTokensTo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10551,
                  "src": "361:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10542,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "361:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "328:54:23"
            },
            "returnParameters": {
              "id": 10549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "429:0:23"
            },
            "scope": 10565,
            "src": "317:145:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10563,
              "nodeType": "Block",
              "src": "599:42:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10558,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "615:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "615:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10560,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10554,
                        "src": "627:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10557,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11367,
                      "src": "609:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "609:25:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10562,
                  "nodeType": "ExpressionStatement",
                  "src": "609:25:23"
                }
              ]
            },
            "documentation": {
              "id": 10552,
              "nodeType": "StructuredDocumentation",
              "src": "472:85:23",
              "text": " Allow anyone to mint themselves any amount of tokens, for testing."
            },
            "functionSelector": "a0712d68",
            "id": 10564,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 10555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10554,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10564,
                  "src": "576:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10553,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "576:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "575:16:23"
            },
            "returnParameters": {
              "id": 10556,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "599:0:23"
            },
            "scope": 10565,
            "src": "562:79:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 10566,
        "src": "156:488:23"
      }
    ],
    "src": "0:685:23"
  },
  "legacyAST": {
    "absolutePath": "/z/home/anovak/workspace/macroverse/contracts/TestnetMRVToken.sol",
    "exportedSymbols": {
      "TestnetMRVToken": [
        10565
      ]
    },
    "id": 10566,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10534,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:23"
      },
      {
        "absolutePath": "/z/home/anovak/workspace/macroverse/contracts/MRVToken.sol",
        "file": "./MRVToken.sol",
        "id": 10535,
        "nodeType": "ImportDirective",
        "scope": 10566,
        "sourceUnit": 737,
        "src": "26:24:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10537,
              "name": "MRVToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 736,
              "src": "184:8:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MRVToken_$736",
                "typeString": "contract MRVToken"
              }
            },
            "id": 10538,
            "nodeType": "InheritanceSpecifier",
            "src": "184:8:23"
          }
        ],
        "contractDependencies": [
          97,
          202,
          736,
          10610,
          10719,
          11491,
          11569
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 10536,
          "nodeType": "StructuredDocumentation",
          "src": "52:103:23",
          "text": " MRVToken contract which adds unrestricted minting by anyone.\n Only useful on a testnet."
        },
        "fullyImplemented": true,
        "id": 10565,
        "linearizedBaseContracts": [
          10565,
          736,
          97,
          202,
          10719,
          11491,
          11569,
          10610
        ],
        "name": "TestnetMRVToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10550,
              "nodeType": "Block",
              "src": "429:33:23",
              "statements": []
            },
            "documentation": {
              "id": 10539,
              "nodeType": "StructuredDocumentation",
              "src": "200:112:23",
              "text": " Make a new TestnetMRVToken.\n Passes through arguments to the base MRVToken constructor."
            },
            "id": 10551,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 10546,
                    "name": "sendProceedsTo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10541,
                    "src": "392:14:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 10547,
                    "name": "sendTokensTo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10543,
                    "src": "408:12:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 10548,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10545,
                  "name": "MRVToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 736,
                  "src": "383:8:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MRVToken_$736_$",
                    "typeString": "type(contract MRVToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "383:38:23"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 10544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10541,
                  "mutability": "mutable",
                  "name": "sendProceedsTo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10551,
                  "src": "329:30:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 10540,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "329:15:23",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10543,
                  "mutability": "mutable",
                  "name": "sendTokensTo",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10551,
                  "src": "361:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10542,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "361:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "328:54:23"
            },
            "returnParameters": {
              "id": 10549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "429:0:23"
            },
            "scope": 10565,
            "src": "317:145:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10563,
              "nodeType": "Block",
              "src": "599:42:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10558,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "615:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "615:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10560,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10554,
                        "src": "627:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10557,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11367,
                      "src": "609:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "609:25:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10562,
                  "nodeType": "ExpressionStatement",
                  "src": "609:25:23"
                }
              ]
            },
            "documentation": {
              "id": 10552,
              "nodeType": "StructuredDocumentation",
              "src": "472:85:23",
              "text": " Allow anyone to mint themselves any amount of tokens, for testing."
            },
            "functionSelector": "a0712d68",
            "id": 10564,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 10555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10554,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 10564,
                  "src": "576:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10553,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "576:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "575:16:23"
            },
            "returnParameters": {
              "id": 10556,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "599:0:23"
            },
            "scope": 10565,
            "src": "562:79:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 10566,
        "src": "156:488:23"
      }
    ],
    "src": "0:685:23"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.10+commit.00c0fcaf.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0xf82aa3c8d92a1044b702b0c9718bd99d353a4a85a215bdb4fe6c6a04b5f541e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "time",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "name": "CrowdsaleOpen",
          "type": "event"
        },
        "0xd240e127ddfc99c27bdd1c45b264d1954a1e2bdb17a4c37e81586fd141288261": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "time",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "indexed": false,
              "name": "etherAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "indexed": false,
              "name": "from",
              "type": "address",
              "internalType": "address"
            }
          ],
          "name": "TokenPurchase",
          "type": "event"
        },
        "0x99424d4740b41446c45fa894e3dda8489b8ef8df8a37f8035f83053ed26485c1": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "time",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "name": "CrowdsaleClose",
          "type": "event"
        },
        "0xed6150ec960548590c920ded6ef554ec9e451dd7b4c85f62fb3760812cd72cf1": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "newDecimals",
              "type": "uint8",
              "internalType": "uint8"
            }
          ],
          "name": "DecimalChange",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address",
              "internalType": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x45fADE0eF81524c32B129D8dcb8da205fE729A2F",
      "transactionHash": "0x633061800b0ba9599a36d250d16f9eadf1796a96640d86b9d1f4c923234cfc2e"
    }
  },
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-06-12T02:44:30.419Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "reclaimContract(address)": {
        "details": "Reclaim ownership of Ownable contracts",
        "params": {
          "contractAddr": "The address of the Ownable to be reclaimed."
        }
      },
      "reclaimToken(address)": {
        "details": "Reclaim all IERC20 compatible tokens",
        "params": {
          "tokenAddr": "address The address of the token contract"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "tokenFallback(address,uint256,bytes)": {
        "details": "Reject all ERC23 compatible tokens"
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "checkCloseTimer()": {
        "notice": "If the close timer has elapsed, stop the crowdsale."
      },
      "checkOpenTimer()": {
        "notice": "If the open timer has elapsed, start the crowdsale. Can be called by people, but also gets called when people try to contribute."
      },
      "clearCrowdsaleCloseTimer()": {
        "notice": "Let the owner stop the crowdsale close timer, as long as it has not yet expired."
      },
      "clearCrowdsaleOpenTimer()": {
        "notice": "Let the owner stop the crowdsale open timer, as long as the crowdsale has not yet opened."
      },
      "closeCrowdsale()": {
        "notice": "Allow the owner to end the crowdsale manually."
      },
      "closeTimerElapsed()": {
        "notice": "Determine if the crowdsale should close by timer."
      },
      "constructor": "Make a new TestnetMRVToken. Passes through arguments to the base MRVToken constructor.",
      "decreaseAllowance(address,uint256)": {
        "notice": "Block the decreaseAllowance method which is not in the mainned deployed contract, but which OZ added to their library after we deployed."
      },
      "increaseAllowance(address,uint256)": {
        "notice": "Block the increaseAllowance method which is not in the mainned deployed contract, but which OZ added to their library after we deployed."
      },
      "isCrowdsaleActive()": {
        "notice": "Determine if the crowdsale is currently happening."
      },
      "mint(uint256)": {
        "notice": "Allow anyone to mint themselves any amount of tokens, for testing."
      },
      "openCrowdsale()": {
        "notice": "Allow the owner to start the crowdsale manually."
      },
      "openTimerElapsed()": {
        "notice": "Determine if the crowdsale should open by timer."
      },
      "reclaimEther()": {
        "notice": "If Ether somehow manages to get into this contract, provide a way to get it out again. During normal crowdsale operation, ETH is immediately forwarded to the beneficiary."
      },
      "setCrowdsaleCloseTimerFor(uint256)": {
        "notice": "Let the owner start the timer for the crowdsale end. Counts from when the function is called, *not* from the start of the crowdsale. It is possible, but a bad idea, to set this before the open timer."
      },
      "setCrowdsaleOpenTimerFor(uint256)": {
        "notice": "Let the owner start the timer for the crowdsale start. Without further owner intervention, anyone will be able to open the crowdsale when the timer expires. Further calls will re-set the timer to count from the time the transaction is processed. The timer can be re-set after it has tripped, unless someone has already opened the crowdsale."
      },
      "setDecimals(uint8)": {
        "notice": "When the crowdsale is finished, the contract owner may adjust the decimal places for display purposes. This should work like a 10-to-1 split or reverse-split. The point of this mechanism is to keep the individual MRV tokens from getting inconveniently valuable or cheap. However, it relies on the contract owner taking the time to update the decimal place value. Note that this changes the decimals IMMEDIATELY with NO NOTICE to users."
      },
      "setMaxSupply(uint256)": {
        "notice": "Before the crowdsale opens, the max token count can be configured."
      }
    },
    "notice": "MRVToken contract which adds unrestricted minting by anyone. Only useful on a testnet."
  }
}